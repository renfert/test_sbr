{"version":3,"sources":["webpack:///./node_modules/aws-sdk/lib/protocol/json.js","webpack:///./node_modules/aws-sdk/lib/util.js","webpack:///./node_modules/aws-sdk/lib/signers/request_signer.js","webpack:///./node_modules/aws-sdk/lib/xml/browser_parser.js","webpack:///./node_modules/aws-sdk/lib/model/resource_waiter.js","webpack:///./node_modules/aws-sdk/lib/signers/v2.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/index.js","webpack:///./node_modules/aws-sdk/lib/signers/v4_credentials.js","webpack:///./node_modules/aws-sdk/lib/signers/presign.js","webpack:///./node_modules/aws-sdk/lib/json/builder.js","webpack:///./node_modules/aws-sdk/lib/services/cognitoidentity.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest.js","webpack:///./node_modules/aws-sdk/lib/signers/v4.js","webpack:///./node_modules/aws-sdk/lib/http/xhr.js","webpack:///./node_modules/aws-sdk/browser.js","webpack:///./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js","webpack:///./node_modules/aws-sdk/lib/signers/v3.js","webpack:///./node_modules/aws-sdk/lib/http.js","webpack:///./node_modules/aws-sdk/lib/core.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-element.js","webpack:///./node_modules/aws-sdk/lib/signers/s3.js","webpack:///./node_modules/aws-sdk/lib/credentials/temporary_credentials.js","webpack:///./node_modules/aws-sdk/lib/model/paginator.js","webpack:///./node_modules/aws-sdk/lib/model/collection.js","webpack:///./node_modules/aws-sdk/lib/param_validator.js","webpack:///./node_modules/aws-sdk/lib/services/s3.js","webpack:///./node_modules/aws-sdk/lib/signers/v3https.js","webpack:///./node_modules/aws-sdk/lib/discover_endpoint.js","webpack:///./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js","webpack:///./node_modules/aws-sdk/lib/api_loader.js","webpack:///./node_modules/aws-sdk/lib/config_regional_endpoint.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-node.js","webpack:///./node_modules/aws-sdk/lib/response.js","webpack:///./node_modules/aws-sdk/lib/config.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-text.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-event.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_xml.js","webpack:///./node_modules/aws-sdk/lib/sequential_executor.js","webpack:///./node_modules/aws-sdk/lib/query/query_param_serializer.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js","webpack:///./node_modules/aws-sdk/lib/json/parser.js","webpack:///./node_modules/aws-sdk/lib/request.js","webpack:///./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js","webpack:///./node_modules/aws-sdk/lib/service.js","webpack:///./node_modules/aws-sdk/clients/cognitoidentity.js","webpack:///./node_modules/aws-sdk/lib/protocol/helpers.js","webpack:///./node_modules/aws-sdk/lib/browser_loader.js","webpack:///./node_modules/aws-sdk/lib/event-stream/split-message.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-attribute.js","webpack:///./node_modules/aws-sdk/lib/model/shape.js","webpack:///./node_modules/aws-sdk/lib/event-stream/int64.js","webpack:///./node_modules/aws-sdk/lib/browserHashUtils.js","webpack:///./node_modules/aws-sdk/lib/resource_waiter.js","webpack:///./node_modules/aws-sdk/lib/s3/managed_upload.js","webpack:///./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js","webpack:///./node_modules/aws-sdk/clients/s3.js","webpack:///./node_modules/aws-sdk/lib/event_listeners.js","webpack:///./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js","webpack:///./node_modules/aws-sdk/lib/credentials/saml_credentials.js","webpack:///./node_modules/aws-sdk/lib/xml/builder.js","webpack:///./node_modules/aws-sdk/lib/browserSha1.js","webpack:///./node_modules/aws-sdk/lib/browserMd5.js","webpack:///./node_modules/aws-sdk/lib/services/sts.js","webpack:///./node_modules/aws-sdk/lib/browserSha256.js","webpack:///./node_modules/aws-sdk/lib/protocol/query.js","webpack:///./node_modules/aws-sdk/lib/model/operation.js","webpack:///./node_modules/aws-sdk/lib/realclock/browserClock.js","webpack:///./node_modules/aws-sdk/lib/region_config.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-message.js","webpack:///./node_modules/aws-sdk/lib/browserCryptoLib.js","webpack:///./node_modules/aws-sdk/lib/model/api.js","webpack:///./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js","webpack:///./node_modules/aws-sdk/clients/sts.js","webpack:///./node_modules/aws-sdk/lib/credentials.js","webpack:///./node_modules/aws-sdk/lib/state_machine.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_json.js","webpack:///./node_modules/aws-sdk/lib/browserHmac.js"],"names":["util","JsonBuilder","JsonParser","populateHostPrefix","buildRequest","req","httpRequest","api","service","target","targetPrefix","operations","operation","name","version","jsonVersion","input","builder","body","build","params","headers","extractError","resp","error","httpResponse","code","split","length","e","JSON","parse","toString","__type","pop","message","Message","statusCode","statusMessage","Error","extractData","request","config","convertResponseTypes","data","shape","output","parser","module","exports","AWS","environment","engine","isBrowser","navigator","userAgent","process","platform","AWS_EXECUTION_ENV","agent","VERSION","uriEscape","string","encodeURIComponent","replace","escape","ch","charCodeAt","toUpperCase","uriEscapePath","parts","arrayEach","part","push","join","urlParse","url","urlFormat","format","queryStringParse","qs","querystring","queryParamsToString","items","sortedKeys","Object","keys","sort","value","ename","result","Array","isArray","vals","item","undefined","readFileSync","path","base64","encode","buf","buffer","toBuffer","decode","encoding","Buffer","from","Uint8Array","alloc","size","fill","toStream","isBuffer","readable","stream","pos","_read","end","slice","concat","buffers","i","offset","copy","byteLength","lstatSync","object","upperFirst","substr","lowerFirst","toLowerCase","ini","currentSection","map","line","section","match","fn","noop","callback","err","makeAsync","expectedArgs","args","prototype","call","arguments","apply","date","getDate","systemClockOffset","Date","getTime","iso8601","toISOString","rfc822","toUTCString","unixTimestamp","formatter","parseTimestamp","crypto","crc32Table","crc32","tbl","crc","readUInt8","hmac","key","digest","lib","createHmac","update","md5","hash","sha256","algorithm","createHash","sliceFn","arraySliceFn","ArrayBuffer","on","chunk","FileReader","out","index","reader","onerror","onload","_continueReading","back","readAsArrayBuffer","toHex","abort","each","iterFunction","hasOwnProperty","ret","this","array","idx","parseInt","obj1","obj2","merge","dupe","isEmpty","obj","prop","webkitSlice","mozSlice","isType","type","typeName","str","options","originalError","stack","defineProperty","writable","enumerable","String","time","inherit","klass","features","newObject","ctor","constructor","__super__","mixin","hideProperties","props","configurable","property","isValue","opts","get","memoizedProperty","cachedValue","hoistPayloadMember","operationName","payload","hasEventOutput","payloadMember","members","responsePayload","computeSha256","done","isNode","Stream","fs","settings","start","createReadStream","sha","isClockSkewed","serverTime","Math","abs","applyClockOffset","extractRequestId","requestId","ResponseMetadata","RequestId","addPromises","constructors","PromiseDependency","deletePromises","getPromisesDependency","Promise","ind","deletePromisesFromClass","addPromisesToClass","promisifyMethod","methodName","self","resolve","reject","isDualstackAvailable","metadata","serviceIdentifier","dualstackAvailable","calculateRetryDelay","retryCount","retryDelayOptions","customBackoff","base","delay","random","pow","handleRequestWithRetries","cb","http","HttpClient","getInstance","httpOptions","errCallback","maxRetries","retryable","setTimeout","sendRequest","retryAfter","handleRequest","defer","uuid","v4","convertPayloadToString","rules","nextTick","setImmediate","getRequestPayloadShape","getProfilesFromSharedConfig","iniLoader","filename","profiles","profilesFromConfig","configOptInEnv","loadFrom","isConfig","sharedConfigFileEnv","profilesFromCreds","sharedCredentialsFileEnv","profileNames","ARN","validate","indexOf","arn","matched","partition","region","accountId","resource","arnObject","defaultProfile","imdsDisabledEnv","Signers","RequestSigner","setServiceClientId","id","serviceClientId","getServiceClientId","getVersion","V2","V3","V4","S3","V3Https","Shape","DomXmlParser","getElementByTagName","xml","tag","elements","getElementsByTagName","iLen","parentNode","parseXml","parseStructure","parseMap","parseList","parseUnknown","parseScalar","memberName","memberShape","isXmlAttribute","attributes","textContent","xmlChild","flattened","xmlNoDefaultLists","defaultValue","xmlKey","xmlValue","tagName","child","firstElementChild","nodeName","nextElementSibling","member","getAttribute","create","text","toType","childNodes","window","DOMParser","parseFromString","syntaxError","documentElement","isError","errorElement","ActiveXObject","async","loadXML","ResourceWaiter","waiter","forEach","addAuthorization","credentials","r","Timestamp","SignatureVersion","SignatureMethod","AWSAccessKeyId","accessKeyId","sessionToken","SecurityToken","Signature","signature","secretAccessKey","stringToSign","method","endpoint","host","pathname","LRU_1","CACHE_SIZE","EndpointCache","maxSize","cache","LRUCache","put","keyString","getKeyString","endpointRecord","populateValue","now","records","record","Expire","remove","identifiers","identifierNames","identifierName","endpoints","Address","CachePeriodInMinutes","empty","cachedSecret","cacheQueue","maxCacheEntries","v4Identifier","createScope","serviceName","getSigningKey","shouldCache","credsIdentifier","cacheKey","kDate","kRegion","kService","signingKey","shift","emptyCache","expiresHeader","signedUrlBuilder","expires","signerClass","getSignerClass","getSkewCorrectedDate","signedUrlSigner","parsedUrl","queryParams","search","auth","rest","Presign","sign","expireTime","removeListener","EventListeners","Core","SET_CONTENT_LENGTH","COMPUTE_SHA256","emit","response","translate","translateStructure","translateMap","translateList","translateScalar","structure","struct","location","locationName","isLocationName","list","toWireFormat","stringify","CognitoIdentity","getOpenIdToken","makeUnauthenticatedRequest","getId","getCredentialsForIdentity","populateMethod","httpMethod","generateURI","endpointPath","operationPath","uri","queryString","queryStringSet","paramValue","regex","RegExp","_","plus","val","populateURI","httpPath","populateHeaders","memberValue","isJsonValue","k","v","header","pattern","v4Credentials","signatureCache","signatureVersion","datetime","isPresigned","updateForPresigned","addHeaders","authorization","credString","credentialString","signedHeaders","isSignableHeader","lowerKey","sep","hexEncodedHash","canonicalString","canonicalHeaders","hexEncodedBodyHash","a","b","canonicalHeaderValues","values","unsignableHeaders","EventEmitter","XHRClient","emitter","href","protocol","hostname","port","xhr","XMLHttpRequest","headersEmitted","addEventListener","status","readyState","HEADERS_RECEIVED","parseHeaders","getAllResponseHeaders","statusText","DONE","finishRequest","upload","evt","open","xhrAsync","setRequestHeader","timeout","xhrWithCredentials","withCredentials","responseType","send","rawHeaders","substring","ab","view","responseText","streamsApiVersion","eventMessageChunker","parseEvent","createEventStream","model","eventMessages","events","headersToSign","h","trim","Endpoint","useSSL","sslEnabled","HttpRequest","_userAgent","setUserAgent","getUserAgentHeaderName","prefix","appendToUserAgent","agentPartial","getUserAgent","query","updateEndpoint","endpointStr","newEndpoint","HttpResponse","streaming","createUnbufferedStream","singleton","_hidden","Protocol","Json","Query","Rest","RestJson","RestXml","XML","Builder","Parser","Model","Api","Operation","Paginator","apiLoader","SequentialExecutor","endpointCacheSize","escapeElement","subResources","responseHeaders","canonicalizedAmzHeaders","canonicalizedResource","amzHeaders","virtualHostedBucket","resources","param","subresource","decodeURIComponent","res","secret","STS","TemporaryCredentials","Credentials","masterCredentials","loadMasterCredentials","expired","RoleArn","RoleSessionName","refresh","coalesceRefresh","load","createClients","assumeRole","getSessionToken","credentialsFrom","paginator","input_token","limit_key","more_results","output_token","result_key","memoize","factory","nameTr","Collection","iterable","ParamValidator","validation","context","errors","validateMember","msg","fail","validateStructure","paramName","validateType","required","memberContext","validateList","validateMap","validateScalar","validateRange","mapCount","validateString","validatePayload","validateNumber","validTypes","validateEnum","validatePattern","validateUri","test","descriptor","acceptedTypes","foundInvalidType","acceptedType","vowel","castedValue","parseFloat","Blob","types","resolveRegionalEndpointsFlag","regionUtil","operationsWith200StatusCodeError","regionRedirectErrorCodes","getSignatureVersion","defaultApiVersion","userDefinedVersion","_originalConfig","regionDefinedVersion","validateService","messages","s3BucketEndpoint","shouldDisableBodySigning","s3DisableBodySigning","setupRequestListeners","prependListener","addListener","validateScheme","validateBucketName","optInUsEast1RegionalEndpoint","VALIDATE_REGION","addContentType","computeContentMd5","computeSseCustomerKeyMd5","addExpect100Continue","extractErrorFrom200Response","prepareSignedUrl","disableBodySigning","isAccessPointApplicable","validateAccessPointArn","validateArnRegion","populateUriFromAccessPoint","validateBucketEndpoint","correctBucketRegionFromCache","onAsync","requestBucketRegion","reqRegionForNetworkingError","scheme","sensitive","SSECustomerKey","CopySourceSSECustomerKey","Bucket","inputShape","inputMembers","parsedArn","_parsedAccessPointArn","delimiter","accessPoint","accessPointPrefix","isDnsCompatible","useArnRegion","loadUseArnRegionConfig","regionFromArn","clientRegion","getEndpointSuffix","useAccelerateEndpoint","envName","configName","originalConfig","s3UseArnRegion","profile","AWS_PROFILE","bucket","Key","slashIndex","isValidAccelerateOperation","invalidOperations","s3UsEast1RegionalEndpoint","env","sharedConfig","clientConfig","insertPoint","regionalEndpoint","pathStyleBucketName","useDualstack","removeVirtualHostedBucketFromPath","encodedS3Key","s3ForcePathStyle","accessPointArn","dnsSuffix","encodedArn","len","Body","contentType","replaceFn","charsetName","charset","computableChecksumOperations","putBucketCors","putBucketLifecycle","putBucketLifecycleConfiguration","putBucketTagging","deleteObjects","putBucketReplication","putObjectLegalHold","putObjectRetention","putObjectLockConfiguration","willComputeChecksums","computeChecksums","ContentMD5","bucketName","domain","ipAddress","dots","retryableError","_requestRegionForBucket","bucketRegionCache","updateReqBucketRegion","_super","Service","s3Config","newConfig","Host","_asm","currentState","LocationConstraint","createBucketConfiguration","CreateBucketConfiguration","clearBucketRegionCache","extractRequestIds","cachedRegion","codes","304","403","400","404","Region","Code","reqOperation","reqParams","MaxKeys","regionReq","getRegionReq","listObjects","buckets","requestRegion","extendedRequestId","cfId","getSignedUrl","Expires","makeRequest","presign","createPresignedPost","boundParams","finalizePost","fields","preparePostFields","Fields","Conditions","getCredentials","conditions","expiresInSeconds","signingDate","shortDate","scope","credential","field","condition","Policy","preparePostPolicy","valueOf","expiration","noPresignedContentLength","ContentLength","createBucket","copiedParams","globalEndpoint","uploader","ManagedUpload","getSignedUrlPromise","endpointDiscoveryEnabledEnvs","getCacheKey","serviceId","marshallCustomIdentifiersHelper","endpointDiscoveryId","marshallCustomIdentifiers","optionalDiscoverEndpoint","operationModel","endpointCache","endpointRequest","endpointOperation","Identifiers","addApiVersionHeader","VALIDATE_PARAMETERS","RETRY_CHECK","Endpoints","requestQueue","requiredDiscoverEndpoint","cacheKeyStr","pendingRequests","requestContext","apiVersion","invalidateCachedEndpoints","hasCustomEndpoint","client","endpointDiscoveryEnabled","svcConfig","Boolean","isFalsy","resolveEndpointDiscoveryConfig","configFile","sharedFileConfig","endpoint_discovery_enabled","discoverEndpoint","isEndpointDiscoveryRequired","endpointDiscoveryRequired","isEnabled","hasRequiredEndpointDiscovery","addNamedListener","className","invalidateCachedEndpoint","WebIdentityCredentials","_clientConfig","assumeRoleWithWebIdentity","stsConfig","svc","services","validateRegionalEndpointsFlagValue","configValue","errorOptions","resolved","envFlag","fileFlag","escapeAttribute","XmlNode","children","addAttribute","addChildNode","removeAttribute","hasChildren","xmlText","attributeNames","attributeName","attribute","c","jmespath","Response","redirectCount","numRetries","maxRedirects","nextPage","paginationConfig","hasNextPage","nextPageTokens","inputTokens","inputToken","cacheNextPageTokens","moreResults","exprs","outputToken","expr","PromisesDependency","Config","extractCredentials","set","finish","credError","getAsyncCredentials","getStaticCredentials","credentialProvider","creds","allowUnknownKeys","hasService","loadFromPath","clear","fileSystemCreds","FileSystemCredentials","chain","CredentialProviderChain","providers","unshift","logger","apiVersions","paramValidation","correctClockSkew","customUserAgent","dynamoDbCrc32","clientSideMonitoring","hostPrefixEnabled","stsRegionalEndpoints","setPromisesDependency","dep","Request","XmlText","parseMessage","parsedMessage","messageType","parseError","eventType","eventModel","eventPayloadMemberName","payloadShape","eventHeaderNames","eventHeaderMemberNames","errorCode","errorMessage","populateBody","rootElement","toXML","Errors","isEventStream","isStreaming","_events","listeners","eventName","listener","toHead","_isAsync","position","splice","removeAllListeners","eventArgs","doneCallback","count","callListeners","prevError","callNextListener","_haltHandlersOnError","addListeners","event","callbacks","addNamedAsyncListener","addNamedListeners","QueryParamSerializer","ucfirst","isQueryName","serializeStructure","serializeMember","serializeMap","keyName","valueName","serializeList","memberRules","n","suffix","serialize","LinkedListNode","nodeMap","sizeLimit","prependToList","node","headerNode","prev","next","tailNode","removeFromTail","prevNode","detachFromList","key_1","newNode","shapeMembers","AcceptorStateMachine","hardErrorStates","success","complete","isTerminalState","machine","fsm","setupStates","transition","Domain","domainEmitter","domainThrown","addState","isGlobalEndpoint","signingRegion","active","startTime","states","emitEvent","runTo","state","didCallback","_abortCallback","eachPage","wrappedCallback","eachItem","resultKey","continueIteration","isPageable","streams","PassThrough","sent","HTTP_DATA","HTTP_ERROR","expectedLen","shouldCheckContentLength","isNaN","receivedLen","checkContentLengthAndEmit","httpStream","lengthAccumulator","_write","unpipe","pipe","arg","eventParameters","origEmit","toGet","toUnauthenticated","_unAuthenticated","VALIDATE_CREDENTIALS","SIGN","buildAsGet","haltHandlersOnError","promise","CognitoIdentityCredentials","localStorageKey","_identityId","loadCachedId","IdentityId","identityId","clearIdOnNotAuthorized","getCredentialsFromSTS","clearCachedId","poolId","IdentityPoolId","loginId","LoginId","storage","cognito","loadCredentials","AccessKeyId","SecretKey","SessionToken","Expiration","cacheId","WebIdentityToken","Token","webIdentityCredentials","webErr","sts","getStorage","Logins","actualProviders","cachedProviders","intersect","filter","cognitoConfig","setStorage","localStorage","regionConfig","clientCount","loadServiceClass","ServiceClass","_clientId","initialize","configureEndpoint","endpointFromTemplate","setEndpoint","addDefaultMonitoringListeners","_clientSideMonitoring","publisher","eventHandler","serviceConfig","apiConfig","defineServiceApi","getLatestServiceClass","getLatestServiceVersion","selectedVersion","defaultRetryCount","customizeRequests","customRequestHandler","addAllRequestListeners","attachMonitoringEmitter","waitFor","wait","serviceInterface","CorePost","Logger","apiCallEvent","monitoringEvent","Type","Version","endpointPrefix","MaxRetriesExceeded","UserAgent","FinalHttpStatusCode","FinalAwsException","FinalAwsExceptionMessage","FinalSdkException","FinalSdkExceptionMessage","apiAttemptEvent","Fqdn","HttpStatusCode","AccessKey","XAmznRequestId","XAmzRequestId","XAmzId2","attemptFailEvent","AwsException","AwsExceptionMessage","SdkException","SdkExceptionMessage","attemptTimestamp","attemptStartRealTime","attemptLatency","callStartRealTime","callTimestamp","attemptCount","addToHead","realClock","round","AttemptLatency","AttemptCount","latency","Latency","authtype","successfulResponse","retryDelays","timeoutError","networkingError","expiredCredentialsError","throttledError","clockSkewError","newServerTime","throwException","defineMethods","defineService","versions","_serviceMap","addVersions","identifier","Publisher","configProvider","publisherConfig","enabled","superclass","setApi","isApi","attachOn","baseClass","getPrototypeOf","paginators","pagination","hasEndpointDiscover","hostPrefix","hostPrefixNotation","expandHostPrefix","prependEndpointPrefix","validateHostname","isEndpointOperation","hostLabel","labels","hostPattern","label","browser","PRELUDE_MEMBER_LENGTH","PRELUDE_LENGTH","CHECKSUM_LENGTH","MINIMUM_MESSAGE_LENGTH","splitMessage","readUInt32BE","expectedPreludeChecksum","expectedMessageChecksum","headersStart","headersEnd","enum","min","max","xmlName","queryName","requiresLength","isComposite","idempotencyToken","jsonvalue","eventstream","eventpayload","eventheader","timestampFormat","isTimestampFormatSet","endpointdiscoveryid","documentation","documentationUrl","xmlAttribute","CompositeShape","StructureShape","requiredMap","firstInit","isShape","xmlOrder","memberNames","isEventPayload","isEventHeader","resultWrapper","xmlNamespace","ListShape","oldName","MapShape","TimestampShape","StringShape","nullLessProtocols","FloatShape","IntegerShape","BinaryShape","isSensitive","secureBuf","Base64Shape","BooleanShape","normalizedTypes","character","double","long","short","biginteger","bigdecimal","blob","refShape","shapes","filteredKeys","InlineShape","origType","Int64","bytes","negate","fromNumber","number","remaining","negative","isView","viewStrings","isEmptyData","convertToBuffer","byteOffset","BYTES_PER_ELEMENT","CHECK_ACCEPTORS","_waiter","acceptors","acceptorMatched","acceptor","matcher","matchers","expected","argument","setSuccess","setError","loadWaiterConfig","strictDeepEqual","pathAll","results","numResults","pathAny","add","retryDelay","$waiter","maxAttempts","waiters","completeInfo","fillQueue","configure","partSize","minPartSize","queueSize","leavePartsOnError","tags","bindServiceObject","validateBody","adjustTotalBytes","maxTotalParts","failed","runFill","fillBuffer","fillStream","partBuffers","cleanup","isDoneChunking","numParts","totalPartNumbers","doneParts","finishMultiPart","singlePart","totalBytes","newPartSize","ceil","partPos","totalChunkedBytes","totalUploadedBytes","activeParts","multipartReq","partBufferLength","bodyLen","nextChunk","endPos","read","pbuf","isDoneSending","partNumber","Tagging","getTaggingHeader","putObject","_managedUpload","progress","finishSinglePart","ETag","UploadId","uploadPart","queueChunks","createMultipartUpload","kvPairStrings","Value","partParams","PartNumber","partInfo","_lastUploadedBytes","resume","abortMultipartUpload","completeParams","MultipartUpload","Parts","completeMultipartUpload","Location","putObjectTagging","TagSet","d","httpReq","info","loaded","total","ChainableTemporaryCredentials","tokenCodeFn","SerialNumber","getTokenCode","tokenCode","TokenCode","token","DISCOVER_ENDPOINT","getOperationAuthtype","addAsync","idempotentMembers","SignerClass","signer","signingName","signedAt","httpResp","errCode","executeSend","timeDiff","numBytes","dateHeader","redirect","willRetry","errno","buildMessage","log","write","filterSensitiveLog","subShapeName","subShape","delta","ansi","isTTY","censoredParams","inspect","defaultProviders","resolveCallbacks","resolveNext","provider","getErr","resolvePromise","SAMLCredentials","assumeRoleWithSAML","XmlBuilder","serializeScalar","element","applyNamespaces","entry","entryKey","entryValue","isRoot","xmlNamespaceUri","xmlNamespacePrefix","noEmpty","hashUtils","BLOCK_SIZE","DIGEST_LENGTH","Uint32Array","Sha1","h0","h1","h2","h3","h4","block","totalLength","finished","byte","processBlock","s","outView","DataView","setUint32","w","f","temp","Md5","bufferLength","bytesHashed","cmn","q","x","t","ff","gg","hh","ii","sourceData","setUint8","hashBuffer","_a","undecoratedLength","bitsHashed","floor","buff","getUint32","ENV_REGIONAL_ENDPOINT_ENABLED","CONFIG_REGIONAL_ENDPOINT_ENABLED","SecretAccessKey","optInRegionalEndpoint","KEY","MAX_HASHABLE_LENGTH","Sha256","Int32Array","bufferView","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","Action","origRules","tmp","_XAMZRequestId","requestIdShape","requestUri","endpointdiscovery","isIdempotent","hasEventStream","topLevelShape","performance","generateRegionPrefix","derivedKeys","regionPrefix","applyConfig","patterns","regionRegexes","defaultSuffix","regexes","regionPattern","BOOLEAN_TAG","BYTE_TAG","SHORT_TAG","INT_TAG","LONG_TAG","BINARY_TAG","STRING_TAG","TIMESTAMP_TAG","UUID_TAG","nameLength","readInt8","readInt16BE","readInt32BE","binaryLength","readUInt16BE","stringLength","uuidChars","parsed","Hmac","alg","createSign","addEndpointOperation","endpointoperation","serviceAbbreviation","serviceFullName","refreshCallbacks","expiryWindow","needsRefresh","currentTime","adjustedTime","sync","getPromise","refreshPromise","finalState","bindObject","inputError","accept","acceptState","failState","applyContentTypeHeader","isBinary","hashCtor","outer","inner","bufferFromSecret","bufferHash","toHash"],"mappings":"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","file":"js/npm.aws-sdk.67177a1aa23707b22e74.js","sourcesContent":["var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      if (e.__type || e.code) {\n        error.code = (e.__type || e.code).split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","/* eslint guard-for-in:0 */\nvar AWS;\n\n/**\n * A set of utility methods for use with the AWS SDK.\n *\n * @!attribute abort\n *   Return this value from an iterator function {each} or {arrayEach}\n *   to break out of the iteration.\n *   @example Breaking out of an iterator function\n *     AWS.util.each({a: 1, b: 2, c: 3}, function(key, value) {\n *       if (key == 'b') return AWS.util.abort;\n *     });\n *   @see each\n *   @see arrayEach\n * @api private\n */\nvar util = {\n  environment: 'nodejs',\n  engine: function engine() {\n    if (util.isBrowser() && typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      var engine = process.platform + '/' + process.version;\n      if (process.env.AWS_EXECUTION_ENV) {\n        engine += ' exec-env/' + process.env.AWS_EXECUTION_ENV;\n      }\n      return engine;\n    }\n  },\n\n  userAgent: function userAgent() {\n    var name = util.environment;\n    var agent = 'aws-sdk-' + name + '/' + require('./core').VERSION;\n    if (name === 'nodejs') agent += ' ' + util.engine();\n    return agent;\n  },\n\n  uriEscape: function uriEscape(string) {\n    var output = encodeURIComponent(string);\n    output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n\n    // AWS percent-encodes some extra non-standard characters in a URI\n    output = output.replace(/[*]/g, function(ch) {\n      return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    });\n\n    return output;\n  },\n\n  uriEscapePath: function uriEscapePath(string) {\n    var parts = [];\n    util.arrayEach(string.split('/'), function (part) {\n      parts.push(util.uriEscape(part));\n    });\n    return parts.join('/');\n  },\n\n  urlParse: function urlParse(url) {\n    return util.url.parse(url);\n  },\n\n  urlFormat: function urlFormat(url) {\n    return util.url.format(url);\n  },\n\n  queryStringParse: function queryStringParse(qs) {\n    return util.querystring.parse(qs);\n  },\n\n  queryParamsToString: function queryParamsToString(params) {\n    var items = [];\n    var escape = util.uriEscape;\n    var sortedKeys = Object.keys(params).sort();\n\n    util.arrayEach(sortedKeys, function(name) {\n      var value = params[name];\n      var ename = escape(name);\n      var result = ename + '=';\n      if (Array.isArray(value)) {\n        var vals = [];\n        util.arrayEach(value, function(item) { vals.push(escape(item)); });\n        result = ename + '=' + vals.sort().join('&' + ename + '=');\n      } else if (value !== undefined && value !== null) {\n        result = ename + '=' + escape(value);\n      }\n      items.push(result);\n    });\n\n    return items.join('&');\n  },\n\n  readFileSync: function readFileSync(path) {\n    if (util.isBrowser()) return null;\n    return require('fs').readFileSync(path, 'utf-8');\n  },\n\n  base64: {\n    encode: function encode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 encode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      var buf = util.buffer.toBuffer(string);\n      return buf.toString('base64');\n    },\n\n    decode: function decode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 decode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      return util.buffer.toBuffer(string, 'base64');\n    }\n\n  },\n\n  buffer: {\n    /**\n     * Buffer constructor for Node buffer and buffer pollyfill\n     */\n    toBuffer: function(data, encoding) {\n      return (typeof util.Buffer.from === 'function' && util.Buffer.from !== Uint8Array.from) ?\n        util.Buffer.from(data, encoding) : new util.Buffer(data, encoding);\n    },\n\n    alloc: function(size, fill, encoding) {\n      if (typeof size !== 'number') {\n        throw new Error('size passed to alloc must be a number.');\n      }\n      if (typeof util.Buffer.alloc === 'function') {\n        return util.Buffer.alloc(size, fill, encoding);\n      } else {\n        var buf = new util.Buffer(size);\n        if (fill !== undefined && typeof buf.fill === 'function') {\n          buf.fill(fill, undefined, undefined, encoding);\n        }\n        return buf;\n      }\n    },\n\n    toStream: function toStream(buffer) {\n      if (!util.Buffer.isBuffer(buffer)) buffer =  util.buffer.toBuffer(buffer);\n\n      var readable = new (util.stream.Readable)();\n      var pos = 0;\n      readable._read = function(size) {\n        if (pos >= buffer.length) return readable.push(null);\n\n        var end = pos + size;\n        if (end > buffer.length) end = buffer.length;\n        readable.push(buffer.slice(pos, end));\n        pos = end;\n      };\n\n      return readable;\n    },\n\n    /**\n     * Concatenates a list of Buffer objects.\n     */\n    concat: function(buffers) {\n      var length = 0,\n          offset = 0,\n          buffer = null, i;\n\n      for (i = 0; i < buffers.length; i++) {\n        length += buffers[i].length;\n      }\n\n      buffer = util.buffer.alloc(length);\n\n      for (i = 0; i < buffers.length; i++) {\n        buffers[i].copy(buffer, offset);\n        offset += buffers[i].length;\n      }\n\n      return buffer;\n    }\n  },\n\n  string: {\n    byteLength: function byteLength(string) {\n      if (string === null || string === undefined) return 0;\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n\n      if (typeof string.byteLength === 'number') {\n        return string.byteLength;\n      } else if (typeof string.length === 'number') {\n        return string.length;\n      } else if (typeof string.size === 'number') {\n        return string.size;\n      } else if (typeof string.path === 'string') {\n        return require('fs').lstatSync(string.path).size;\n      } else {\n        throw util.error(new Error('Cannot determine length of ' + string),\n          { object: string });\n      }\n    },\n\n    upperFirst: function upperFirst(string) {\n      return string[0].toUpperCase() + string.substr(1);\n    },\n\n    lowerFirst: function lowerFirst(string) {\n      return string[0].toLowerCase() + string.substr(1);\n    }\n  },\n\n  ini: {\n    parse: function string(ini) {\n      var currentSection, map = {};\n      util.arrayEach(ini.split(/\\r?\\n/), function(line) {\n        line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n        var section = line.match(/^\\s*\\[([^\\[\\]]+)\\]\\s*$/);\n        if (section) {\n          currentSection = section[1];\n        } else if (currentSection) {\n          var item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n          if (item) {\n            map[currentSection] = map[currentSection] || {};\n            map[currentSection][item[1]] = item[2];\n          }\n        }\n      });\n\n      return map;\n    }\n  },\n\n  fn: {\n    noop: function() {},\n    callback: function (err) { if (err) throw err; },\n\n    /**\n     * Turn a synchronous function into as \"async\" function by making it call\n     * a callback. The underlying function is called with all but the last argument,\n     * which is treated as the callback. The callback is passed passed a first argument\n     * of null on success to mimick standard node callbacks.\n     */\n    makeAsync: function makeAsync(fn, expectedArgs) {\n      if (expectedArgs && expectedArgs <= fn.length) {\n        return fn;\n      }\n\n      return function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        var callback = args.pop();\n        var result = fn.apply(null, args);\n        callback(result);\n      };\n    }\n  },\n\n  /**\n   * Date and time utility functions.\n   */\n  date: {\n\n    /**\n     * @return [Date] the current JavaScript date object. Since all\n     *   AWS services rely on this date object, you can override\n     *   this function to provide a special time value to AWS service\n     *   requests.\n     */\n    getDate: function getDate() {\n      if (!AWS) AWS = require('./core');\n      if (AWS.config.systemClockOffset) { // use offset when non-zero\n        return new Date(new Date().getTime() + AWS.config.systemClockOffset);\n      } else {\n        return new Date();\n      }\n    },\n\n    /**\n     * @return [String] the date in ISO-8601 format\n     */\n    iso8601: function iso8601(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n    },\n\n    /**\n     * @return [String] the date in RFC 822 format\n     */\n    rfc822: function rfc822(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toUTCString();\n    },\n\n    /**\n     * @return [Integer] the UNIX timestamp value for the current time\n     */\n    unixTimestamp: function unixTimestamp(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.getTime() / 1000;\n    },\n\n    /**\n     * @param [String,number,Date] date\n     * @return [Date]\n     */\n    from: function format(date) {\n      if (typeof date === 'number') {\n        return new Date(date * 1000); // unix timestamp\n      } else {\n        return new Date(date);\n      }\n    },\n\n    /**\n     * Given a Date or date-like value, this function formats the\n     * date into a string of the requested value.\n     * @param [String,number,Date] date\n     * @param [String] formatter Valid formats are:\n     #   * 'iso8601'\n     #   * 'rfc822'\n     #   * 'unixTimestamp'\n     * @return [String]\n     */\n    format: function format(date, formatter) {\n      if (!formatter) formatter = 'iso8601';\n      return util.date[formatter](util.date.from(date));\n    },\n\n    parseTimestamp: function parseTimestamp(value) {\n      if (typeof value === 'number') { // unix timestamp (number)\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d+$/)) { // unix timestamp\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d{4}/)) { // iso8601\n        return new Date(value);\n      } else if (value.match(/^\\w{3},/)) { // rfc822\n        return new Date(value);\n      } else {\n        throw util.error(\n          new Error('unhandled timestamp format: ' + value),\n          {code: 'TimestampParserError'});\n      }\n    }\n\n  },\n\n  crypto: {\n    crc32Table: [\n     0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,\n     0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,\n     0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,\n     0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n     0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,\n     0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\n     0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,\n     0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,\n     0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,\n     0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,\n     0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n     0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,\n     0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,\n     0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,\n     0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,\n     0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\n     0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,\n     0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n     0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,\n     0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,\n     0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,\n     0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,\n     0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,\n     0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,\n     0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n     0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,\n     0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\n     0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,\n     0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,\n     0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,\n     0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,\n     0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n     0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,\n     0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,\n     0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,\n     0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,\n     0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\n     0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,\n     0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n     0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,\n     0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,\n     0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,\n     0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,\n     0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,\n     0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,\n     0x2D02EF8D],\n\n    crc32: function crc32(data) {\n      var tbl = util.crypto.crc32Table;\n      var crc = 0 ^ -1;\n\n      if (typeof data === 'string') {\n        data = util.buffer.toBuffer(data);\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        var code = data.readUInt8(i);\n        crc = (crc >>> 8) ^ tbl[(crc ^ code) & 0xFF];\n      }\n      return (crc ^ -1) >>> 0;\n    },\n\n    hmac: function hmac(key, string, digest, fn) {\n      if (!digest) digest = 'binary';\n      if (digest === 'buffer') { digest = undefined; }\n      if (!fn) fn = 'sha256';\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n      return util.crypto.lib.createHmac(fn, key).update(string).digest(digest);\n    },\n\n    md5: function md5(data, digest, callback) {\n      return util.crypto.hash('md5', data, digest, callback);\n    },\n\n    sha256: function sha256(data, digest, callback) {\n      return util.crypto.hash('sha256', data, digest, callback);\n    },\n\n    hash: function(algorithm, data, digest, callback) {\n      var hash = util.crypto.createHash(algorithm);\n      if (!digest) { digest = 'binary'; }\n      if (digest === 'buffer') { digest = undefined; }\n      if (typeof data === 'string') data = util.buffer.toBuffer(data);\n      var sliceFn = util.arraySliceFn(data);\n      var isBuffer = util.Buffer.isBuffer(data);\n      //Identifying objects with an ArrayBuffer as buffers\n      if (util.isBrowser() && typeof ArrayBuffer !== 'undefined' && data && data.buffer instanceof ArrayBuffer) isBuffer = true;\n\n      if (callback && typeof data === 'object' &&\n          typeof data.on === 'function' && !isBuffer) {\n        data.on('data', function(chunk) { hash.update(chunk); });\n        data.on('error', function(err) { callback(err); });\n        data.on('end', function() { callback(null, hash.digest(digest)); });\n      } else if (callback && sliceFn && !isBuffer &&\n                 typeof FileReader !== 'undefined') {\n        // this might be a File/Blob\n        var index = 0, size = 1024 * 512;\n        var reader = new FileReader();\n        reader.onerror = function() {\n          callback(new Error('Failed to read data.'));\n        };\n        reader.onload = function() {\n          var buf = new util.Buffer(new Uint8Array(reader.result));\n          hash.update(buf);\n          index += buf.length;\n          reader._continueReading();\n        };\n        reader._continueReading = function() {\n          if (index >= data.size) {\n            callback(null, hash.digest(digest));\n            return;\n          }\n\n          var back = index + size;\n          if (back > data.size) back = data.size;\n          reader.readAsArrayBuffer(sliceFn.call(data, index, back));\n        };\n\n        reader._continueReading();\n      } else {\n        if (util.isBrowser() && typeof data === 'object' && !isBuffer) {\n          data = new util.Buffer(new Uint8Array(data));\n        }\n        var out = hash.update(data).digest(digest);\n        if (callback) callback(null, out);\n        return out;\n      }\n    },\n\n    toHex: function toHex(data) {\n      var out = [];\n      for (var i = 0; i < data.length; i++) {\n        out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));\n      }\n      return out.join('');\n    },\n\n    createHash: function createHash(algorithm) {\n      return util.crypto.lib.createHash(algorithm);\n    }\n\n  },\n\n  /** @!ignore */\n\n  /* Abort constant */\n  abort: {},\n\n  each: function each(object, iterFunction) {\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        var ret = iterFunction.call(this, key, object[key]);\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  arrayEach: function arrayEach(array, iterFunction) {\n    for (var idx in array) {\n      if (Object.prototype.hasOwnProperty.call(array, idx)) {\n        var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  update: function update(obj1, obj2) {\n    util.each(obj2, function iterator(key, item) {\n      obj1[key] = item;\n    });\n    return obj1;\n  },\n\n  merge: function merge(obj1, obj2) {\n    return util.update(util.copy(obj1), obj2);\n  },\n\n  copy: function copy(object) {\n    if (object === null || object === undefined) return object;\n    var dupe = {};\n    // jshint forin:false\n    for (var key in object) {\n      dupe[key] = object[key];\n    }\n    return dupe;\n  },\n\n  isEmpty: function isEmpty(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  arraySliceFn: function arraySliceFn(obj) {\n    var fn = obj.slice || obj.webkitSlice || obj.mozSlice;\n    return typeof fn === 'function' ? fn : null;\n  },\n\n  isType: function isType(obj, type) {\n    // handle cross-\"frame\" objects\n    if (typeof type === 'function') type = util.typeName(type);\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  },\n\n  typeName: function typeName(type) {\n    if (Object.prototype.hasOwnProperty.call(type, 'name')) return type.name;\n    var str = type.toString();\n    var match = str.match(/^\\s*function (.+)\\(/);\n    return match ? match[1] : str;\n  },\n\n  error: function error(err, options) {\n    var originalError = null;\n    if (typeof err.message === 'string' && err.message !== '') {\n      if (typeof options === 'string' || (options && options.message)) {\n        originalError = util.copy(err);\n        originalError.message = err.message;\n      }\n    }\n    err.message = err.message || null;\n\n    if (typeof options === 'string') {\n      err.message = options;\n    } else if (typeof options === 'object' && options !== null) {\n      util.update(err, options);\n      if (options.message)\n        err.message = options.message;\n      if (options.code || options.name)\n        err.code = options.code || options.name;\n      if (options.stack)\n        err.stack = options.stack;\n    }\n\n    if (typeof Object.defineProperty === 'function') {\n      Object.defineProperty(err, 'name', {writable: true, enumerable: false});\n      Object.defineProperty(err, 'message', {enumerable: true});\n    }\n\n    err.name = String(options && options.name || err.name || err.code || 'Error');\n    err.time = new Date();\n\n    if (originalError) err.originalError = originalError;\n\n    return err;\n  },\n\n  /**\n   * @api private\n   */\n  inherit: function inherit(klass, features) {\n    var newObject = null;\n    if (features === undefined) {\n      features = klass;\n      klass = Object;\n      newObject = {};\n    } else {\n      var ctor = function ConstructorWrapper() {};\n      ctor.prototype = klass.prototype;\n      newObject = new ctor();\n    }\n\n    // constructor not supplied, create pass-through ctor\n    if (features.constructor === Object) {\n      features.constructor = function() {\n        if (klass !== Object) {\n          return klass.apply(this, arguments);\n        }\n      };\n    }\n\n    features.constructor.prototype = newObject;\n    util.update(features.constructor.prototype, features);\n    features.constructor.__super__ = klass;\n    return features.constructor;\n  },\n\n  /**\n   * @api private\n   */\n  mixin: function mixin() {\n    var klass = arguments[0];\n    for (var i = 1; i < arguments.length; i++) {\n      // jshint forin:false\n      for (var prop in arguments[i].prototype) {\n        var fn = arguments[i].prototype[prop];\n        if (prop !== 'constructor') {\n          klass.prototype[prop] = fn;\n        }\n      }\n    }\n    return klass;\n  },\n\n  /**\n   * @api private\n   */\n  hideProperties: function hideProperties(obj, props) {\n    if (typeof Object.defineProperty !== 'function') return;\n\n    util.arrayEach(props, function (key) {\n      Object.defineProperty(obj, key, {\n        enumerable: false, writable: true, configurable: true });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  property: function property(obj, name, value, enumerable, isValue) {\n    var opts = {\n      configurable: true,\n      enumerable: enumerable !== undefined ? enumerable : true\n    };\n    if (typeof value === 'function' && !isValue) {\n      opts.get = value;\n    }\n    else {\n      opts.value = value; opts.writable = true;\n    }\n\n    Object.defineProperty(obj, name, opts);\n  },\n\n  /**\n   * @api private\n   */\n  memoizedProperty: function memoizedProperty(obj, name, get, enumerable) {\n    var cachedValue = null;\n\n    // build enumerable attribute for each value with lazy accessor.\n    util.property(obj, name, function() {\n      if (cachedValue === null) {\n        cachedValue = get();\n      }\n      return cachedValue;\n    }, enumerable);\n  },\n\n  /**\n   * TODO Remove in major version revision\n   * This backfill populates response data without the\n   * top-level payload name.\n   *\n   * @api private\n   */\n  hoistPayloadMember: function hoistPayloadMember(resp) {\n    var req = resp.request;\n    var operationName = req.operation;\n    var operation = req.service.api.operations[operationName];\n    var output = operation.output;\n    if (output.payload && !operation.hasEventOutput) {\n      var payloadMember = output.members[output.payload];\n      var responsePayload = resp.data[output.payload];\n      if (payloadMember.type === 'structure') {\n        util.each(responsePayload, function(key, value) {\n          util.property(resp.data, key, value, false);\n        });\n      }\n    }\n  },\n\n  /**\n   * Compute SHA-256 checksums of streams\n   *\n   * @api private\n   */\n  computeSha256: function computeSha256(body, done) {\n    if (util.isNode()) {\n      var Stream = util.stream.Stream;\n      var fs = require('fs');\n      if (typeof Stream === 'function' && body instanceof Stream) {\n        if (typeof body.path === 'string') { // assume file object\n          var settings = {};\n          if (typeof body.start === 'number') {\n            settings.start = body.start;\n          }\n          if (typeof body.end === 'number') {\n            settings.end = body.end;\n          }\n          body = fs.createReadStream(body.path, settings);\n        } else { // TODO support other stream types\n          return done(new Error('Non-file stream objects are ' +\n                                'not supported with SigV4'));\n        }\n      }\n    }\n\n    util.crypto.sha256(body, 'hex', function(err, sha) {\n      if (err) done(err);\n      else done(null, sha);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(serverTime) {\n    if (serverTime) {\n      util.property(AWS.config, 'isClockSkewed',\n        Math.abs(new Date().getTime() - serverTime) >= 300000, false);\n      return AWS.config.isClockSkewed;\n    }\n  },\n\n  applyClockOffset: function applyClockOffset(serverTime) {\n    if (serverTime)\n      AWS.config.systemClockOffset = serverTime - new Date().getTime();\n  },\n\n  /**\n   * @api private\n   */\n  extractRequestId: function extractRequestId(resp) {\n    var requestId = resp.httpResponse.headers['x-amz-request-id'] ||\n                     resp.httpResponse.headers['x-amzn-requestid'];\n\n    if (!requestId && resp.data && resp.data.ResponseMetadata) {\n      requestId = resp.data.ResponseMetadata.RequestId;\n    }\n\n    if (requestId) {\n      resp.requestId = requestId;\n    }\n\n    if (resp.error) {\n      resp.error.requestId = requestId;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  addPromises: function addPromises(constructors, PromiseDependency) {\n    var deletePromises = false;\n    if (PromiseDependency === undefined && AWS && AWS.config) {\n      PromiseDependency = AWS.config.getPromisesDependency();\n    }\n    if (PromiseDependency === undefined && typeof Promise !== 'undefined') {\n      PromiseDependency = Promise;\n    }\n    if (typeof PromiseDependency !== 'function') deletePromises = true;\n    if (!Array.isArray(constructors)) constructors = [constructors];\n\n    for (var ind = 0; ind < constructors.length; ind++) {\n      var constructor = constructors[ind];\n      if (deletePromises) {\n        if (constructor.deletePromisesFromClass) {\n          constructor.deletePromisesFromClass();\n        }\n      } else if (constructor.addPromisesToClass) {\n        constructor.addPromisesToClass(PromiseDependency);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   * Return a function that will return a promise whose fate is decided by the\n   * callback behavior of the given method with `methodName`. The method to be\n   * promisified should conform to node.js convention of accepting a callback as\n   * last argument and calling that callback with error as the first argument\n   * and success value on the second argument.\n   */\n  promisifyMethod: function promisifyMethod(methodName, PromiseDependency) {\n    return function promise() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      return new PromiseDependency(function(resolve, reject) {\n        args.push(function(err, data) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(data);\n          }\n        });\n        self[methodName].apply(self, args);\n      });\n    };\n  },\n\n  /**\n   * @api private\n   */\n  isDualstackAvailable: function isDualstackAvailable(service) {\n    if (!service) return false;\n    var metadata = require('../apis/metadata.json');\n    if (typeof service !== 'string') service = service.serviceIdentifier;\n    if (typeof service !== 'string' || !metadata.hasOwnProperty(service)) return false;\n    return !!metadata[service].dualstackAvailable;\n  },\n\n  /**\n   * @api private\n   */\n  calculateRetryDelay: function calculateRetryDelay(retryCount, retryDelayOptions, err) {\n    if (!retryDelayOptions) retryDelayOptions = {};\n    var customBackoff = retryDelayOptions.customBackoff || null;\n    if (typeof customBackoff === 'function') {\n      return customBackoff(retryCount, err);\n    }\n    var base = typeof retryDelayOptions.base === 'number' ? retryDelayOptions.base : 100;\n    var delay = Math.random() * (Math.pow(2, retryCount) * base);\n    return delay;\n  },\n\n  /**\n   * @api private\n   */\n  handleRequestWithRetries: function handleRequestWithRetries(httpRequest, options, cb) {\n    if (!options) options = {};\n    var http = AWS.HttpClient.getInstance();\n    var httpOptions = options.httpOptions || {};\n    var retryCount = 0;\n\n    var errCallback = function(err) {\n      var maxRetries = options.maxRetries || 0;\n      if (err && err.code === 'TimeoutError') err.retryable = true;\n      var delay = util.calculateRetryDelay(retryCount, options.retryDelayOptions, err);\n      if (err && err.retryable && retryCount < maxRetries && delay >= 0) {\n        retryCount++;\n        setTimeout(sendRequest, delay + (err.retryAfter || 0));\n      } else {\n        cb(err);\n      }\n    };\n\n    var sendRequest = function() {\n      var data = '';\n      http.handleRequest(httpRequest, httpOptions, function(httpResponse) {\n        httpResponse.on('data', function(chunk) { data += chunk.toString(); });\n        httpResponse.on('end', function() {\n          var statusCode = httpResponse.statusCode;\n          if (statusCode < 300) {\n            cb(null, data);\n          } else {\n            var retryAfter = parseInt(httpResponse.headers['retry-after'], 10) * 1000 || 0;\n            var err = util.error(new Error(),\n              {\n                statusCode: statusCode,\n                retryable: statusCode >= 500 || statusCode === 429\n              }\n            );\n            if (retryAfter && err.retryable) err.retryAfter = retryAfter;\n            errCallback(err);\n          }\n        });\n      }, errCallback);\n    };\n\n    AWS.util.defer(sendRequest);\n  },\n\n  /**\n   * @api private\n   */\n  uuid: {\n    v4: function uuidV4() {\n      return require('uuid').v4();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  convertPayloadToString: function convertPayloadToString(resp) {\n    var req = resp.request;\n    var operation = req.operation;\n    var rules = req.service.api.operations[operation].output || {};\n    if (rules.payload && resp.data[rules.payload]) {\n      resp.data[rules.payload] = resp.data[rules.payload].toString();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defer: function defer(callback) {\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n      process.nextTick(callback);\n    } else if (typeof setImmediate === 'function') {\n      setImmediate(callback);\n    } else {\n      setTimeout(callback, 0);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getRequestPayloadShape: function getRequestPayloadShape(req) {\n    var operations = req.service.api.operations;\n    if (!operations) return undefined;\n    var operation = (operations || {})[req.operation];\n    if (!operation || !operation.input || !operation.input.payload) return undefined;\n    return operation.input.members[operation.input.payload];\n  },\n\n  getProfilesFromSharedConfig: function getProfilesFromSharedConfig(iniLoader, filename) {\n    var profiles = {};\n    var profilesFromConfig = {};\n    if (process.env[util.configOptInEnv]) {\n      var profilesFromConfig = iniLoader.loadFrom({\n        isConfig: true,\n        filename: process.env[util.sharedConfigFileEnv]\n      });\n    }\n    var profilesFromCreds = iniLoader.loadFrom({\n      filename: filename ||\n        (process.env[util.configOptInEnv] && process.env[util.sharedCredentialsFileEnv])\n    });\n    for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = profilesFromConfig[profileNames[i]];\n    }\n    for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = profilesFromCreds[profileNames[i]];\n    }\n    return profiles;\n  },\n\n  /**\n   * @api private\n   */\n  ARN: {\n    validate: function validateARN(str) {\n      return str && str.indexOf('arn:') === 0 && str.split(':').length >= 6;\n    },\n    parse: function parseARN(arn) {\n      var matched = arn.split(':');\n      return {\n        partition: matched[1],\n        service: matched[2],\n        region: matched[3],\n        accountId: matched[4],\n        resource: matched.slice(5).join(':')\n      };\n    },\n    build: function buildARN(arnObject) {\n      if (\n        arnObject.service === undefined ||\n        arnObject.region === undefined ||\n        arnObject.accountId === undefined ||\n        arnObject.resource === undefined\n      ) throw util.error(new Error('Input ARN object is invalid'));\n      return 'arn:'+ (arnObject.partition || 'aws') + ':' + arnObject.service +\n        ':' + arnObject.region + ':' + arnObject.accountId + ':' + arnObject.resource;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defaultProfile: 'default',\n\n  /**\n   * @api private\n   */\n  configOptInEnv: 'AWS_SDK_LOAD_CONFIG',\n\n  /**\n   * @api private\n   */\n  sharedCredentialsFileEnv: 'AWS_SHARED_CREDENTIALS_FILE',\n\n  /**\n   * @api private\n   */\n  sharedConfigFileEnv: 'AWS_CONFIG_FILE',\n\n  /**\n   * @api private\n   */\n  imdsDisabledEnv: 'AWS_EC2_METADATA_DISABLED'\n};\n\n/**\n * @api private\n */\nmodule.exports = util;\n","var AWS = require('../core');\n\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  },\n\n  setServiceClientId: function setServiceClientId(id) {\n    this.serviceClientId = id;\n  },\n\n  getServiceClientId: function getServiceClientId() {\n    return this.serviceClientId;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2': return AWS.Signers.V2;\n    case 'v3': return AWS.Signers.V3;\n    case 's3v4': return AWS.Signers.V4;\n    case 'v4': return AWS.Signers.V4;\n    case 's3': return AWS.Signers.S3;\n    case 'v3https': return AWS.Signers.V3Https;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\n\nrequire('./v2');\nrequire('./v3');\nrequire('./v3https');\nrequire('./v4');\nrequire('./s3');\nrequire('./presign');\n","var util = require('../util');\nvar Shape = require('../model/shape');\n\nfunction DomXmlParser() { }\n\nDomXmlParser.prototype.parse = function(xml, shape) {\n  if (xml.replace(/^\\s+/, '') === '') return {};\n\n  var result, error;\n  try {\n    if (window.DOMParser) {\n      try {\n        var parser = new DOMParser();\n        result = parser.parseFromString(xml, 'text/xml');\n      } catch (syntaxError) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            originalError: syntaxError,\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      if (result.documentElement === null) {\n        throw util.error(new Error('Cannot parse empty document.'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      var isError = result.getElementsByTagName('parsererror')[0];\n      if (isError && (isError.parentNode === result ||\n          isError.parentNode.nodeName === 'body' ||\n          isError.parentNode.parentNode === result ||\n          isError.parentNode.parentNode.nodeName === 'body')) {\n        var errorElement = isError.getElementsByTagName('div')[0] || isError;\n        throw util.error(new Error(errorElement.textContent || 'Parser error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else if (window.ActiveXObject) {\n      result = new window.ActiveXObject('Microsoft.XMLDOM');\n      result.async = false;\n\n      if (!result.loadXML(xml)) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else {\n      throw new Error('Cannot load XML parser');\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (result && result.documentElement && !error) {\n    var data = parseXml(result.documentElement, shape);\n    var metadata = getElementByTagName(result.documentElement, 'ResponseMetadata');\n    if (metadata) {\n      data.ResponseMetadata = parseXml(metadata, {});\n    }\n    return data;\n  } else if (error) {\n    throw util.error(error || new Error(), {code: 'XMLParserError', retryable: true});\n  } else { // empty xml document\n    return {};\n  }\n};\n\nfunction getElementByTagName(xml, tag) {\n  var elements = xml.getElementsByTagName(tag);\n  for (var i = 0, iLen = elements.length; i < iLen; i++) {\n    if (elements[i].parentNode === xml) {\n      return elements[i];\n    }\n  }\n}\n\nfunction parseXml(xml, shape) {\n  if (!shape) shape = {};\n  switch (shape.type) {\n    case 'structure': return parseStructure(xml, shape);\n    case 'map': return parseMap(xml, shape);\n    case 'list': return parseList(xml, shape);\n    case undefined: case null: return parseUnknown(xml);\n    default: return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  util.each(shape.members, function(memberName, memberShape) {\n    if (memberShape.isXmlAttribute) {\n      if (Object.prototype.hasOwnProperty.call(xml.attributes, memberShape.name)) {\n        var value = xml.attributes[memberShape.name].value;\n        data[memberName] = parseXml({textContent: value}, memberShape);\n      }\n    } else {\n      var xmlChild = memberShape.flattened ? xml :\n        getElementByTagName(xml, memberShape.name);\n      if (xmlChild) {\n        data[memberName] = parseXml(xmlChild, memberShape);\n      } else if (\n        !memberShape.flattened &&\n        memberShape.type === 'list' &&\n        !shape.api.xmlNoDefaultLists) {\n        data[memberName] = memberShape.defaultValue;\n      }\n    }\n  });\n\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var tagName = shape.flattened ? shape.name : 'entry';\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      var key = getElementByTagName(child, xmlKey).textContent;\n      var value = getElementByTagName(child, xmlValue);\n      data[key] = parseXml(value, shape.value);\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var tagName = shape.flattened ? shape.name : (shape.member.name || 'member');\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      data.push(parseXml(child, shape.member));\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseScalar(xml, shape) {\n  if (xml.getAttribute) {\n    var encoding = xml.getAttribute('encoding');\n    if (encoding === 'base64') {\n      shape = new Shape.create({type: encoding});\n    }\n  }\n\n  var text = xml.textContent;\n  if (text === '') text = null;\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return '';\n\n  // empty object\n  if (!xml.firstElementChild) {\n    if (xml.parentNode.parentNode === null) return {};\n    if (xml.childNodes.length === 0) return '';\n    else return xml.textContent;\n  }\n\n  // object, parse as structure\n  var shape = {type: 'structure', members: {}};\n  var child = xml.firstElementChild;\n  while (child) {\n    var tag = child.nodeName;\n    if (Object.prototype.hasOwnProperty.call(shape.members, tag)) {\n      // multiple tags of the same name makes it a list\n      shape.members[tag].type = 'list';\n    } else {\n      shape.members[tag] = {name: tag};\n    }\n    child = child.nextElementSibling;\n  }\n  return parseStructure(xml, shape);\n}\n\n/**\n * @api private\n */\nmodule.exports = DomXmlParser;\n","var util = require('../util');\nvar property = util.property;\n\nfunction ResourceWaiter(name, waiter, options) {\n  options = options || {};\n  property(this, 'name', name);\n  property(this, 'api', options.api, false);\n\n  if (waiter.operation) {\n    property(this, 'operation', util.string.lowerFirst(waiter.operation));\n  }\n\n  var self = this;\n  var keys = [\n    'type',\n    'description',\n    'delay',\n    'maxAttempts',\n    'acceptors'\n  ];\n\n  keys.forEach(function(key) {\n    var value = waiter[key];\n    if (value) {\n      property(self, key, value);\n    }\n  });\n}\n\n/**\n * @api private\n */\nmodule.exports = ResourceWaiter;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    if (!date) date = AWS.util.date.getDate();\n\n    var r = this.request;\n\n    r.params.Timestamp = AWS.util.date.iso8601(date);\n    r.params.SignatureVersion = '2';\n    r.params.SignatureMethod = 'HmacSHA256';\n    r.params.AWSAccessKeyId = credentials.accessKeyId;\n\n    if (credentials.sessionToken) {\n      r.params.SecurityToken = credentials.sessionToken;\n    }\n\n    delete r.params.Signature; // delete old Signature for re-signing\n    r.params.Signature = this.signature(credentials);\n\n    r.body = AWS.util.queryParamsToString(r.params);\n    r.headers['Content-Length'] = r.body.length;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push(this.request.endpoint.host.toLowerCase());\n    parts.push(this.request.pathname());\n    parts.push(AWS.util.queryParamsToString(this.request.params));\n    return parts.join('\\n');\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRU_1 = require(\"./utils/LRU\");\nvar CACHE_SIZE = 1000;\n/**\n * Inspired node-lru-cache[https://github.com/isaacs/node-lru-cache]\n */\nvar EndpointCache = /** @class */ (function () {\n    function EndpointCache(maxSize) {\n        if (maxSize === void 0) { maxSize = CACHE_SIZE; }\n        this.maxSize = maxSize;\n        this.cache = new LRU_1.LRUCache(maxSize);\n    }\n    ;\n    Object.defineProperty(EndpointCache.prototype, \"size\", {\n        get: function () {\n            return this.cache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EndpointCache.prototype.put = function (key, value) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var endpointRecord = this.populateValue(value);\n        this.cache.put(keyString, endpointRecord);\n    };\n    EndpointCache.prototype.get = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var now = Date.now();\n        var records = this.cache.get(keyString);\n        if (records) {\n            for (var i = 0; i < records.length; i++) {\n                var record = records[i];\n                if (record.Expire < now) {\n                    this.cache.remove(keyString);\n                    return undefined;\n                }\n            }\n        }\n        return records;\n    };\n    EndpointCache.getKeyString = function (key) {\n        var identifiers = [];\n        var identifierNames = Object.keys(key).sort();\n        for (var i = 0; i < identifierNames.length; i++) {\n            var identifierName = identifierNames[i];\n            if (key[identifierName] === undefined)\n                continue;\n            identifiers.push(key[identifierName]);\n        }\n        return identifiers.join(' ');\n    };\n    EndpointCache.prototype.populateValue = function (endpoints) {\n        var now = Date.now();\n        return endpoints.map(function (endpoint) { return ({\n            Address: endpoint.Address || '',\n            Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000\n        }); });\n    };\n    EndpointCache.prototype.empty = function () {\n        this.cache.empty();\n    };\n    EndpointCache.prototype.remove = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        this.cache.remove(keyString);\n    };\n    return EndpointCache;\n}());\nexports.EndpointCache = EndpointCache;","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [\n      date.substr(0, 8),\n      region,\n      serviceName,\n      v4Identifier\n    ].join('/');\n  },\n\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(\n    credentials,\n    date,\n    region,\n    service,\n    shouldCache\n  ) {\n    var credsIdentifier = AWS.util.crypto\n      .hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && (cacheKey in cachedSecret)) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac(\n      'AWS4' + credentials.secretAccessKey,\n      date,\n      'buffer'\n    );\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['Signature'] = auth.pop();\n    queryParams['AWSAccessKeyId'] = auth.join(':');\n\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.Presign;\n","var util = require('../util');\n\nfunction JsonBuilder() { }\n\nJsonBuilder.prototype.build = function(value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n      var locationName = memberShape.isLocationName ? memberShape.name : name;\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[locationName] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonBuilder;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.CognitoIdentity.prototype, {\n  getOpenIdToken: function getOpenIdToken(params, callback) {\n    return this.makeUnauthenticatedRequest('getOpenIdToken', params, callback);\n  },\n\n  getId: function getId(params, callback) {\n    return this.makeUnauthenticatedRequest('getId', params, callback);\n  },\n\n  getCredentialsForIdentity: function getCredentialsForIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('getCredentialsForIdentity', params, callback);\n  }\n});\n","var util = require('../util');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function(_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function(val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function(key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function(val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ?\n          util.base64.decode(headers[header]) :\n          headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};\n","var AWS = require('../core');\nvar v4Credentials = require('./v4_credentials');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n\n  algorithm: 'AWS4-HMAC-SHA256',\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n\n    this.request.headers['Authorization'] =\n      this.authorization(credentials, datetime);\n  },\n\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function(key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' +\n      credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(\n      credentials,\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName,\n      this.signatureCache\n    );\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n\n  canonicalString: function canonicalString() {\n    var parts = [], pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' +\n          this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName\n    );\n  },\n\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && this.serviceName === 's3' && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n\n  unsignableHeaders: [\n    'authorization',\n    'content-type',\n    'content-length',\n    'user-agent',\n    expiresHeader,\n    'expect',\n    'x-amzn-trace-id'\n  ],\n\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;\n","var AWS = require('../core');\nvar EventEmitter = require('events').EventEmitter;\nrequire('../http');\n\n/**\n * @api private\n */\nAWS.XHRClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var emitter = new EventEmitter();\n    var href = endpoint.protocol + '//' + endpoint.hostname;\n    if (endpoint.port !== 80 && endpoint.port !== 443) {\n      href += ':' + endpoint.port;\n    }\n    href += httpRequest.path;\n\n    var xhr = new XMLHttpRequest(), headersEmitted = false;\n    httpRequest.stream = xhr;\n\n    xhr.addEventListener('readystatechange', function() {\n      try {\n        if (xhr.status === 0) return; // 0 code is invalid\n      } catch (e) { return; }\n\n      if (this.readyState >= this.HEADERS_RECEIVED && !headersEmitted) {\n        emitter.statusCode = xhr.status;\n        emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());\n        emitter.emit(\n          'headers',\n          emitter.statusCode,\n          emitter.headers,\n          xhr.statusText\n        );\n        headersEmitted = true;\n      }\n      if (this.readyState === this.DONE) {\n        self.finishRequest(xhr, emitter);\n      }\n    }, false);\n    xhr.upload.addEventListener('progress', function (evt) {\n      emitter.emit('sendProgress', evt);\n    });\n    xhr.addEventListener('progress', function (evt) {\n      emitter.emit('receiveProgress', evt);\n    }, false);\n    xhr.addEventListener('timeout', function () {\n      errCallback(AWS.util.error(new Error('Timeout'), {code: 'TimeoutError'}));\n    }, false);\n    xhr.addEventListener('error', function () {\n      errCallback(AWS.util.error(new Error('Network Failure'), {\n        code: 'NetworkingError'\n      }));\n    }, false);\n    xhr.addEventListener('abort', function () {\n      errCallback(AWS.util.error(new Error('Request aborted'), {\n        code: 'RequestAbortedError'\n      }));\n    }, false);\n\n    callback(emitter);\n    xhr.open(httpRequest.method, href, httpOptions.xhrAsync !== false);\n    AWS.util.each(httpRequest.headers, function (key, value) {\n      if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {\n        xhr.setRequestHeader(key, value);\n      }\n    });\n\n    if (httpOptions.timeout && httpOptions.xhrAsync !== false) {\n      xhr.timeout = httpOptions.timeout;\n    }\n\n    if (httpOptions.xhrWithCredentials) {\n      xhr.withCredentials = true;\n    }\n    try { xhr.responseType = 'arraybuffer'; } catch (e) {}\n\n    try {\n      if (httpRequest.body) {\n        xhr.send(httpRequest.body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {\n        xhr.send(httpRequest.body.buffer); // send ArrayBuffer directly\n      } else {\n        throw err;\n      }\n    }\n\n    return emitter;\n  },\n\n  parseHeaders: function parseHeaders(rawHeaders) {\n    var headers = {};\n    AWS.util.arrayEach(rawHeaders.split(/\\r?\\n/), function (line) {\n      var key = line.split(':', 1)[0];\n      var value = line.substring(key.length + 2);\n      if (key.length > 0) headers[key.toLowerCase()] = value;\n    });\n    return headers;\n  },\n\n  finishRequest: function finishRequest(xhr, emitter) {\n    var buffer;\n    if (xhr.responseType === 'arraybuffer' && xhr.response) {\n      var ab = xhr.response;\n      buffer = new AWS.util.Buffer(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n      }\n    }\n\n    try {\n      if (!buffer && typeof xhr.responseText === 'string') {\n        buffer = new AWS.util.Buffer(xhr.responseText);\n      }\n    } catch (e) {}\n\n    if (buffer) emitter.emit('data', buffer);\n    emitter.emit('end');\n  }\n});\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.XHRClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = 1;\n","require('./lib/browser_loader');\n\nvar AWS = require('./lib/core');\nif (typeof window !== 'undefined') window.AWS = AWS;\nif (typeof module !== 'undefined') module.exports = AWS;\nif (typeof self !== 'undefined') self.AWS = AWS;","var eventMessageChunker = require('../event-stream/event-message-chunker').eventMessageChunker;\nvar parseEvent = require('./parse-event').parseEvent;\n\nfunction createEventStream(body, parser, model) {\n    var eventMessages = eventMessageChunker(body);\n\n    var events = [];\n\n    for (var i = 0; i < eventMessages.length; i++) {\n        events.push(parseEvent(parser, eventMessages[i], model));\n    }\n\n    return events;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    var datetime = AWS.util.date.rfc822(date);\n\n    this.request.headers['X-Amz-Date'] = datetime;\n\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    this.request.headers['X-Amzn-Authorization'] =\n      this.authorization(credentials, datetime);\n\n  },\n\n  authorization: function authorization(credentials) {\n    return 'AWS3 ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'SignedHeaders=' + this.signedHeaders() + ',' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  signedHeaders: function signedHeaders() {\n    var headers = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      headers.push(h.toLowerCase());\n    });\n    return headers.sort().join(';');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = this.request.headers;\n    var parts = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\n    });\n    return parts.sort().join('\\n') + '\\n';\n  },\n\n  headersToSign: function headersToSign() {\n    var headers = [];\n    AWS.util.each(this.request.headers, function iterator(k) {\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\n        headers.push(k);\n      }\n    });\n    return headers;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push('/');\n    parts.push('');\n    parts.push(this.canonicalHeaders());\n    parts.push(this.request.body);\n    return AWS.util.crypto.sha256(parts.join('\\n'));\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3;\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\n\n/**\n * The endpoint that a service will talk to, for example,\n * `'https://ec2.ap-southeast-1.amazonaws.com'`. If\n * you need to override an endpoint for a service, you can\n * set the endpoint on a service by passing the endpoint\n * object with the `endpoint` option key:\n *\n * ```javascript\n * var ep = new AWS.Endpoint('awsproxy.example.com');\n * var s3 = new AWS.S3({endpoint: ep});\n * s3.service.endpoint.hostname == 'awsproxy.example.com'\n * ```\n *\n * Note that if you do not specify a protocol, the protocol will\n * be selected based on your current {AWS.config} configuration.\n *\n * @!attribute protocol\n *   @return [String] the protocol (http or https) of the endpoint\n *     URL\n * @!attribute hostname\n *   @return [String] the host portion of the endpoint, e.g.,\n *     example.com\n * @!attribute host\n *   @return [String] the host portion of the endpoint including\n *     the port, e.g., example.com:80\n * @!attribute port\n *   @return [Integer] the port of the endpoint\n * @!attribute href\n *   @return [String] the full URL of the endpoint\n */\nAWS.Endpoint = inherit({\n\n  /**\n   * @overload Endpoint(endpoint)\n   *   Constructs a new endpoint given an endpoint URL. If the\n   *   URL omits a protocol (http or https), the default protocol\n   *   set in the global {AWS.config} will be used.\n   *   @param endpoint [String] the URL to construct an endpoint from\n   */\n  constructor: function Endpoint(endpoint, config) {\n    AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);\n\n    if (typeof endpoint === 'undefined' || endpoint === null) {\n      throw new Error('Invalid endpoint: ' + endpoint);\n    } else if (typeof endpoint !== 'string') {\n      return AWS.util.copy(endpoint);\n    }\n\n    if (!endpoint.match(/^http/)) {\n      var useSSL = config && config.sslEnabled !== undefined ?\n        config.sslEnabled : AWS.config.sslEnabled;\n      endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;\n    }\n\n    AWS.util.update(this, AWS.util.urlParse(endpoint));\n\n    // Ensure the port property is set as an integer\n    if (this.port) {\n      this.port = parseInt(this.port, 10);\n    } else {\n      this.port = this.protocol === 'https:' ? 443 : 80;\n    }\n  }\n\n});\n\n/**\n * The low level HTTP request object, encapsulating all HTTP header\n * and body data sent by a service request.\n *\n * @!attribute method\n *   @return [String] the HTTP method of the request\n * @!attribute path\n *   @return [String] the path portion of the URI, e.g.,\n *     \"/list/?start=5&num=10\"\n * @!attribute headers\n *   @return [map<String,String>]\n *     a map of header keys and their respective values\n * @!attribute body\n *   @return [String] the request body payload\n * @!attribute endpoint\n *   @return [AWS.Endpoint] the endpoint for the request\n * @!attribute region\n *   @api private\n *   @return [String] the region, for signing purposes only.\n */\nAWS.HttpRequest = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpRequest(endpoint, region) {\n    endpoint = new AWS.Endpoint(endpoint);\n    this.method = 'POST';\n    this.path = endpoint.path || '/';\n    this.headers = {};\n    this.body = '';\n    this.endpoint = endpoint;\n    this.region = region;\n    this._userAgent = '';\n    this.setUserAgent();\n  },\n\n  /**\n   * @api private\n   */\n  setUserAgent: function setUserAgent() {\n    this._userAgent = this.headers[this.getUserAgentHeaderName()] = AWS.util.userAgent();\n  },\n\n  getUserAgentHeaderName: function getUserAgentHeaderName() {\n    var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';\n    return prefix + 'User-Agent';\n  },\n\n  /**\n   * @api private\n   */\n  appendToUserAgent: function appendToUserAgent(agentPartial) {\n    if (typeof agentPartial === 'string' && agentPartial) {\n      this._userAgent += ' ' + agentPartial;\n    }\n    this.headers[this.getUserAgentHeaderName()] = this._userAgent;\n  },\n\n  /**\n   * @api private\n   */\n  getUserAgent: function getUserAgent() {\n    return this._userAgent;\n  },\n\n  /**\n   * @return [String] the part of the {path} excluding the\n   *   query string\n   */\n  pathname: function pathname() {\n    return this.path.split('?', 1)[0];\n  },\n\n  /**\n   * @return [String] the query string portion of the {path}\n   */\n  search: function search() {\n    var query = this.path.split('?', 2)[1];\n    if (query) {\n      query = AWS.util.queryStringParse(query);\n      return AWS.util.queryParamsToString(query);\n    }\n    return '';\n  },\n\n  /**\n   * @api private\n   * update httpRequest endpoint with endpoint string\n   */\n  updateEndpoint: function updateEndpoint(endpointStr) {\n    var newEndpoint = new AWS.Endpoint(endpointStr);\n    this.endpoint = newEndpoint;\n    this.path = newEndpoint.path || '/';\n    if (this.headers['Host']) {\n      this.headers['Host'] = newEndpoint.host;\n    }\n  }\n});\n\n/**\n * The low level HTTP response object, encapsulating all HTTP header\n * and body data returned from the request.\n *\n * @!attribute statusCode\n *   @return [Integer] the HTTP status code of the response (e.g., 200, 404)\n * @!attribute headers\n *   @return [map<String,String>]\n *      a map of response header keys and their respective values\n * @!attribute body\n *   @return [String] the response body payload\n * @!attribute [r] streaming\n *   @return [Boolean] whether this response is being streamed at a low-level.\n *     Defaults to `false` (buffered reads). Do not modify this manually, use\n *     {createUnbufferedStream} to convert the stream to unbuffered mode\n *     instead.\n */\nAWS.HttpResponse = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpResponse() {\n    this.statusCode = undefined;\n    this.headers = {};\n    this.body = undefined;\n    this.streaming = false;\n    this.stream = null;\n  },\n\n  /**\n   * Disables buffering on the HTTP response and returns the stream for reading.\n   * @return [Stream, XMLHttpRequest, null] the underlying stream object.\n   *   Use this object to directly read data off of the stream.\n   * @note This object is only available after the {AWS.Request~httpHeaders}\n   *   event has fired. This method must be called prior to\n   *   {AWS.Request~httpData}.\n   * @example Taking control of a stream\n   *   request.on('httpHeaders', function(statusCode, headers) {\n   *     if (statusCode < 300) {\n   *       if (headers.etag === 'xyz') {\n   *         // pipe the stream, disabling buffering\n   *         var stream = this.response.httpResponse.createUnbufferedStream();\n   *         stream.pipe(process.stdout);\n   *       } else { // abort this request and set a better error message\n   *         this.abort();\n   *         this.response.error = new Error('Invalid ETag');\n   *       }\n   *     }\n   *   }).send(console.log);\n   */\n  createUnbufferedStream: function createUnbufferedStream() {\n    this.streaming = true;\n    return this.stream;\n  }\n});\n\n\nAWS.HttpClient = inherit({});\n\n/**\n * @api private\n */\nAWS.HttpClient.getInstance = function getInstance() {\n  if (this.singleton === undefined) {\n    this.singleton = new this();\n  }\n  return this.singleton;\n};\n","/**\n * The main AWS namespace\n */\nvar AWS = { util: require('./util') };\n\n/**\n * @api private\n * @!macro [new] nobrowser\n *   @note This feature is not supported in the browser environment of the SDK.\n */\nvar _hidden = {}; _hidden.toString(); // hack to parse macro\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nAWS.util.update(AWS, {\n\n  /**\n   * @constant\n   */\n  VERSION: '2.708.0',\n\n  /**\n   * @api private\n   */\n  Signers: {},\n\n  /**\n   * @api private\n   */\n  Protocol: {\n    Json: require('./protocol/json'),\n    Query: require('./protocol/query'),\n    Rest: require('./protocol/rest'),\n    RestJson: require('./protocol/rest_json'),\n    RestXml: require('./protocol/rest_xml')\n  },\n\n  /**\n   * @api private\n   */\n  XML: {\n    Builder: require('./xml/builder'),\n    Parser: null // conditionally set based on environment\n  },\n\n  /**\n   * @api private\n   */\n  JSON: {\n    Builder: require('./json/builder'),\n    Parser: require('./json/parser')\n  },\n\n  /**\n   * @api private\n   */\n  Model: {\n    Api: require('./model/api'),\n    Operation: require('./model/operation'),\n    Shape: require('./model/shape'),\n    Paginator: require('./model/paginator'),\n    ResourceWaiter: require('./model/resource_waiter')\n  },\n\n  /**\n   * @api private\n   */\n  apiLoader: require('./api_loader'),\n\n  /**\n   * @api private\n   */\n  EndpointCache: require('../vendor/endpoint-cache').EndpointCache\n});\nrequire('./sequential_executor');\nrequire('./service');\nrequire('./config');\nrequire('./http');\nrequire('./event_listeners');\nrequire('./request');\nrequire('./response');\nrequire('./resource_waiter');\nrequire('./signers/request_signer');\nrequire('./param_validator');\n\n/**\n * @readonly\n * @return [AWS.SequentialExecutor] a collection of global event listeners that\n *   are attached to every sent request.\n * @see AWS.Request AWS.Request for a list of events to listen for\n * @example Logging the time taken to send a request\n *   AWS.events.on('send', function startSend(resp) {\n *     resp.startTime = new Date().getTime();\n *   }).on('complete', function calculateTime(resp) {\n *     var time = (new Date().getTime() - resp.startTime) / 1000;\n *     console.log('Request took ' + time + ' seconds');\n *   });\n *\n *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'\n */\nAWS.events = new AWS.SequentialExecutor();\n\n//create endpoint cache lazily\nAWS.util.memoizedProperty(AWS, 'endpointCache', function() {\n  return new AWS.EndpointCache(AWS.config.endpointCacheSize);\n}, true);\n","/**\n * Escapes characters that can not be in an XML element.\n */\nfunction escapeElement(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeElement: escapeElement\n};\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {\n  /**\n   * When building the stringToSign, these sub resource params should be\n   * part of the canonical resource string with their NON-decoded values\n   */\n  subResources: {\n    'acl': 1,\n    'accelerate': 1,\n    'analytics': 1,\n    'cors': 1,\n    'lifecycle': 1,\n    'delete': 1,\n    'inventory': 1,\n    'location': 1,\n    'logging': 1,\n    'metrics': 1,\n    'notification': 1,\n    'partNumber': 1,\n    'policy': 1,\n    'requestPayment': 1,\n    'replication': 1,\n    'restore': 1,\n    'tagging': 1,\n    'torrent': 1,\n    'uploadId': 1,\n    'uploads': 1,\n    'versionId': 1,\n    'versioning': 1,\n    'versions': 1,\n    'website': 1\n  },\n\n  // when building the stringToSign, these querystring params should be\n  // part of the canonical resource string with their NON-encoded values\n  responseHeaders: {\n    'response-content-type': 1,\n    'response-content-language': 1,\n    'response-expires': 1,\n    'response-cache-control': 1,\n    'response-content-disposition': 1,\n    'response-content-encoding': 1\n  },\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    if (!this.request.headers['presigned-expires']) {\n      this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);\n    }\n\n    if (credentials.sessionToken) {\n      // presigned URLs require this header to be lowercased\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    var signature = this.sign(credentials.secretAccessKey, this.stringToSign());\n    var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;\n\n    this.request.headers['Authorization'] = auth;\n  },\n\n  stringToSign: function stringToSign() {\n    var r = this.request;\n\n    var parts = [];\n    parts.push(r.method);\n    parts.push(r.headers['Content-MD5'] || '');\n    parts.push(r.headers['Content-Type'] || '');\n\n    // This is the \"Date\" header, but we use X-Amz-Date.\n    // The S3 signing mechanism requires us to pass an empty\n    // string for this Date header regardless.\n    parts.push(r.headers['presigned-expires'] || '');\n\n    var headers = this.canonicalizedAmzHeaders();\n    if (headers) parts.push(headers);\n    parts.push(this.canonicalizedResource());\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {\n\n    var amzHeaders = [];\n\n    AWS.util.each(this.request.headers, function (name) {\n      if (name.match(/^x-amz-/i))\n        amzHeaders.push(name);\n    });\n\n    amzHeaders.sort(function (a, b) {\n      return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n    });\n\n    var parts = [];\n    AWS.util.arrayEach.call(this, amzHeaders, function (name) {\n      parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));\n    });\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined) {\n            querystring.push(res.name);\n          } else {\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n\n  sign: function sign(secret, string) {\n    return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.S3;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * @note AWS.TemporaryCredentials is deprecated, but remains available for\n *   backwards compatibility. {AWS.ChainableTemporaryCredentials} is the\n *   preferred class for temporary credentials.\n *\n * To setup temporary credentials, configure a set of master credentials\n * using the standard credentials providers (environment, EC2 instance metadata,\n * or from the filesystem), then set the global credentials to a new\n * temporary credentials object:\n *\n * ```javascript\n * // Note that environment credentials are loaded by default,\n * // the following line is shown for clarity:\n * AWS.config.credentials = new AWS.EnvironmentCredentials('AWS');\n *\n * // Now set temporary credentials seeded from the master credentials\n * AWS.config.credentials = new AWS.TemporaryCredentials();\n *\n * // subsequent requests will now use temporary credentials from AWS STS.\n * new AWS.S3().listBucket(function(err, data) { ... });\n * ```\n *\n * @!attribute masterCredentials\n *   @return [AWS.Credentials] the master (non-temporary) credentials used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @note In order to create temporary credentials, you first need to have\n   *   \"master\" credentials configured in {AWS.Config.credentials}. These\n   *   master credentials are necessary to retrieve the temporary credentials,\n   *   as well as refresh the credentials when they expire.\n   * @param params [map] a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role.\n   * @param masterCredentials [AWS.Credentials] the master (non-temporary) credentials\n   *  used to get and refresh temporary credentials from AWS STS.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.TemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.TemporaryCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials',\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function TemporaryCredentials(params, masterCredentials) {\n    AWS.Credentials.call(this);\n    this.loadMasterCredentials(masterCredentials);\n    this.expired = true;\n\n    this.params = params || {};\n    if (this.params.RoleArn) {\n      this.params.RoleSessionName =\n        this.params.RoleSessionName || 'temporary-credentials';\n    }\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh (callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load (callback) {\n    var self = this;\n    self.createClients();\n    self.masterCredentials.get(function () {\n      self.service.config.credentials = self.masterCredentials;\n      var operation = self.params.RoleArn ?\n        self.service.assumeRole : self.service.getSessionToken;\n      operation.call(self.service, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadMasterCredentials: function loadMasterCredentials (masterCredentials) {\n    this.masterCredentials = masterCredentials || AWS.config.credentials;\n    while (this.masterCredentials.masterCredentials) {\n      this.masterCredentials = this.masterCredentials.masterCredentials;\n    }\n\n    if (typeof this.masterCredentials.get !== 'function') {\n      this.masterCredentials = new AWS.Credentials(this.masterCredentials);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function () {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","var property = require('../util').property;\n\nfunction Paginator(name, paginator) {\n  property(this, 'inputToken', paginator.input_token);\n  property(this, 'limitKey', paginator.limit_key);\n  property(this, 'moreResults', paginator.more_results);\n  property(this, 'outputToken', paginator.output_token);\n  property(this, 'resultKey', paginator.result_key);\n}\n\n/**\n * @api private\n */\nmodule.exports = Paginator;\n","var memoizedProperty = require('../util').memoizedProperty;\n\nfunction memoize(name, value, factory, nameTr) {\n  memoizedProperty(this, nameTr(name), function() {\n    return factory(name, value);\n  });\n}\n\nfunction Collection(iterable, options, factory, nameTr, callback) {\n  nameTr = nameTr || String;\n  var self = this;\n\n  for (var id in iterable) {\n    if (Object.prototype.hasOwnProperty.call(iterable, id)) {\n      memoize.call(self, id, iterable[id], factory, nameTr);\n      if (callback) callback(id, iterable[id]);\n    }\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Collection;\n","var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    this.validateType(params, context, ['object'], 'structure');\n\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n","var AWS = require('../core');\nvar v4Credentials = require('../signers/v4_credentials');\nvar resolveRegionalEndpointsFlag = require('../config_regional_endpoint');\nvar regionUtil = require('../region_config');\n\n// Pull in managed upload extension\nrequire('../s3/managed_upload');\n\n/**\n * @api private\n */\nvar operationsWith200StatusCodeError = {\n  'completeMultipartUpload': true,\n  'copyObject': true,\n  'uploadPartCopy': true\n};\n\n/**\n * @api private\n */\n var regionRedirectErrorCodes = [\n  'AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints\n  'BadRequest', // head operations on virtual-hosted global bucket endpoints\n  'PermanentRedirect', // non-head operations on path-style or regional endpoints\n  301 // head operations on path-style or regional endpoints\n ];\n\nAWS.util.update(AWS.S3.prototype, {\n  /**\n   * @api private\n   */\n  getSignatureVersion: function getSignatureVersion(request) {\n    var defaultApiVersion = this.api.signatureVersion;\n    var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;\n    var regionDefinedVersion = this.config.signatureVersion;\n    var isPresigned = request ? request.isPresigned() : false;\n    /*\n      1) User defined version specified:\n        a) always return user defined version\n      2) No user defined version specified:\n        a) If not using presigned urls, default to V4\n        b) If using presigned urls, default to lowest version the region supports\n    */\n    if (userDefinedVersion) {\n      userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;\n      return userDefinedVersion;\n    }\n    if (isPresigned !== true) {\n      defaultApiVersion = 'v4';\n    } else if (regionDefinedVersion) {\n      defaultApiVersion = regionDefinedVersion;\n    }\n    return defaultApiVersion;\n  },\n\n  /**\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var signatureVersion = this.getSignatureVersion(request);\n    return AWS.Signers.RequestSigner.getVersion(signatureVersion);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    var msg;\n    var messages = [];\n\n    // default to us-east-1 when no region is provided\n    if (!this.config.region) this.config.region = 'us-east-1';\n\n    if (!this.config.endpoint && this.config.s3BucketEndpoint) {\n      messages.push('An endpoint must be provided when configuring ' +\n                    '`s3BucketEndpoint` to true.');\n    }\n    if (messages.length === 1) {\n      msg = messages[0];\n    } else if (messages.length > 1) {\n      msg = 'Multiple configuration errors:\\n' + messages.join('\\n');\n    }\n    if (msg) {\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  shouldDisableBodySigning: function shouldDisableBodySigning(request) {\n    var signerClass = this.getSignerClass();\n    if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4\n        && request.httpRequest.endpoint.protocol === 'https:') {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    var prependListener = true;\n    request.addListener('validate', this.validateScheme);\n    request.addListener('validate', this.validateBucketName, prependListener);\n    request.addListener('validate', this.optInUsEast1RegionalEndpoint, prependListener);\n\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_REGION);\n    request.addListener('build', this.addContentType);\n    request.addListener('build', this.computeContentMd5);\n    request.addListener('build', this.computeSseCustomerKeyMd5);\n    request.addListener('build', this.populateURI);\n    request.addListener('afterBuild', this.addExpect100Continue);\n    request.addListener('extractError', this.extractError);\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n    request.addListener('extractData', this.extractData);\n    request.addListener('extractData', this.extractErrorFrom200Response);\n    request.addListener('beforePresign', this.prepareSignedUrl);\n    if (this.shouldDisableBodySigning(request))  {\n      request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n      request.addListener('afterBuild', this.disableBodySigning);\n    }\n    //deal with ARNs supplied to Bucket\n    if (this.isAccessPointApplicable(request)) {\n      request.removeListener('validate', this.validateBucketName);\n      request.addListener('validate', this.validateAccessPointArn, prependListener);\n      request.addListener('validate', this.validateArnRegion);\n      request.removeListener('build', this.populateURI);\n      request.addListener('build', this.populateUriFromAccessPoint);\n      return;\n    }\n    //listeners regarding region inference\n    request.addListener('validate', this.validateBucketEndpoint);\n    request.addListener('validate', this.correctBucketRegionFromCache);\n    request.onAsync('extractError', this.requestBucketRegion);\n    if (AWS.util.isBrowser()) {\n      request.onAsync('retry', this.reqRegionForNetworkingError);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateScheme: function(req) {\n    var params = req.params,\n        scheme = req.httpRequest.endpoint.protocol,\n        sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;\n    if (sensitive && scheme !== 'https:') {\n      var msg = 'Cannot send SSE keys over HTTP. Set \\'sslEnabled\\'' +\n        'to \\'true\\' in your configuration';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketEndpoint: function(req) {\n    if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {\n      var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isAccessPointApplicable: function hasBucketInParams(req) {\n    var inputShape = (req.service.api.operations[req.operation] || {}).input || {};\n    var inputMembers = inputShape.members || {};\n    if (\n      req.operation === 'createBucket' ||\n      !req.params.Bucket ||\n      !inputMembers.Bucket\n    ) return false;\n    if (!AWS.util.ARN.validate(req.params.Bucket)) return false;\n    return true;\n  },\n\n  /**\n   * Validate ARN supplied in Bucket parameter is a valid access point ARN\n   *\n   * @api private\n   */\n  validateAccessPointArn: function validateAccessPointArn(req) {\n    var parsedArn = AWS.util.ARN.parse(req.params.Bucket);\n    //avoid duplicated parsing in the future\n    req._parsedAccessPointArn = parsedArn;\n    var parsedArn = req._parsedAccessPointArn;\n    if (parsedArn.service !== 's3') {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidAccessPointARN',\n        message: 'expect \\'s3\\' in access point ARN service component'\n      });\n    }\n    if (!parsedArn.region) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidAccessPointARN',\n        message: 'Access point ARN region is empty'\n      });\n    }\n    if (\n      parsedArn.resource.indexOf('accesspoint:') !== 0 &&\n      parsedArn.resource.indexOf('accesspoint/') !== 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidAccessPointARN',\n        message: 'Access point ARN resource should begin with \\'accesspoint/\\''\n      });\n    }\n    var delimiter = parsedArn.resource['accesspoint'.length]; //can be ':' or '/'\n    if (parsedArn.resource.split(delimiter).length !== 2) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidAccessPointARN',\n        message: 'Too many resource parameters in access point ARN'\n      });\n    }\n    var accessPoint = parsedArn.resource.split(delimiter)[1];\n    var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n    if (!req.service.isDnsCompatible(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidAccessPointARN',\n        message: 'Access point ARN is not DNS compatible. Got ' + accessPoint\n      });\n    }\n    //set parsed valid access point\n    req._parsedAccessPointArn.accessPoint = accessPoint;\n  },\n\n  /**\n   * @api private\n   */\n  validateArnRegion: function validateArnRegion(req) {\n    var useArnRegion = req.service.loadUseArnRegionConfig(req);\n    var regionFromArn = req._parsedAccessPointArn.region;\n    var clientRegion = req.service.config.region;\n    if (\n      clientRegion.indexOf('fips') >= 0 ||\n      regionFromArn.indexOf('fips') >= 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Access point endpoint is not compatible with FIPS region'\n      });\n    }\n    if (!useArnRegion && regionFromArn !== clientRegion) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region conflicts with access point region'\n      });\n    } else if (\n      useArnRegion &&\n      regionUtil.getEndpointSuffix(regionFromArn) !== regionUtil.getEndpointSuffix(clientRegion)\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region and access point region not in same partition'\n      });\n    }\n    if (req.service.config.useAccelerateEndpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'useAccelerateEndpoint config is not supported with access point ARN'\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  loadUseArnRegionConfig: function loadUseArnRegionConfig(req) {\n    var envName = 'AWS_S3_USE_ARN_REGION';\n    var configName = 's3_use_arn_region';\n    var useArnRegion = true;\n    var originalConfig = req.service._originalConfig || {};\n    if (req.service.config.s3UseArnRegion !== undefined) {\n      return req.service.config.s3UseArnRegion;\n    } else if (originalConfig.s3UseArnRegion !== undefined) {\n      useArnRegion = originalConfig.s3UseArnRegion === true;\n    } else if (AWS.util.isNode()) {\n      //load from environmental variable AWS_USE_ARN_REGION\n      if (process.env[envName]) {\n        var value = process.env[envName].trim().toLowerCase();\n        if (['false', 'true'].indexOf(value) < 0) {\n          throw AWS.util.error(new Error(), {\n            code: 'InvalidConfiguration',\n            message: envName + ' only accepts true or false. Got ' + process.env[envName],\n            retryable: false\n          });\n        }\n        useArnRegion = value === 'true';\n      } else {  //load from shared config property use_arn_region\n        var profiles = {};\n        var profile = {};\n        try {\n          profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n          profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n        } catch (e) {}\n        if (profile[configName]) {\n          if (['false', 'true'].indexOf(profile[configName].trim().toLowerCase()) < 0) {\n            throw AWS.util.error(new Error(), {\n              code: 'InvalidConfiguration',\n              message: configName + ' only accepts true or false. Got ' + profile[configName],\n              retryable: false\n            });\n          }\n          useArnRegion = profile[configName].trim().toLowerCase() === 'true';\n        }\n      }\n    }\n    req.service.config.s3UseArnRegion = useArnRegion;\n    return useArnRegion;\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketName: function validateBucketName(req) {\n    var service = req.service;\n    var signatureVersion = service.getSignatureVersion(req);\n    var bucket = req.params && req.params.Bucket;\n    var key = req.params && req.params.Key;\n    var slashIndex = bucket && bucket.indexOf('/');\n    if (bucket && slashIndex >= 0) {\n      if (typeof key === 'string' && slashIndex > 0) {\n        req.params = AWS.util.copy(req.params);\n        // Need to include trailing slash to match sigv2 behavior\n        var prefix = bucket.substr(slashIndex + 1) || '';\n        req.params.Key = prefix + '/' + key;\n        req.params.Bucket = bucket.substr(0, slashIndex);\n      } else if (signatureVersion === 'v4') {\n        var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;\n        throw AWS.util.error(new Error(),\n          { code: 'InvalidBucket', message: msg });\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isValidAccelerateOperation: function isValidAccelerateOperation(operation) {\n    var invalidOperations = [\n      'createBucket',\n      'deleteBucket',\n      'listBuckets'\n    ];\n    return invalidOperations.indexOf(operation) === -1;\n  },\n\n  /**\n   * When us-east-1 region endpoint configuration is set, in stead of sending request to\n   * global endpoint(e.g. 's3.amazonaws.com'), we will send request to\n   * 's3.us-east-1.amazonaws.com'.\n   * @api private\n   */\n  optInUsEast1RegionalEndpoint: function optInUsEast1RegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.s3UsEast1RegionalEndpoint = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: 'AWS_S3_US_EAST_1_REGIONAL_ENDPOINT',\n      sharedConfig: 's3_us_east_1_regional_endpoint',\n      clientConfig: 's3UsEast1RegionalEndpoint'\n    });\n    if (\n      !(service._originalConfig || {}).endpoint &&\n      req.httpRequest.region === 'us-east-1' &&\n      config.s3UsEast1RegionalEndpoint === 'regional' &&\n      req.httpRequest.endpoint.hostname.indexOf('s3.amazonaws.com') >= 0\n    ) {\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.us-east-1' + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n    }\n  },\n\n  /**\n   * S3 prefers dns-compatible bucket names to be moved from the uri path\n   * to the hostname as a sub-domain.  This is not possible, even for dns-compat\n   * buckets when using SSL and the bucket name contains a dot ('.').  The\n   * ssl wildcard certificate is only 1-level deep.\n   *\n   * @api private\n   */\n  populateURI: function populateURI(req) {\n    var httpRequest = req.httpRequest;\n    var b = req.params.Bucket;\n    var service = req.service;\n    var endpoint = httpRequest.endpoint;\n    if (b) {\n      if (!service.pathStyleBucketName(b)) {\n        if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {\n          if (service.config.useDualstack) {\n            endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';\n          } else {\n            endpoint.hostname = b + '.s3-accelerate.amazonaws.com';\n          }\n        } else if (!service.config.s3BucketEndpoint) {\n          endpoint.hostname =\n            b + '.' + endpoint.hostname;\n        }\n\n        var port = endpoint.port;\n        if (port !== 80 && port !== 443) {\n          endpoint.host = endpoint.hostname + ':' +\n            endpoint.port;\n        } else {\n          endpoint.host = endpoint.hostname;\n        }\n\n        httpRequest.virtualHostedBucket = b; // needed for signing the request\n        service.removeVirtualHostedBucketFromPath(req);\n      }\n    }\n  },\n\n  /**\n   * Takes the bucket name out of the path if bucket is virtual-hosted\n   *\n   * @api private\n   */\n  removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {\n    var httpRequest = req.httpRequest;\n    var bucket = httpRequest.virtualHostedBucket;\n    if (bucket && httpRequest.path) {\n      if (req.params && req.params.Key) {\n        var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);\n        if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {\n          //path only contains key or path contains only key and querystring\n          return;\n        }\n      }\n      httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');\n      if (httpRequest.path[0] !== '/') {\n        httpRequest.path = '/' + httpRequest.path;\n      }\n    }\n  },\n\n  /**\n   * When user supply an access point ARN in the Bucket parameter, we need to\n   * populate the URI according to the ARN.\n   * @api private\n   */\n  populateUriFromAccessPoint: function populateUriFromAccessPoint(req) {\n    if (req.service._originalConfig.endpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Custom endpoint is not compatible with access point ARN'\n      });\n    }\n    if (req.service.config.s3ForcePathStyle) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Cannot construct path-style endpoint with access point'\n      });\n    }\n    var accessPointArn = req._parsedAccessPointArn;\n    var serviceName = req.service.config.useDualstack ?\n      's3-accesspoint.dualstack':\n      's3-accesspoint';\n    var endpoint = req.httpRequest.endpoint;\n    var dnsSuffix = regionUtil.getEndpointSuffix(accessPointArn.region);\n    var useArnRegion = req.service.config.s3UseArnRegion;\n    endpoint.hostname = [\n      accessPointArn.accessPoint + '-' + accessPointArn.accountId,\n      serviceName,\n      useArnRegion ? accessPointArn.region : req.service.config.region,\n      dnsSuffix\n    ].join('.');\n    endpoint.host = endpoint.hostname;\n    var encodedArn = AWS.util.uriEscape(req.params.Bucket);\n    var path = req.httpRequest.path;\n    //remove the Bucket value from path\n    req.httpRequest.path = path.replace(new RegExp('/' + encodedArn), '');\n    if (req.httpRequest.path[0] !== '/') {\n      req.httpRequest.path = '/' + req.httpRequest.path;\n    }\n    req.httpRequest.region = accessPointArn.region; //region used to sign\n  },\n\n  /**\n   * Adds Expect: 100-continue header if payload is greater-or-equal 1MB\n   * @api private\n   */\n  addExpect100Continue: function addExpect100Continue(req) {\n    var len = req.httpRequest.headers['Content-Length'];\n    if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {\n      req.httpRequest.headers['Expect'] = '100-continue';\n    }\n  },\n\n  /**\n   * Adds a default content type if none is supplied.\n   *\n   * @api private\n   */\n  addContentType: function addContentType(req) {\n    var httpRequest = req.httpRequest;\n    if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {\n      // Content-Type is not set in GET/HEAD requests\n      delete httpRequest.headers['Content-Type'];\n      return;\n    }\n\n    if (!httpRequest.headers['Content-Type']) { // always have a Content-Type\n      httpRequest.headers['Content-Type'] = 'application/octet-stream';\n    }\n\n    var contentType = httpRequest.headers['Content-Type'];\n    if (AWS.util.isBrowser()) {\n      if (typeof httpRequest.body === 'string' && !contentType.match(/;\\s*charset=/)) {\n        var charset = '; charset=UTF-8';\n        httpRequest.headers['Content-Type'] += charset;\n      } else {\n        var replaceFn = function(_, prefix, charsetName) {\n          return prefix + charsetName.toUpperCase();\n        };\n\n        httpRequest.headers['Content-Type'] =\n          contentType.replace(/(;\\s*charset=)(.+)$/, replaceFn);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computableChecksumOperations: {\n    putBucketCors: true,\n    putBucketLifecycle: true,\n    putBucketLifecycleConfiguration: true,\n    putBucketTagging: true,\n    deleteObjects: true,\n    putBucketReplication: true,\n    putObjectLegalHold: true,\n    putObjectRetention: true,\n    putObjectLockConfiguration: true\n  },\n\n  /**\n   * Checks whether checksums should be computed for the request.\n   * If the request requires checksums to be computed, this will always\n   * return true, otherwise it depends on whether {AWS.Config.computeChecksums}\n   * is set.\n   *\n   * @param req [AWS.Request] the request to check against\n   * @return [Boolean] whether to compute checksums for a request.\n   * @api private\n   */\n  willComputeChecksums: function willComputeChecksums(req) {\n    if (this.computableChecksumOperations[req.operation]) return true;\n    if (!this.config.computeChecksums) return false;\n\n    // TODO: compute checksums for Stream objects\n    if (!AWS.util.Buffer.isBuffer(req.httpRequest.body) &&\n        typeof req.httpRequest.body !== 'string') {\n      return false;\n    }\n\n    var rules = req.service.api.operations[req.operation].input.members;\n\n    // Sha256 signing disabled, and not a presigned url\n    if (req.service.shouldDisableBodySigning(req) && !Object.prototype.hasOwnProperty.call(req.httpRequest.headers, 'presigned-expires')) {\n      if (rules.ContentMD5 && !req.params.ContentMD5) {\n        return true;\n      }\n    }\n\n    // V4 signer uses SHA256 signatures so only compute MD5 if it is required\n    if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n      if (rules.ContentMD5 && !rules.ContentMD5.required) return false;\n    }\n\n    if (rules.ContentMD5 && !req.params.ContentMD5) return true;\n  },\n\n  /**\n   * A listener that computes the Content-MD5 and sets it in the header.\n   * @see AWS.S3.willComputeChecksums\n   * @api private\n   */\n  computeContentMd5: function computeContentMd5(req) {\n    if (req.service.willComputeChecksums(req)) {\n      var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');\n      req.httpRequest.headers['Content-MD5'] = md5;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {\n    var keys = {\n      SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',\n      CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'\n    };\n    AWS.util.each(keys, function(key, header) {\n      if (req.params[key]) {\n        var value = AWS.util.crypto.md5(req.params[key], 'base64');\n        req.httpRequest.headers[header] = value;\n      }\n    });\n  },\n\n  /**\n   * Returns true if the bucket name should be left in the URI path for\n   * a request to S3.  This function takes into account the current\n   * endpoint protocol (e.g. http or https).\n   *\n   * @api private\n   */\n  pathStyleBucketName: function pathStyleBucketName(bucketName) {\n    // user can force path style requests via the configuration\n    if (this.config.s3ForcePathStyle) return true;\n    if (this.config.s3BucketEndpoint) return false;\n\n    if (this.isDnsCompatible(bucketName)) {\n      return (this.config.sslEnabled && bucketName.match(/\\./)) ? true : false;\n    } else {\n      return true; // not dns compatible names must always use path style\n    }\n  },\n\n  /**\n   * Returns true if the bucket name is DNS compatible.  Buckets created\n   * outside of the classic region MUST be DNS compatible.\n   *\n   * @api private\n   */\n  isDnsCompatible: function isDnsCompatible(bucketName) {\n    var b = bucketName;\n    var domain = new RegExp(/^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/);\n    var ipAddress = new RegExp(/(\\d+\\.){3}\\d+/);\n    var dots = new RegExp(/\\.\\./);\n    return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;\n  },\n\n  /**\n   * For COPY operations, some can be error even with status code 200.\n   * SDK treats the response as exception when response body indicates\n   * an exception or body is empty.\n   *\n   * @api private\n   */\n  extractErrorFrom200Response: function extractErrorFrom200Response(resp) {\n    if (!operationsWith200StatusCodeError[resp.request.operation]) return;\n    var httpResponse = resp.httpResponse;\n    if (httpResponse.body && httpResponse.body.toString().match('<Error>')) {\n      // Response body with '<Error>...</Error>' indicates an exception.\n      // Get S3 client object. In ManagedUpload, this.service refers to\n      // S3 client object.\n      resp.data = null;\n      var service = this.service ? this.service : this;\n      service.extractError(resp);\n      throw resp.error;\n    } else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\\w_]/)) {\n      // When body is empty or incomplete, S3 might stop the request on detecting client\n      // side aborting the request.\n      resp.data = null;\n      throw AWS.util.error(new Error(), {\n        code: 'InternalError',\n        message: 'S3 aborted request'\n      });\n    }\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error, request) {\n    if (operationsWith200StatusCodeError[request.operation] &&\n        error.statusCode === 200) {\n      return true;\n    } else if (request._requestRegionForBucket &&\n        request.service.bucketRegionCache[request._requestRegionForBucket]) {\n      return false;\n    } else if (error && error.code === 'RequestTimeout') {\n      return true;\n    } else if (error &&\n        regionRedirectErrorCodes.indexOf(error.code) != -1 &&\n        error.region && error.region != request.httpRequest.region) {\n      request.httpRequest.region = error.region;\n      if (error.statusCode === 301) {\n        request.service.updateReqBucketRegion(request);\n      }\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error, request);\n    }\n  },\n\n  /**\n   * Updates httpRequest with region. If region is not provided, then\n   * the httpRequest will be updated based on httpRequest.region\n   *\n   * @api private\n   */\n  updateReqBucketRegion: function updateReqBucketRegion(request, region) {\n    var httpRequest = request.httpRequest;\n    if (typeof region === 'string' && region.length) {\n      httpRequest.region = region;\n    }\n    if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\.amazonaws\\.com$/)) {\n      return;\n    }\n    var service = request.service;\n    var s3Config = service.config;\n    var s3BucketEndpoint = s3Config.s3BucketEndpoint;\n    if (s3BucketEndpoint) {\n      delete s3Config.s3BucketEndpoint;\n    }\n    var newConfig = AWS.util.copy(s3Config);\n    delete newConfig.endpoint;\n    newConfig.region = httpRequest.region;\n\n    httpRequest.endpoint = (new AWS.S3(newConfig)).endpoint;\n    service.populateURI(request);\n    s3Config.s3BucketEndpoint = s3BucketEndpoint;\n    httpRequest.headers.Host = httpRequest.endpoint.host;\n\n    if (request._asm.currentState === 'validate') {\n      request.removeListener('build', service.populateURI);\n      request.addListener('build', service.removeVirtualHostedBucketFromPath);\n    }\n  },\n\n  /**\n   * Provides a specialized parser for getBucketLocation -- all other\n   * operations are parsed by the super class.\n   *\n   * @api private\n   */\n  extractData: function extractData(resp) {\n    var req = resp.request;\n    if (req.operation === 'getBucketLocation') {\n      var match = resp.httpResponse.body.toString().match(/>(.+)<\\/Location/);\n      delete resp.data['_'];\n      if (match) {\n        resp.data.LocationConstraint = match[1];\n      } else {\n        resp.data.LocationConstraint = '';\n      }\n    }\n    var bucket = req.params.Bucket || null;\n    if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {\n      req.service.clearBucketRegionCache(bucket);\n    } else {\n      var headers = resp.httpResponse.headers || {};\n      var region = headers['x-amz-bucket-region'] || null;\n      if (!region && req.operation === 'createBucket' && !resp.error) {\n        var createBucketConfiguration = req.params.CreateBucketConfiguration;\n        if (!createBucketConfiguration) {\n          region = 'us-east-1';\n        } else if (createBucketConfiguration.LocationConstraint === 'EU') {\n          region = 'eu-west-1';\n        } else {\n          region = createBucketConfiguration.LocationConstraint;\n        }\n      }\n      if (region) {\n          if (bucket && region !== req.service.bucketRegionCache[bucket]) {\n            req.service.bucketRegionCache[bucket] = region;\n          }\n      }\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * Extracts an error object from the http response.\n   *\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    var codes = {\n      304: 'NotModified',\n      403: 'Forbidden',\n      400: 'BadRequest',\n      404: 'NotFound'\n    };\n\n    var req = resp.request;\n    var code = resp.httpResponse.statusCode;\n    var body = resp.httpResponse.body || '';\n\n    var headers = resp.httpResponse.headers || {};\n    var region = headers['x-amz-bucket-region'] || null;\n    var bucket = req.params.Bucket || null;\n    var bucketRegionCache = req.service.bucketRegionCache;\n    if (region && bucket && region !== bucketRegionCache[bucket]) {\n      bucketRegionCache[bucket] = region;\n    }\n\n    var cachedRegion;\n    if (codes[code] && body.length === 0) {\n      if (bucket && !region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n      resp.error = AWS.util.error(new Error(), {\n        code: codes[code],\n        message: null,\n        region: region\n      });\n    } else {\n      var data = new AWS.XML.Parser().parse(body.toString());\n\n      if (data.Region && !region) {\n        region = data.Region;\n        if (bucket && region !== bucketRegionCache[bucket]) {\n          bucketRegionCache[bucket] = region;\n        }\n      } else if (bucket && !region && !data.Region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Code || code,\n        message: data.Message || null,\n        region: region\n      });\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * If region was not obtained synchronously, then send async request\n   * to get bucket region for errors resulting from wrong region.\n   *\n   * @api private\n   */\n  requestBucketRegion: function requestBucketRegion(resp, done) {\n    var error = resp.error;\n    var req = resp.request;\n    var bucket = req.params.Bucket || null;\n\n    if (!error || !bucket || error.region || req.operation === 'listObjects' ||\n        (AWS.util.isNode() && req.operation === 'headBucket') ||\n        (error.statusCode === 400 && req.operation !== 'headObject') ||\n        regionRedirectErrorCodes.indexOf(error.code) === -1) {\n      return done();\n    }\n    var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';\n    var reqParams = {Bucket: bucket};\n    if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;\n    var regionReq = req.service[reqOperation](reqParams);\n    regionReq._requestRegionForBucket = bucket;\n    regionReq.send(function() {\n      var region = req.service.bucketRegionCache[bucket] || null;\n      error.region = region;\n      done();\n    });\n  },\n\n   /**\n   * For browser only. If NetworkingError received, will attempt to obtain\n   * the bucket region.\n   *\n   * @api private\n   */\n   reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {\n    if (!AWS.util.isBrowser()) {\n      return done();\n    }\n    var error = resp.error;\n    var request = resp.request;\n    var bucket = request.params.Bucket;\n    if (!error || error.code !== 'NetworkingError' || !bucket ||\n        request.httpRequest.region === 'us-east-1') {\n      return done();\n    }\n    var service = request.service;\n    var bucketRegionCache = service.bucketRegionCache;\n    var cachedRegion = bucketRegionCache[bucket] || null;\n\n    if (cachedRegion && cachedRegion !== request.httpRequest.region) {\n      service.updateReqBucketRegion(request, cachedRegion);\n      done();\n    } else if (!service.isDnsCompatible(bucket)) {\n      service.updateReqBucketRegion(request, 'us-east-1');\n      if (bucketRegionCache[bucket] !== 'us-east-1') {\n        bucketRegionCache[bucket] = 'us-east-1';\n      }\n      done();\n    } else if (request.httpRequest.virtualHostedBucket) {\n      var getRegionReq = service.listObjects({Bucket: bucket, MaxKeys: 0});\n      service.updateReqBucketRegion(getRegionReq, 'us-east-1');\n      getRegionReq._requestRegionForBucket = bucket;\n\n      getRegionReq.send(function() {\n        var region = service.bucketRegionCache[bucket] || null;\n        if (region && region !== request.httpRequest.region) {\n          service.updateReqBucketRegion(request, region);\n        }\n        done();\n      });\n    } else {\n      // DNS-compatible path-style\n      // (s3ForcePathStyle or bucket name with dot over https)\n      // Cannot obtain region information for this case\n      done();\n    }\n   },\n\n  /**\n   * Cache for bucket region.\n   *\n   * @api private\n   */\n   bucketRegionCache: {},\n\n  /**\n   * Clears bucket region cache.\n   *\n   * @api private\n   */\n   clearBucketRegionCache: function(buckets) {\n    var bucketRegionCache = this.bucketRegionCache;\n    if (!buckets) {\n      buckets = Object.keys(bucketRegionCache);\n    } else if (typeof buckets === 'string') {\n      buckets = [buckets];\n    }\n    for (var i = 0; i < buckets.length; i++) {\n      delete bucketRegionCache[buckets[i]];\n    }\n    return bucketRegionCache;\n   },\n\n   /**\n    * Corrects request region if bucket's cached region is different\n    *\n    * @api private\n    */\n  correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {\n    var bucket = req.params.Bucket || null;\n    if (bucket) {\n      var service = req.service;\n      var requestRegion = req.httpRequest.region;\n      var cachedRegion = service.bucketRegionCache[bucket];\n      if (cachedRegion && cachedRegion !== requestRegion) {\n        service.updateReqBucketRegion(req, cachedRegion);\n      }\n    }\n  },\n\n  /**\n   * Extracts S3 specific request ids from the http response.\n   *\n   * @api private\n   */\n  extractRequestIds: function extractRequestIds(resp) {\n    var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;\n    var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;\n    resp.extendedRequestId = extendedRequestId;\n    resp.cfId = cfId;\n\n    if (resp.error) {\n      resp.error.requestId = resp.requestId || null;\n      resp.error.extendedRequestId = extendedRequestId;\n      resp.error.cfId = cfId;\n    }\n  },\n\n  /**\n   * Get a pre-signed URL for a given operation name.\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   * @note Not all operation parameters are supported when using pre-signed\n   *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *   `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *   request. If you are using pre-signed URLs to upload from a browser and\n   *   need to use these fields, see {createPresignedPost}.\n   * @note The default signer allows altering the request by adding corresponding\n   *   headers to set some parameters (e.g. Range) and these added parameters\n   *   won't be signed. You must use signatureVersion v4 to to include these\n   *   parameters in the signed portion of the URL and enforce exact matching\n   *   between headers and signed params in the URL.\n   * @note This operation cannot be used with a promise. See note above regarding\n   *   asynchronous credentials and use with a callback.\n   * @param operation [String] the name of the operation to call\n   * @param params [map] parameters to pass to the operation. See the given\n   *   operation for the expected operation parameters. In addition, you can\n   *   also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *   work for.\n   * @option params Expires [Integer] (900) the number of seconds to expire\n   *   the pre-signed URL operation in. Defaults to 15 minutes.\n   * @param callback [Function] if a callback is provided, this function will\n   *   pass the URL as the second parameter (after the error parameter) to\n   *   the callback function.\n   * @return [String] if called synchronously (with no callback), returns the\n   *   signed URL.\n   * @return [null] nothing is returned if a callback is provided.\n   * @example Pre-signing a getObject operation (synchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url);\n   * @example Pre-signing a putObject (asynchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   s3.getSignedUrl('putObject', params, function (err, url) {\n   *     console.log('The URL is', url);\n   *   });\n   * @example Pre-signing a putObject operation with a specific payload\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *   var url = s3.getSignedUrl('putObject', params);\n   *   console.log('The URL is', url);\n   * @example Passing in a 1-minute expiry time for a pre-signed URL\n   *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url); // expires in 60 seconds\n   */\n  getSignedUrl: function getSignedUrl(operation, params, callback) {\n    params = AWS.util.copy(params || {});\n    var expires = params.Expires || 900;\n\n    if (typeof expires !== 'number') {\n      throw AWS.util.error(new Error(),\n        { code: 'InvalidParameterException', message: 'The expiration must be a number, received ' + typeof expires });\n    }\n\n    delete params.Expires; // we can't validate this\n    var request = this.makeRequest(operation, params);\n\n    if (callback) {\n      AWS.util.defer(function() {\n        request.presign(expires, callback);\n      });\n    } else {\n      return request.presign(expires, callback);\n    }\n  },\n\n  /**\n   * @!method  getSignedUrlPromise()\n   *   Returns a 'thenable' promise that will be resolved with a pre-signed URL\n   *   for a given operation name.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @note Not all operation parameters are supported when using pre-signed\n   *      URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *      `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *      request. If you are using pre-signed URLs to upload from a browser and\n   *      need to use these fields, see {createPresignedPost}.\n   *   @param operation [String] the name of the operation to call\n   *   @param params [map] parameters to pass to the operation. See the given\n   *      operation for the expected operation parameters. In addition, you can\n   *      also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *      work for.\n   *   @option params Expires [Integer] (900) the number of seconds to expire\n   *      the pre-signed URL operation in. Defaults to 15 minutes.\n   *   @callback fulfilledCallback function(url)\n   *     Called if the promise is fulfilled.\n   *     @param url [String] the signed url\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Pre-signing a getObject operation\n   *      var params = {Bucket: 'bucket', Key: 'key'};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Pre-signing a putObject operation with a specific payload\n   *      var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *      var promise = s3.getSignedUrlPromise('putObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Passing in a 1-minute expiry time for a pre-signed URL\n   *      var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   */\n\n  /**\n   * Get a pre-signed POST policy to support uploading to S3 directly from an\n   * HTML form.\n   *\n   * @param params [map]\n   * @option params Bucket [String]     The bucket to which the post should be\n   *                                    uploaded\n   * @option params Expires [Integer]   (3600) The number of seconds for which\n   *                                    the presigned policy should be valid.\n   * @option params Conditions [Array]  An array of conditions that must be met\n   *                                    for the presigned policy to allow the\n   *                                    upload. This can include required tags,\n   *                                    the accepted range for content lengths,\n   *                                    etc.\n   * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html\n   * @option params Fields [map]        Fields to include in the form. All\n   *                                    values passed in as fields will be\n   *                                    signed as exact match conditions.\n   * @param callback [Function]\n   *\n   * @note All fields passed in when creating presigned post data will be signed\n   *   as exact match conditions. Any fields that will be interpolated by S3\n   *   must be added to the fields hash after signing, and an appropriate\n   *   condition for such fields must be explicitly added to the Conditions\n   *   array passed to this function before signing.\n   *\n   * @example Presiging post data with a known key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Fields: {\n   *       key: 'key'\n   *     }\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @example Presigning post data with an interpolated key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Conditions: [\n   *       ['starts-with', '$key', 'path/to/uploads/']\n   *     ]\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       data.Fields.key = 'path/to/uploads/${filename}';\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   *\n   * @return [map]  If called synchronously (with no callback), returns a hash\n   *                with the url to set as the form action and a hash of fields\n   *                to include in the form.\n   * @return [null] Nothing is returned if a callback is provided.\n   *\n   * @callback callback function (err, data)\n   *  @param err [Error] the error object returned from the policy signer\n   *  @param data [map] The data necessary to construct an HTML form\n   *  @param data.url [String] The URL to use as the action of the form\n   *  @param data.fields [map] A hash of fields that must be included in the\n   *                           form for the upload to succeed. This hash will\n   *                           include the signed POST policy, your access key\n   *                           ID and security token (if present), etc. These\n   *                           may be safely included as input elements of type\n   *                           'hidden.'\n   */\n  createPresignedPost: function createPresignedPost(params, callback) {\n    if (typeof params === 'function' && callback === undefined) {\n      callback = params;\n      params = null;\n    }\n\n    params = AWS.util.copy(params || {});\n    var boundParams = this.config.params || {};\n    var bucket = params.Bucket || boundParams.Bucket,\n      self = this,\n      config = this.config,\n      endpoint = AWS.util.copy(this.endpoint);\n    if (!config.s3BucketEndpoint) {\n      endpoint.pathname = '/' + bucket;\n    }\n\n    function finalizePost() {\n      return {\n        url: AWS.util.urlFormat(endpoint),\n        fields: self.preparePostFields(\n          config.credentials,\n          config.region,\n          bucket,\n          params.Fields,\n          params.Conditions,\n          params.Expires\n        )\n      };\n    }\n\n    if (callback) {\n      config.getCredentials(function (err) {\n        if (err) {\n          callback(err);\n        }\n\n        callback(null, finalizePost());\n      });\n    } else {\n      return finalizePost();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  preparePostFields: function preparePostFields(\n    credentials,\n    region,\n    bucket,\n    fields,\n    conditions,\n    expiresInSeconds\n  ) {\n    var now = this.getSkewCorrectedDate();\n    if (!credentials || !region || !bucket) {\n      throw new Error('Unable to create a POST object policy without a bucket,'\n        + ' region, and credentials');\n    }\n    fields = AWS.util.copy(fields || {});\n    conditions = (conditions || []).slice(0);\n    expiresInSeconds = expiresInSeconds || 3600;\n\n    var signingDate = AWS.util.date.iso8601(now).replace(/[:\\-]|\\.\\d{3}/g, '');\n    var shortDate = signingDate.substr(0, 8);\n    var scope = v4Credentials.createScope(shortDate, region, 's3');\n    var credential = credentials.accessKeyId + '/' + scope;\n\n    fields['bucket'] = bucket;\n    fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    fields['X-Amz-Credential'] = credential;\n    fields['X-Amz-Date'] = signingDate;\n    if (credentials.sessionToken) {\n      fields['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n    for (var field in fields) {\n      if (fields.hasOwnProperty(field)) {\n        var condition = {};\n        condition[field] = fields[field];\n        conditions.push(condition);\n      }\n    }\n\n    fields.Policy = this.preparePostPolicy(\n      new Date(now.valueOf() + expiresInSeconds * 1000),\n      conditions\n    );\n    fields['X-Amz-Signature'] = AWS.util.crypto.hmac(\n      v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true),\n      fields.Policy,\n      'hex'\n    );\n\n    return fields;\n  },\n\n  /**\n   * @api private\n   */\n  preparePostPolicy: function preparePostPolicy(expiration, conditions) {\n    return AWS.util.base64.encode(JSON.stringify({\n      expiration: AWS.util.date.iso8601(expiration),\n      conditions: conditions\n    }));\n  },\n\n  /**\n   * @api private\n   */\n  prepareSignedUrl: function prepareSignedUrl(request) {\n    request.addListener('validate', request.service.noPresignedContentLength);\n    request.removeListener('build', request.service.addContentType);\n    if (!request.params.Body) {\n      // no Content-MD5/SHA-256 if body is not provided\n      request.removeListener('build', request.service.computeContentMd5);\n    } else {\n      request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    }\n  },\n\n  /**\n   * @api private\n   * @param request\n   */\n  disableBodySigning: function disableBodySigning(request) {\n    var headers = request.httpRequest.headers;\n    // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined\n    if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {\n      headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  noPresignedContentLength: function noPresignedContentLength(request) {\n    if (request.params.ContentLength !== undefined) {\n      throw AWS.util.error(new Error(), {code: 'UnexpectedParameter',\n        message: 'ContentLength is not supported in pre-signed URLs.'});\n    }\n  },\n\n  createBucket: function createBucket(params, callback) {\n    // When creating a bucket *outside* the classic region, the location\n    // constraint must be set for the bucket and it must match the endpoint.\n    // This chunk of code will set the location constraint param based\n    // on the region (when possible), but it will not override a passed-in\n    // location constraint.\n    if (typeof params === 'function' || !params) {\n      callback = callback || params;\n      params = {};\n    }\n    var hostname = this.endpoint.hostname;\n    // copy params so that appending keys does not unintentioinallly\n    // mutate params object argument passed in by user\n    var copiedParams = AWS.util.copy(params);\n\n    if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {\n      copiedParams.CreateBucketConfiguration = { LocationConstraint: this.config.region };\n    }\n    return this.makeRequest('createBucket', copiedParams, callback);\n  },\n\n  /**\n   * @see AWS.S3.ManagedUpload\n   * @overload upload(params = {}, [options], [callback])\n   *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent\n   *   concurrent handling of parts if the payload is large enough. You can\n   *   configure the concurrent queue size by setting `options`. Note that this\n   *   is the only operation for which the SDK can retry requests with stream\n   *   bodies.\n   *\n   *   @param (see AWS.S3.putObject)\n   *   @option (see AWS.S3.ManagedUpload.constructor)\n   *   @return [AWS.S3.ManagedUpload] the managed upload object that can call\n   *     `send()` or track progress.\n   *   @example Uploading a stream object\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     s3.upload(params, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   *   @example Uploading a stream with concurrency of 1 and partSize of 10mb\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};\n   *     s3.upload(params, options, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *   @param data.Location [String] the URL of the uploaded object\n   *   @param data.ETag [String] the ETag of the uploaded object\n   *   @param data.Bucket [String]  the bucket to which the object was uploaded\n   *   @param data.Key [String] the key to which the object was uploaded\n   */\n  upload: function upload(params, options, callback) {\n    if (typeof options === 'function' && callback === undefined) {\n      callback = options;\n      options = null;\n    }\n\n    options = options || {};\n    options = AWS.util.merge(options || {}, {service: this, params: params});\n\n    var uploader = new AWS.S3.ManagedUpload(options);\n    if (typeof callback === 'function') uploader.send(callback);\n    return uploader;\n  }\n});\n\n/**\n * @api private\n */\nAWS.S3.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getSignedUrlPromise = AWS.util.promisifyMethod('getSignedUrl', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getSignedUrlPromise;\n};\n\nAWS.util.addPromises(AWS.S3);\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\nrequire('./v3');\n\n/**\n * @api private\n */\nAWS.Signers.V3Https = inherit(AWS.Signers.V3, {\n  authorization: function authorization(credentials) {\n    return 'AWS3-HTTPS ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  stringToSign: function stringToSign() {\n    return this.request.headers['X-Amz-Date'];\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3Https;\n","var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        request.response.error = util.error(err, { retryable: false });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, { retryable: false });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation +\n                    '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given. In addition, the\n * `WebIdentityToken` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn` and `WebIdentityToken` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.WebIdentityToken = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n */\nAWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithWebIdentity)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.WebIdentityCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/WebIdentity',\n   *     WebIdentityToken: 'ABCDEFGHIJKLMNOP', // token from identity service\n   *     RoleSessionName: 'web' // optional name, defaults to web-identity\n   *   }, {\n   *     // optionally provide configuration to apply to the underlying AWS.STS service client\n   *     // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *     // specify timeout options\n   *     httpOptions: {\n   *       timeout: 100\n   *     }\n   *   });\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.Config\n   */\n  constructor: function WebIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';\n    this.data = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithWebIdentity(function (err, data) {\n      self.data = null;\n      if (!err) {\n        self.data = data;\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    if (!this.service) {\n      var stsConfig = AWS.util.merge({}, this._clientConfig);\n      stsConfig.params = this.params;\n      this.service = new STS(stsConfig);\n    }\n  }\n\n});\n","function apiLoader(svc, version) {\n  if (!apiLoader.services.hasOwnProperty(svc)) {\n    throw new Error('InvalidService: Failed to load api for ' + svc);\n  }\n  return apiLoader.services[svc][version];\n}\n\n/**\n * @api private\n *\n * This member of AWS.apiLoader is private, but changing it will necessitate a\n * change to ../scripts/services-table-generator.ts\n */\napiLoader.services = {};\n\n/**\n * @api private\n */\nmodule.exports = apiLoader;\n","var AWS = require('./core');\n/**\n * @api private\n */\nfunction validateRegionalEndpointsFlagValue(configValue, errorOptions) {\n  if (typeof configValue !== 'string') return undefined;\n  else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {\n    return configValue.toLowerCase();\n  } else {\n    throw AWS.util.error(new Error(), errorOptions);\n  }\n}\n\n/**\n * Resolve the configuration value for regional endpoint from difference sources: client\n * config, environmental variable, shared config file. Value can be case-insensitive\n * 'legacy' or 'reginal'.\n * @param originalConfig user-supplied config object to resolve\n * @param options a map of config property names from individual configuration source\n *  - env: name of environmental variable that refers to the config\n *  - sharedConfig: name of shared configuration file property that refers to the config\n *  - clientConfig: name of client configuration property that refers to the config\n *\n * @api private\n */\nfunction resolveRegionalEndpointsFlag(originalConfig, options) {\n  originalConfig = originalConfig || {};\n  //validate config value\n  var resolved;\n  if (originalConfig[options.clientConfig]) {\n    resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {\n      code: 'InvalidConfiguration',\n      message: 'invalid \"' + options.clientConfig + '\" configuration. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + originalConfig[options.clientConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  if (!AWS.util.isNode()) return resolved;\n  //validate environmental variable\n  if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {\n    var envFlag = process.env[options.env];\n    resolved = validateRegionalEndpointsFlagValue(envFlag, {\n      code: 'InvalidEnvironmentalVariable',\n      message: 'invalid ' + options.env + ' environmental variable. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + process.env[options.env] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  //validate shared config file\n  var profile = {};\n  try {\n    var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n    profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n  } catch (e) {};\n  if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {\n    var fileFlag = profile[options.sharedConfig];\n    resolved = validateRegionalEndpointsFlagValue(fileFlag, {\n      code: 'InvalidConfiguration',\n      message: 'invalid ' + options.sharedConfig + ' profile config. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + profile[options.sharedConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  return resolved;\n}\n\nmodule.exports = resolveRegionalEndpointsFlag;\n","var escapeAttribute = require('./escape-attribute').escapeAttribute;\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n    if (children === void 0) { children = []; }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n};\nXmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = '<' + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n        var attributeName = attributeNames[i];\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== 'undefined' && attribute !== null) {\n            xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n        }\n    }\n    return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) { return c.toString(); }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlNode: XmlNode\n};\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\nAWS.Response = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) { this.error = e; }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);\n      else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;\n    else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n\n    this.nextPageTokens = null;\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n\n    return this.nextPageTokens;\n  }\n\n});\n","var AWS = require('./core');\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nvar PromisesDependency;\n\n/**\n * The main configuration class used by all service objects to set\n * the region, credentials, and other options for requests.\n *\n * By default, credentials and region settings are left unconfigured.\n * This should be configured by the application before using any\n * AWS service APIs.\n *\n * In order to set global configuration options, properties should\n * be assigned to the global {AWS.config} object.\n *\n * @see AWS.config\n *\n * @!group General Configuration Options\n *\n * @!attribute credentials\n *   @return [AWS.Credentials] the AWS credentials to sign requests with.\n *\n * @!attribute region\n *   @example Set the global region setting to us-west-2\n *     AWS.config.update({region: 'us-west-2'});\n *   @return [AWS.Credentials] The region to send service requests to.\n *   @see http://docs.amazonwebservices.com/general/latest/gr/rande.html\n *     A list of available endpoints for each AWS service\n *\n * @!attribute maxRetries\n *   @return [Integer] the maximum amount of retries to perform for a\n *     service request. By default this value is calculated by the specific\n *     service object that the request is being made to.\n *\n * @!attribute maxRedirects\n *   @return [Integer] the maximum amount of redirects to follow for a\n *     service request. Defaults to 10.\n *\n * @!attribute paramValidation\n *   @return [Boolean|map] whether input parameters should be validated against\n *     the operation description before sending the request. Defaults to true.\n *     Pass a map to enable any of the following specific validation features:\n *\n *     * **min** [Boolean] &mdash; Validates that a value meets the min\n *       constraint. This is enabled by default when paramValidation is set\n *       to `true`.\n *     * **max** [Boolean] &mdash; Validates that a value meets the max\n *       constraint.\n *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n *       regular expression.\n *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n *       of the allowable enum values.\n *\n * @!attribute computeChecksums\n *   @return [Boolean] whether to compute checksums for payload bodies when\n *     the service accepts it (currently supported in S3 only).\n *\n * @!attribute convertResponseTypes\n *   @return [Boolean] whether types are converted when parsing response data.\n *     Currently only supported for JSON based services. Turning this off may\n *     improve performance on large response payloads. Defaults to `true`.\n *\n * @!attribute correctClockSkew\n *   @return [Boolean] whether to apply a clock skew correction and retry\n *     requests that fail because of an skewed client clock. Defaults to\n *     `false`.\n *\n * @!attribute sslEnabled\n *   @return [Boolean] whether SSL is enabled for requests\n *\n * @!attribute s3ForcePathStyle\n *   @return [Boolean] whether to force path style URLs for S3 objects\n *\n * @!attribute s3BucketEndpoint\n *   @note Setting this configuration option requires an `endpoint` to be\n *     provided explicitly to the service constructor.\n *   @return [Boolean] whether the provided endpoint addresses an individual\n *     bucket (false if it addresses the root API endpoint).\n *\n * @!attribute s3DisableBodySigning\n *   @return [Boolean] whether to disable S3 body signing when using signature version `v4`.\n *     Body signing can only be disabled when using https. Defaults to `true`.\n *\n * @!attribute s3UsEast1RegionalEndpoint\n *   @return ['legacy'|'regional'] when region is set to 'us-east-1', whether to send s3\n *     request to global endpoints or 'us-east-1' regional endpoints. This config is only\n *     applicable to S3 client;\n *     Defaults to 'legacy'\n * @!attribute s3UseArnRegion\n *   @return [Boolean] whether to override the request region with the region inferred\n *     from requested resource's ARN. Only available for S3 buckets\n *     Defaults to `true`\n *\n * @!attribute useAccelerateEndpoint\n *   @note This configuration option is only compatible with S3 while accessing\n *     dns-compatible buckets.\n *   @return [Boolean] Whether to use the Accelerate endpoint with the S3 service.\n *     Defaults to `false`.\n *\n * @!attribute retryDelayOptions\n *   @example Set the base retry delay for all services to 300 ms\n *     AWS.config.update({retryDelayOptions: {base: 300}});\n *     // Delays with maxRetries = 3: 300, 600, 1200\n *   @example Set a custom backoff function to provide delay values on retries\n *     AWS.config.update({retryDelayOptions: {customBackoff: function(retryCount, err) {\n *       // returns delay in ms\n *     }}});\n *   @return [map] A set of options to configure the retry delay on retryable errors.\n *     Currently supported options are:\n *\n *     * **base** [Integer] &mdash; The base number of milliseconds to use in the\n *       exponential backoff for operation retries. Defaults to 100 ms for all services except\n *       DynamoDB, where it defaults to 50ms.\n *\n *     * **customBackoff ** [function] &mdash; A custom function that accepts a\n *       retry count and error and returns the amount of time to delay in\n *       milliseconds. If the result is a non-zero negative value, no further\n *       retry attempts will be made. The `base` option will be ignored if this\n *       option is supplied.\n *\n * @!attribute httpOptions\n *   @return [map] A set of options to pass to the low-level HTTP request.\n *     Currently supported options are:\n *\n *     * **proxy** [String] &mdash; the URL to proxy requests through\n *     * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n *       HTTP requests with. Used for connection pooling. Note that for\n *       SSL connections, a special Agent object is used in order to enable\n *       peer certificate verification. This feature is only supported in the\n *       Node.js environment.\n *     * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n *       failing to establish a connection with the server after\n *       `connectTimeout` milliseconds. This timeout has no effect once a socket\n *       connection has been established.\n *     * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n *       milliseconds of inactivity on the socket. Defaults to two minutes\n *       (120000)\n *     * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n *       HTTP requests. Used in the browser environment only. Set to false to\n *       send requests synchronously. Defaults to true (async on).\n *     * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n *       property of an XMLHttpRequest object. Used in the browser environment\n *       only. Defaults to false.\n * @!attribute logger\n *   @return [#write,#log] an object that responds to .write() (like a stream)\n *     or .log() (like the console object) in order to log information about\n *     requests\n *\n * @!attribute systemClockOffset\n *   @return [Number] an offset value in milliseconds to apply to all signing\n *     times. Use this to compensate for clock skew when your system may be\n *     out of sync with the service time. Note that this configuration option\n *     can only be applied to the global `AWS.config` object and cannot be\n *     overridden in service-specific configuration. Defaults to 0 milliseconds.\n *\n * @!attribute signatureVersion\n *   @return [String] the signature version to sign requests with (overriding\n *     the API configuration). Possible values are: 'v2', 'v3', 'v4'.\n *\n * @!attribute signatureCache\n *   @return [Boolean] whether the signature to sign requests with (overriding\n *     the API configuration) is cached. Only applies to the signature version 'v4'.\n *     Defaults to `true`.\n *\n * @!attribute endpointDiscoveryEnabled\n *   @return [Boolean|undefined] whether to call operations with endpoints\n *     given by service dynamically. Setting this config to `true` will enable\n *     endpoint discovery for all applicable operations. Setting it to `false`\n *     will explicitly disable endpoint discovery even though operations that\n *     require endpoint discovery will presumably fail. Leaving it to\n *     `undefined` means SDK only do endpoint discovery when it's required.\n *     Defaults to `undefined`\n *\n * @!attribute endpointCacheSize\n *   @return [Number] the size of the global cache storing endpoints from endpoint\n *     discovery operations. Once endpoint cache is created, updating this setting\n *     cannot change existing cache size.\n *     Defaults to 1000\n *\n * @!attribute hostPrefixEnabled\n *   @return [Boolean] whether to marshal request parameters to the prefix of\n *     hostname. Defaults to `true`.\n *\n * @!attribute stsRegionalEndpoints\n *   @return ['legacy'|'regional'] whether to send sts request to global endpoints or\n *     regional endpoints.\n *     Defaults to 'legacy'\n */\nAWS.Config = AWS.util.inherit({\n  /**\n   * @!endgroup\n   */\n\n  /**\n   * Creates a new configuration object. This is the object that passes\n   * option data along to service requests, including credentials, security,\n   * region information, and some service specific settings.\n   *\n   * @example Creating a new configuration object with credentials and region\n   *   var config = new AWS.Config({\n   *     accessKeyId: 'AKID', secretAccessKey: 'SECRET', region: 'us-west-2'\n   *   });\n   * @option options accessKeyId [String] your AWS access key ID.\n   * @option options secretAccessKey [String] your AWS secret access key.\n   * @option options sessionToken [AWS.Credentials] the optional AWS\n   *   session token to sign requests with.\n   * @option options credentials [AWS.Credentials] the AWS credentials\n   *   to sign requests with. You can either specify this object, or\n   *   specify the accessKeyId and secretAccessKey options directly.\n   * @option options credentialProvider [AWS.CredentialProviderChain] the\n   *   provider chain used to resolve credentials if no static `credentials`\n   *   property is set.\n   * @option options region [String] the region to send service requests to.\n   *   See {region} for more information.\n   * @option options maxRetries [Integer] the maximum amount of retries to\n   *   attempt with a request. See {maxRetries} for more information.\n   * @option options maxRedirects [Integer] the maximum amount of redirects to\n   *   follow with a request. See {maxRedirects} for more information.\n   * @option options sslEnabled [Boolean] whether to enable SSL for\n   *   requests.\n   * @option options paramValidation [Boolean|map] whether input parameters\n   *   should be validated against the operation description before sending\n   *   the request. Defaults to true. Pass a map to enable any of the\n   *   following specific validation features:\n   *\n   *   * **min** [Boolean] &mdash; Validates that a value meets the min\n   *     constraint. This is enabled by default when paramValidation is set\n   *     to `true`.\n   *   * **max** [Boolean] &mdash; Validates that a value meets the max\n   *     constraint.\n   *   * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *     regular expression.\n   *   * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *     of the allowable enum values.\n   * @option options computeChecksums [Boolean] whether to compute checksums\n   *   for payload bodies when the service accepts it (currently supported\n   *   in S3 only)\n   * @option options convertResponseTypes [Boolean] whether types are converted\n   *     when parsing response data. Currently only supported for JSON based\n   *     services. Turning this off may improve performance on large response\n   *     payloads. Defaults to `true`.\n   * @option options correctClockSkew [Boolean] whether to apply a clock skew\n   *     correction and retry requests that fail because of an skewed client\n   *     clock. Defaults to `false`.\n   * @option options s3ForcePathStyle [Boolean] whether to force path\n   *   style URLs for S3 objects.\n   * @option options s3BucketEndpoint [Boolean] whether the provided endpoint\n   *   addresses an individual bucket (false if it addresses the root API\n   *   endpoint). Note that setting this configuration option requires an\n   *   `endpoint` to be provided explicitly to the service constructor.\n   * @option options s3DisableBodySigning [Boolean] whether S3 body signing\n   *   should be disabled when using signature version `v4`. Body signing\n   *   can only be disabled when using https. Defaults to `true`.\n   * @option options s3UsEast1RegionalEndpoint ['legacy'|'regional'] when region\n   *   is set to 'us-east-1', whether to send s3 request to global endpoints or\n   *   'us-east-1' regional endpoints. This config is only applicable to S3 client.\n   *   Defaults to `legacy`\n   * @option options s3UseArnRegion [Boolean] whether to override the request region\n   *   with the region inferred from requested resource's ARN. Only available for S3 buckets\n   *   Defaults to `true`\n   *\n   * @option options retryDelayOptions [map] A set of options to configure\n   *   the retry delay on retryable errors. Currently supported options are:\n   *\n   *   * **base** [Integer] &mdash; The base number of milliseconds to use in the\n   *     exponential backoff for operation retries. Defaults to 100 ms for all\n   *     services except DynamoDB, where it defaults to 50ms.\n   *   * **customBackoff ** [function] &mdash; A custom function that accepts a\n   *     retry count and error and returns the amount of time to delay in\n   *     milliseconds. If the result is a non-zero negative value, no further\n   *     retry attempts will be made. The `base` option will be ignored if this\n   *     option is supplied.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n   *     milliseconds of inactivity on the socket. Defaults to two minutes\n   *     (120000).\n   *   * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n   *     HTTP requests. Used in the browser environment only. Set to false to\n   *     send requests synchronously. Defaults to true (async on).\n   *   * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n   *     property of an XMLHttpRequest object. Used in the browser environment\n   *     only. Defaults to false.\n   * @option options apiVersion [String, Date] a String in YYYY-MM-DD format\n   *   (or a date) that represents the latest possible API version that can be\n   *   used in all services (unless overridden by `apiVersions`). Specify\n   *   'latest' to use the latest possible version.\n   * @option options apiVersions [map<String, String|Date>] a map of service\n   *   identifiers (the lowercase service class name) with the API version to\n   *   use when instantiating a service. Specify 'latest' for each individual\n   *   that can use the latest available version.\n   * @option options logger [#write,#log] an object that responds to .write()\n   *   (like a stream) or .log() (like the console object) in order to log\n   *   information about requests\n   * @option options systemClockOffset [Number] an offset value in milliseconds\n   *   to apply to all signing times. Use this to compensate for clock skew\n   *   when your system may be out of sync with the service time. Note that\n   *   this configuration option can only be applied to the global `AWS.config`\n   *   object and cannot be overridden in service-specific configuration.\n   *   Defaults to 0 milliseconds.\n   * @option options signatureVersion [String] the signature version to sign\n   *   requests with (overriding the API configuration). Possible values are:\n   *   'v2', 'v3', 'v4'.\n   * @option options signatureCache [Boolean] whether the signature to sign\n   *   requests with (overriding the API configuration) is cached. Only applies\n   *   to the signature version 'v4'. Defaults to `true`.\n   * @option options dynamoDbCrc32 [Boolean] whether to validate the CRC32\n   *   checksum of HTTP response bodies returned by DynamoDB. Default: `true`.\n   * @option options useAccelerateEndpoint [Boolean] Whether to use the\n   *   S3 Transfer Acceleration endpoint with the S3 service. Default: `false`.\n   * @option options clientSideMonitoring [Boolean] whether to collect and\n   *   publish this client's performance metrics of all its API requests.\n   * @option options endpointDiscoveryEnabled [Boolean|undefined] whether to\n   *   call operations with endpoints given by service dynamically. Setting this\n   * config to `true` will enable endpoint discovery for all applicable operations.\n   *   Setting it to `false` will explicitly disable endpoint discovery even though\n   *   operations that require endpoint discovery will presumably fail. Leaving it\n   *   to `undefined` means SDK will only do endpoint discovery when it's required.\n   *   Defaults to `undefined`\n   * @option options endpointCacheSize [Number] the size of the global cache storing\n   *   endpoints from endpoint discovery operations. Once endpoint cache is created,\n   *   updating this setting cannot change existing cache size.\n   *   Defaults to 1000\n   * @option options hostPrefixEnabled [Boolean] whether to marshal request\n   *   parameters to the prefix of hostname.\n   *   Defaults to `true`.\n   * @option options stsRegionalEndpoints ['legacy'|'regional'] whether to send sts request\n   *   to global endpoints or regional endpoints.\n   *   Defaults to 'legacy'.\n   */\n  constructor: function Config(options) {\n    if (options === undefined) options = {};\n    options = this.extractCredentials(options);\n\n    AWS.util.each.call(this, this.keys, function (key, value) {\n      this.set(key, options[key], value);\n    });\n  },\n\n  /**\n   * @!group Managing Credentials\n   */\n\n  /**\n   * Loads credentials from the configuration object. This is used internally\n   * by the SDK to ensure that refreshable {Credentials} objects are properly\n   * refreshed and loaded when sending a request. If you want to ensure that\n   * your credentials are loaded prior to a request, you can use this method\n   * directly to provide accurate credential data stored in the object.\n   *\n   * @note If you configure the SDK with static or environment credentials,\n   *   the credential data should already be present in {credentials} attribute.\n   *   This method is primarily necessary to load credentials from asynchronous\n   *   sources, or sources that can refresh credentials periodically.\n   * @example Getting your access key\n   *   AWS.config.getCredentials(function(err) {\n   *     if (err) console.log(err.stack); // credentials not loaded\n   *     else console.log(\"Access Key:\", AWS.config.credentials.accessKeyId);\n   *   })\n   * @callback callback function(err)\n   *   Called when the {credentials} have been properly set on the configuration\n   *   object.\n   *\n   *   @param err [Error] if this is set, credentials were not successfully\n   *     loaded and this error provides information why.\n   * @see credentials\n   * @see Credentials\n   */\n  getCredentials: function getCredentials(callback) {\n    var self = this;\n\n    function finish(err) {\n      callback(err, err ? null : self.credentials);\n    }\n\n    function credError(msg, err) {\n      return new AWS.util.error(err || new Error(), {\n        code: 'CredentialsError',\n        message: msg,\n        name: 'CredentialsError'\n      });\n    }\n\n    function getAsyncCredentials() {\n      self.credentials.get(function(err) {\n        if (err) {\n          var msg = 'Could not load credentials from ' +\n            self.credentials.constructor.name;\n          err = credError(msg, err);\n        }\n        finish(err);\n      });\n    }\n\n    function getStaticCredentials() {\n      var err = null;\n      if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {\n        err = credError('Missing credentials');\n      }\n      finish(err);\n    }\n\n    if (self.credentials) {\n      if (typeof self.credentials.get === 'function') {\n        getAsyncCredentials();\n      } else { // static credentials\n        getStaticCredentials();\n      }\n    } else if (self.credentialProvider) {\n      self.credentialProvider.resolve(function(err, creds) {\n        if (err) {\n          err = credError('Could not load credentials from any providers', err);\n        }\n        self.credentials = creds;\n        finish(err);\n      });\n    } else {\n      finish(credError('No credentials to load'));\n    }\n  },\n\n  /**\n   * @!group Loading and Setting Configuration Options\n   */\n\n  /**\n   * @overload update(options, allowUnknownKeys = false)\n   *   Updates the current configuration object with new options.\n   *\n   *   @example Update maxRetries property of a configuration object\n   *     config.update({maxRetries: 10});\n   *   @param [Object] options a map of option keys and values.\n   *   @param [Boolean] allowUnknownKeys whether unknown keys can be set on\n   *     the configuration object. Defaults to `false`.\n   *   @see constructor\n   */\n  update: function update(options, allowUnknownKeys) {\n    allowUnknownKeys = allowUnknownKeys || false;\n    options = this.extractCredentials(options);\n    AWS.util.each.call(this, options, function (key, value) {\n      if (allowUnknownKeys || Object.prototype.hasOwnProperty.call(this.keys, key) ||\n          AWS.Service.hasService(key)) {\n        this.set(key, value);\n      }\n    });\n  },\n\n  /**\n   * Loads configuration data from a JSON file into this config object.\n   * @note Loading configuration will reset all existing configuration\n   *   on the object.\n   * @!macro nobrowser\n   * @param path [String] the path relative to your process's current\n   *    working directory to load configuration from.\n   * @return [AWS.Config] the same configuration object\n   */\n  loadFromPath: function loadFromPath(path) {\n    this.clear();\n\n    var options = JSON.parse(AWS.util.readFileSync(path));\n    var fileSystemCreds = new AWS.FileSystemCredentials(path);\n    var chain = new AWS.CredentialProviderChain();\n    chain.providers.unshift(fileSystemCreds);\n    chain.resolve(function (err, creds) {\n      if (err) throw err;\n      else options.credentials = creds;\n    });\n\n    this.constructor(options);\n\n    return this;\n  },\n\n  /**\n   * Clears configuration data on this object\n   *\n   * @api private\n   */\n  clear: function clear() {\n    /*jshint forin:false */\n    AWS.util.each.call(this, this.keys, function (key) {\n      delete this[key];\n    });\n\n    // reset credential provider\n    this.set('credentials', undefined);\n    this.set('credentialProvider', undefined);\n  },\n\n  /**\n   * Sets a property on the configuration object, allowing for a\n   * default value\n   * @api private\n   */\n  set: function set(property, value, defaultValue) {\n    if (value === undefined) {\n      if (defaultValue === undefined) {\n        defaultValue = this.keys[property];\n      }\n      if (typeof defaultValue === 'function') {\n        this[property] = defaultValue.call(this);\n      } else {\n        this[property] = defaultValue;\n      }\n    } else if (property === 'httpOptions' && this[property]) {\n      // deep merge httpOptions\n      this[property] = AWS.util.merge(this[property], value);\n    } else {\n      this[property] = value;\n    }\n  },\n\n  /**\n   * All of the keys with their default values.\n   *\n   * @constant\n   * @api private\n   */\n  keys: {\n    credentials: null,\n    credentialProvider: null,\n    region: null,\n    logger: null,\n    apiVersions: {},\n    apiVersion: null,\n    endpoint: undefined,\n    httpOptions: {\n      timeout: 120000\n    },\n    maxRetries: undefined,\n    maxRedirects: 10,\n    paramValidation: true,\n    sslEnabled: true,\n    s3ForcePathStyle: false,\n    s3BucketEndpoint: false,\n    s3DisableBodySigning: true,\n    s3UsEast1RegionalEndpoint: 'legacy',\n    s3UseArnRegion: undefined,\n    computeChecksums: true,\n    convertResponseTypes: true,\n    correctClockSkew: false,\n    customUserAgent: null,\n    dynamoDbCrc32: true,\n    systemClockOffset: 0,\n    signatureVersion: null,\n    signatureCache: true,\n    retryDelayOptions: {},\n    useAccelerateEndpoint: false,\n    clientSideMonitoring: false,\n    endpointDiscoveryEnabled: undefined,\n    endpointCacheSize: 1000,\n    hostPrefixEnabled: true,\n    stsRegionalEndpoints: 'legacy'\n  },\n\n  /**\n   * Extracts accessKeyId, secretAccessKey and sessionToken\n   * from a configuration hash.\n   *\n   * @api private\n   */\n  extractCredentials: function extractCredentials(options) {\n    if (options.accessKeyId && options.secretAccessKey) {\n      options = AWS.util.copy(options);\n      options.credentials = new AWS.Credentials(options);\n    }\n    return options;\n  },\n\n  /**\n   * Sets the promise dependency the SDK will use wherever Promises are returned.\n   * Passing `null` will force the SDK to use native Promises if they are available.\n   * If native Promises are not available, passing `null` will have no effect.\n   * @param [Constructor] dep A reference to a Promise constructor\n   */\n  setPromisesDependency: function setPromisesDependency(dep) {\n    PromisesDependency = dep;\n    // if null was passed in, we should try to use native promises\n    if (dep === null && typeof Promise === 'function') {\n      PromisesDependency = Promise;\n    }\n    var constructors = [AWS.Request, AWS.Credentials, AWS.CredentialProviderChain];\n    if (AWS.S3) {\n      constructors.push(AWS.S3);\n      if (AWS.S3.ManagedUpload) {\n        constructors.push(AWS.S3.ManagedUpload);\n      }\n    }\n    AWS.util.addPromises(constructors, PromisesDependency);\n  },\n\n  /**\n   * Gets the promise dependency set by `AWS.config.setPromisesDependency`.\n   */\n  getPromisesDependency: function getPromisesDependency() {\n    return PromisesDependency;\n  }\n});\n\n/**\n * @return [AWS.Config] The global configuration object singleton instance\n * @readonly\n * @see AWS.Config\n */\nAWS.config = new AWS.Config();\n","var escapeElement = require('./escape-element').escapeElement;\n\n/**\n * Represents an XML text value.\n * @api private\n */\nfunction XmlText(value) {\n    this.value = value;\n}\n\nXmlText.prototype.toString = function () {\n    return escapeElement('' + this.value);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlText: XmlText\n};\n","var parseMessage = require('./parse-message').parseMessage;\n\n/**\n *\n * @param {*} parser\n * @param {Buffer} message\n * @param {*} shape\n * @api private\n */\nfunction parseEvent(parser, message, shape) {\n    var parsedMessage = parseMessage(message);\n\n    // check if message is an event or error\n    var messageType = parsedMessage.headers[':message-type'];\n    if (messageType) {\n        if (messageType.value === 'error') {\n            throw parseError(parsedMessage);\n        } else if (messageType.value !== 'event') {\n            // not sure how to parse non-events/non-errors, ignore for now\n            return;\n        }\n    }\n\n    // determine event type\n    var eventType = parsedMessage.headers[':event-type'];\n    // check that the event type is modeled\n    var eventModel = shape.members[eventType.value];\n    if (!eventModel) {\n        return;\n    }\n\n    var result = {};\n    // check if an event payload exists\n    var eventPayloadMemberName = eventModel.eventPayloadMemberName;\n    if (eventPayloadMemberName) {\n        var payloadShape = eventModel.members[eventPayloadMemberName];\n        // if the shape is binary, return the byte array\n        if (payloadShape.type === 'binary') {\n            result[eventPayloadMemberName] = parsedMessage.body;\n        } else {\n            result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);\n        }\n    }\n\n    // read event headers\n    var eventHeaderNames = eventModel.eventHeaderMemberNames;\n    for (var i = 0; i < eventHeaderNames.length; i++) {\n        var name = eventHeaderNames[i];\n        if (parsedMessage.headers[name]) {\n            // parse the header!\n            result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);\n        }\n    }\n\n    var output = {};\n    output[eventType.value] = result;\n    return output;\n}\n\nfunction parseError(message) {\n    var errorCode = message.headers[':error-code'];\n    var errorMessage = message.headers[':error-message'];\n    var error = new Error(errorMessage.value || errorMessage);\n    error.code = error.name = errorCode.value || errorCode;\n    return error;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseEvent: parseEvent\n};\n","var AWS = require('../core');\nvar util = require('../util');\nvar Rest = require('./rest');\n\nfunction populateBody(req) {\n  var input = req.service.api.operations[req.operation].input;\n  var builder = new AWS.XML.Builder();\n  var params = req.params;\n\n  var payload = input.payload;\n  if (payload) {\n    var payloadMember = input.members[payload];\n    params = params[payload];\n    if (params === undefined) return;\n\n    if (payloadMember.type === 'structure') {\n      var rootElement = payloadMember.name;\n      req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);\n    } else { // non-xml payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.toXML(params, input, input.name ||\n      input.shape || util.string.upperFirst(req.operation) + 'Request');\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD\n  if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Rest.extractError(resp);\n\n  var data;\n  try {\n    data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());\n  } catch (e) {\n    data = {\n      Code: resp.httpResponse.statusCode,\n      Message: resp.httpResponse.statusMessage\n    };\n  }\n\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var parser;\n  var req = resp.request;\n  var body = resp.httpResponse.body;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  var hasEventOutput = operation.hasEventOutput;\n\n  var payload = output.payload;\n  if (payload) {\n    var payloadMember = output.members[payload];\n    if (payloadMember.isEventStream) {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure') {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = parser.parse(body.toString(), payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[payload] = body;\n    } else {\n      resp.data[payload] = payloadMember.toType(body);\n    }\n  } else if (body.length > 0) {\n    parser = new AWS.XML.Parser();\n    var data = parser.parse(body.toString(), output);\n    util.update(resp.data, data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var AWS = require('./core');\n\n/**\n * @api private\n * @!method on(eventName, callback)\n *   Registers an event listener callback for the event given by `eventName`.\n *   Parameters passed to the callback function depend on the individual event\n *   being triggered. See the event documentation for those parameters.\n *\n *   @param eventName [String] the event name to register the listener for\n *   @param callback [Function] the listener callback function\n *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.\n *     Default to be false.\n *   @return [AWS.SequentialExecutor] the same object for chaining\n */\nAWS.SequentialExecutor = AWS.util.inherit({\n\n  constructor: function SequentialExecutor() {\n    this._events = {};\n  },\n\n  /**\n   * @api private\n   */\n  listeners: function listeners(eventName) {\n    return this._events[eventName] ? this._events[eventName].slice(0) : [];\n  },\n\n  on: function on(eventName, listener, toHead) {\n    if (this._events[eventName]) {\n      toHead ?\n        this._events[eventName].unshift(listener) :\n        this._events[eventName].push(listener);\n    } else {\n      this._events[eventName] = [listener];\n    }\n    return this;\n  },\n\n  onAsync: function onAsync(eventName, listener, toHead) {\n    listener._isAsync = true;\n    return this.on(eventName, listener, toHead);\n  },\n\n  removeListener: function removeListener(eventName, listener) {\n    var listeners = this._events[eventName];\n    if (listeners) {\n      var length = listeners.length;\n      var position = -1;\n      for (var i = 0; i < length; ++i) {\n        if (listeners[i] === listener) {\n          position = i;\n        }\n      }\n      if (position > -1) {\n        listeners.splice(position, 1);\n      }\n    }\n    return this;\n  },\n\n  removeAllListeners: function removeAllListeners(eventName) {\n    if (eventName) {\n      delete this._events[eventName];\n    } else {\n      this._events = {};\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  emit: function emit(eventName, eventArgs, doneCallback) {\n    if (!doneCallback) doneCallback = function() { };\n    var listeners = this.listeners(eventName);\n    var count = listeners.length;\n    this.callListeners(listeners, eventArgs, doneCallback);\n    return count > 0;\n  },\n\n  /**\n   * @api private\n   */\n  callListeners: function callListeners(listeners, args, doneCallback, prevError) {\n    var self = this;\n    var error = prevError || null;\n\n    function callNextListener(err) {\n      if (err) {\n        error = AWS.util.error(error || new Error(), err);\n        if (self._haltHandlersOnError) {\n          return doneCallback.call(self, error);\n        }\n      }\n      self.callListeners(listeners, args, doneCallback, error);\n    }\n\n    while (listeners.length > 0) {\n      var listener = listeners.shift();\n      if (listener._isAsync) { // asynchronous listener\n        listener.apply(self, args.concat([callNextListener]));\n        return; // stop here, callNextListener will continue\n      } else { // synchronous listener\n        try {\n          listener.apply(self, args);\n        } catch (err) {\n          error = AWS.util.error(error || new Error(), err);\n        }\n        if (error && self._haltHandlersOnError) {\n          doneCallback.call(self, error);\n          return;\n        }\n      }\n    }\n    doneCallback.call(self, error);\n  },\n\n  /**\n   * Adds or copies a set of listeners from another list of\n   * listeners or SequentialExecutor object.\n   *\n   * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]\n   *   a list of events and callbacks, or an event emitter object\n   *   containing listeners to add to this emitter object.\n   * @return [AWS.SequentialExecutor] the emitter object, for chaining.\n   * @example Adding listeners from a map of listeners\n   *   emitter.addListeners({\n   *     event1: [function() { ... }, function() { ... }],\n   *     event2: [function() { ... }]\n   *   });\n   *   emitter.emit('event1'); // emitter has event1\n   *   emitter.emit('event2'); // emitter has event2\n   * @example Adding listeners from another emitter object\n   *   var emitter1 = new AWS.SequentialExecutor();\n   *   emitter1.on('event1', function() { ... });\n   *   emitter1.on('event2', function() { ... });\n   *   var emitter2 = new AWS.SequentialExecutor();\n   *   emitter2.addListeners(emitter1);\n   *   emitter2.emit('event1'); // emitter2 has event1\n   *   emitter2.emit('event2'); // emitter2 has event2\n   */\n  addListeners: function addListeners(listeners) {\n    var self = this;\n\n    // extract listeners if parameter is an SequentialExecutor object\n    if (listeners._events) listeners = listeners._events;\n\n    AWS.util.each(listeners, function(event, callbacks) {\n      if (typeof callbacks === 'function') callbacks = [callbacks];\n      AWS.util.arrayEach(callbacks, function(callback) {\n        self.on(event, callback);\n      });\n    });\n\n    return self;\n  },\n\n  /**\n   * Registers an event with {on} and saves the callback handle function\n   * as a property on the emitter object using a given `name`.\n   *\n   * @param name [String] the property name to set on this object containing\n   *   the callback function handle so that the listener can be removed in\n   *   the future.\n   * @param (see on)\n   * @return (see on)\n   * @example Adding a named listener DATA_CALLBACK\n   *   var listener = function() { doSomething(); };\n   *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);\n   *\n   *   // the following prints: true\n   *   console.log(emitter.DATA_CALLBACK == listener);\n   */\n  addNamedListener: function addNamedListener(name, eventName, callback, toHead) {\n    this[name] = callback;\n    this.addListener(eventName, callback, toHead);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {\n    callback._isAsync = true;\n    return this.addNamedListener(name, eventName, callback, toHead);\n  },\n\n  /**\n   * Helper method to add a set of named listeners using\n   * {addNamedListener}. The callback contains a parameter\n   * with a handle to the `addNamedListener` method.\n   *\n   * @callback callback function(add)\n   *   The callback function is called immediately in order to provide\n   *   the `add` function to the block. This simplifies the addition of\n   *   a large group of named listeners.\n   *   @param add [Function] the {addNamedListener} function to call\n   *     when registering listeners.\n   * @example Adding a set of named listeners\n   *   emitter.addNamedListeners(function(add) {\n   *     add('DATA_CALLBACK', 'data', function() { ... });\n   *     add('OTHER', 'otherEvent', function() { ... });\n   *     add('LAST', 'lastEvent', function() { ... });\n   *   });\n   *\n   *   // these properties are now set:\n   *   emitter.DATA_CALLBACK;\n   *   emitter.OTHER;\n   *   emitter.LAST;\n   */\n  addNamedListeners: function addNamedListeners(callback) {\n    var self = this;\n    callback(\n      function() {\n        self.addNamedListener.apply(self, arguments);\n      },\n      function() {\n        self.addNamedAsyncListener.apply(self, arguments);\n      }\n    );\n    return this;\n  }\n});\n\n/**\n * {on} is the prefered method.\n * @api private\n */\nAWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;\n\n/**\n * @api private\n */\nmodule.exports = AWS.SequentialExecutor;\n","var util = require('../util');\n\nfunction QueryParamSerializer() {\n}\n\nQueryParamSerializer.prototype.serialize = function(params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\n\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\n\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function(name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\n\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + (i++) + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\n\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\n\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;","var util = require('../util');\n\nfunction JsonParser() { }\n\nJsonParser.prototype.parse = function(value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n\n  var struct = {};\n  var shapeMembers = shape.members;\n  util.each(shapeMembers, function(name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonParser;\n","var AWS = require('./core');\nvar AcceptorStateMachine = require('./state_machine');\nvar inherit = AWS.util.inherit;\nvar domain = AWS.util.domain;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nvar hardErrorStates = {success: 1, error: 1, complete: 1};\n\nfunction isTerminalState(machine) {\n  return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);\n}\n\nvar fsm = new AcceptorStateMachine();\nfsm.setupStates = function() {\n  var transition = function(_, done) {\n    var self = this;\n    self._haltHandlersOnError = false;\n\n    self.emit(self._asm.currentState, function(err) {\n      if (err) {\n        if (isTerminalState(self)) {\n          if (domain && self.domain instanceof domain.Domain) {\n            err.domainEmitter = self;\n            err.domain = self.domain;\n            err.domainThrown = false;\n            self.domain.emit('error', err);\n          } else {\n            throw err;\n          }\n        } else {\n          self.response.error = err;\n          done(err);\n        }\n      } else {\n        done(self.response.error);\n      }\n    });\n\n  };\n\n  this.addState('validate', 'build', 'error', transition);\n  this.addState('build', 'afterBuild', 'restart', transition);\n  this.addState('afterBuild', 'sign', 'restart', transition);\n  this.addState('sign', 'send', 'retry', transition);\n  this.addState('retry', 'afterRetry', 'afterRetry', transition);\n  this.addState('afterRetry', 'sign', 'error', transition);\n  this.addState('send', 'validateResponse', 'retry', transition);\n  this.addState('validateResponse', 'extractData', 'extractError', transition);\n  this.addState('extractError', 'extractData', 'retry', transition);\n  this.addState('extractData', 'success', 'retry', transition);\n  this.addState('restart', 'build', 'error', transition);\n  this.addState('success', 'complete', 'complete', transition);\n  this.addState('error', 'complete', 'complete', transition);\n  this.addState('complete', null, null, transition);\n};\nfsm.setupStates();\n\n/**\n * ## Asynchronous Requests\n *\n * All requests made through the SDK are asynchronous and use a\n * callback interface. Each service method that kicks off a request\n * returns an `AWS.Request` object that you can use to register\n * callbacks.\n *\n * For example, the following service method returns the request\n * object as \"request\", which can be used to register callbacks:\n *\n * ```javascript\n * // request is an AWS.Request object\n * var request = ec2.describeInstances();\n *\n * // register callbacks on request to retrieve response data\n * request.on('success', function(response) {\n *   console.log(response.data);\n * });\n * ```\n *\n * When a request is ready to be sent, the {send} method should\n * be called:\n *\n * ```javascript\n * request.send();\n * ```\n *\n * Since registered callbacks may or may not be idempotent, requests should only\n * be sent once. To perform the same operation multiple times, you will need to\n * create multiple request objects, each with its own registered callbacks.\n *\n * ## Removing Default Listeners for Events\n *\n * Request objects are built with default listeners for the various events,\n * depending on the service type. In some cases, you may want to remove\n * some built-in listeners to customize behaviour. Doing this requires\n * access to the built-in listener functions, which are exposed through\n * the {AWS.EventListeners.Core} namespace. For instance, you may\n * want to customize the HTTP handler used when sending a request. In this\n * case, you can remove the built-in listener associated with the 'send'\n * event, the {AWS.EventListeners.Core.SEND} listener and add your own.\n *\n * ## Multiple Callbacks and Chaining\n *\n * You can register multiple callbacks on any request object. The\n * callbacks can be registered for different events, or all for the\n * same event. In addition, you can chain callback registration, for\n * example:\n *\n * ```javascript\n * request.\n *   on('success', function(response) {\n *     console.log(\"Success!\");\n *   }).\n *   on('error', function(error, response) {\n *     console.log(\"Error!\");\n *   }).\n *   on('complete', function(response) {\n *     console.log(\"Always!\");\n *   }).\n *   send();\n * ```\n *\n * The above example will print either \"Success! Always!\", or \"Error! Always!\",\n * depending on whether the request succeeded or not.\n *\n * @!attribute httpRequest\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpRequest] the raw HTTP request object\n *     containing request headers and body information\n *     sent by the service.\n *\n * @!attribute startTime\n *   @readonly\n *   @!group Operation Properties\n *   @return [Date] the time that the request started\n *\n * @!group Request Building Events\n *\n * @!event validate(request)\n *   Triggered when a request is being validated. Listeners\n *   should throw an error if the request should not be sent.\n *   @param request [Request] the request object being sent\n *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n *   @see AWS.EventListeners.Core.VALIDATE_REGION\n *   @example Ensuring that a certain parameter is set before sending a request\n *     var req = s3.putObject(params);\n *     req.on('validate', function() {\n *       if (!req.params.Body.match(/^Hello\\s/)) {\n *         throw new Error('Body must start with \"Hello \"');\n *       }\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event build(request)\n *   Triggered when the request payload is being built. Listeners\n *   should fill the necessary information to send the request\n *   over HTTP.\n *   @param (see AWS.Request~validate)\n *   @example Add a custom HTTP header to a request\n *     var req = s3.putObject(params);\n *     req.on('build', function() {\n *       req.httpRequest.headers['Custom-Header'] = 'value';\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event sign(request)\n *   Triggered when the request is being signed. Listeners should\n *   add the correct authentication headers and/or adjust the body,\n *   depending on the authentication mechanism being used.\n *   @param (see AWS.Request~validate)\n *\n * @!group Request Sending Events\n *\n * @!event send(response)\n *   Triggered when the request is ready to be sent. Listeners\n *   should call the underlying transport layer to initiate\n *   the sending of the request.\n *   @param response [Response] the response object\n *   @context [Request] the request object that was sent\n *   @see AWS.EventListeners.Core.SEND\n *\n * @!event retry(response)\n *   Triggered when a request failed and might need to be retried or redirected.\n *   If the response is retryable, the listener should set the\n *   `response.error.retryable` property to `true`, and optionally set\n *   `response.error.retryDelay` to the millisecond delay for the next attempt.\n *   In the case of a redirect, `response.error.redirect` should be set to\n *   `true` with `retryDelay` set to an optional delay on the next request.\n *\n *   If a listener decides that a request should not be retried,\n *   it should set both `retryable` and `redirect` to false.\n *\n *   Note that a retryable error will be retried at most\n *   {AWS.Config.maxRetries} times (based on the service object's config).\n *   Similarly, a request that is redirected will only redirect at most\n *   {AWS.Config.maxRedirects} times.\n *\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @example Adding a custom retry for a 404 response\n *     request.on('retry', function(response) {\n *       // this resource is not yet available, wait 10 seconds to get it again\n *       if (response.httpResponse.statusCode === 404 && response.error) {\n *         response.error.retryable = true;   // retry this error\n *         response.error.retryDelay = 10000; // wait 10 seconds\n *       }\n *     });\n *\n * @!group Data Parsing Events\n *\n * @!event extractError(response)\n *   Triggered on all non-2xx requests so that listeners can extract\n *   error details from the response body. Listeners to this event\n *   should set the `response.error` property.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event extractData(response)\n *   Triggered in successful requests to allow listeners to\n *   de-serialize the response body into `response.data`.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group Completion Events\n *\n * @!event success(response)\n *   Triggered when the request completed successfully.\n *   `response.data` will contain the response data and\n *   `response.error` will be null.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event error(error, response)\n *   Triggered when an error occurs at any point during the\n *   request. `response.error` will contain details about the error\n *   that occurred. `response.data` will be null.\n *   @param error [Error] the error object containing details about\n *     the error that occurred.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event complete(response)\n *   Triggered whenever a request cycle completes. `response.error`\n *   should be checked, since the request may have failed.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group HTTP Events\n *\n * @!event httpHeaders(statusCode, headers, response, statusMessage)\n *   Triggered when headers are sent by the remote server\n *   @param statusCode [Integer] the HTTP response code\n *   @param headers [map<String,String>] the response headers\n *   @param (see AWS.Request~send)\n *   @param statusMessage [String] A status message corresponding to the HTTP\n *                                 response code\n *   @context (see AWS.Request~send)\n *\n * @!event httpData(chunk, response)\n *   Triggered when data is sent by the remote server\n *   @param chunk [Buffer] the buffer data containing the next data chunk\n *     from the server\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @see AWS.EventListeners.Core.HTTP_DATA\n *\n * @!event httpUploadProgress(progress, response)\n *   Triggered when the HTTP request has uploaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpDownloadProgress(progress, response)\n *   Triggered when the HTTP request has downloaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpError(error, response)\n *   Triggered when the HTTP request failed\n *   @param error [Error] the error object that was thrown\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event httpDone(response)\n *   Triggered when the server is finished sending data\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @see AWS.Response\n */\nAWS.Request = inherit({\n\n  /**\n   * Creates a request for an operation on a given service with\n   * a set of input parameters.\n   *\n   * @param service [AWS.Service] the service to perform the operation on\n   * @param operation [String] the operation to perform on the service\n   * @param params [Object] parameters to send to the operation.\n   *   See the operation's documentation for the format of the\n   *   parameters.\n   */\n  constructor: function Request(service, operation, params) {\n    var endpoint = service.endpoint;\n    var region = service.config.region;\n    var customUserAgent = service.config.customUserAgent;\n\n    if (service.isGlobalEndpoint) {\n      if (service.signingRegion) {\n        region = service.signingRegion;\n      } else {\n        region = 'us-east-1';\n      }\n    }\n\n    this.domain = domain && domain.active;\n    this.service = service;\n    this.operation = operation;\n    this.params = params || {};\n    this.httpRequest = new AWS.HttpRequest(endpoint, region);\n    this.httpRequest.appendToUserAgent(customUserAgent);\n    this.startTime = service.getSkewCorrectedDate();\n\n    this.response = new AWS.Response(this);\n    this._asm = new AcceptorStateMachine(fsm.states, 'validate');\n    this._haltHandlersOnError = false;\n\n    AWS.SequentialExecutor.call(this);\n    this.emit = this.emitEvent;\n  },\n\n  /**\n   * @!group Sending a Request\n   */\n\n  /**\n   * @overload send(callback = null)\n   *   Sends the request object.\n   *\n   *   @callback callback function(err, data)\n   *     If a callback is supplied, it is called when a response is returned\n   *     from the service.\n   *     @context [AWS.Request] the request object being sent.\n   *     @param err [Error] the error object returned from the request.\n   *       Set to `null` if the request is successful.\n   *     @param data [Object] the de-serialized data returned from\n   *       the request. Set to `null` if a request error occurs.\n   *   @example Sending a request with a callback\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.send(function(err, data) { console.log(err, data); });\n   *   @example Sending a request with no callback (using event handlers)\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.on('complete', function(response) { ... }); // register a callback\n   *     request.send();\n   */\n  send: function send(callback) {\n    if (callback) {\n      // append to user agent\n      this.httpRequest.appendToUserAgent('callback');\n      this.on('complete', function (resp) {\n        callback.call(resp, resp.error, resp.data);\n      });\n    }\n    this.runTo();\n\n    return this.response;\n  },\n\n  /**\n   * @!method  promise()\n   *   Sends the request and returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [Object] the de-serialized data returned from the request.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param error [Error] the error object returned from the request.\n   *   @return [Promise] A promise that represents the state of the request.\n   *   @example Sending a request using promises.\n   *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     var result = request.promise();\n   *     result.then(function(data) { ... }, function(error) { ... });\n   */\n\n  /**\n   * @api private\n   */\n  build: function build(callback) {\n    return this.runTo('send', callback);\n  },\n\n  /**\n   * @api private\n   */\n  runTo: function runTo(state, done) {\n    this._asm.runTo(state, done, this);\n    return this;\n  },\n\n  /**\n   * Aborts a request, emitting the error and complete events.\n   *\n   * @!macro nobrowser\n   * @example Aborting a request after sending\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload\n   *   };\n   *   var request = s3.putObject(params);\n   *   request.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(request.abort.bind(request), 1000);\n   *\n   *   // prints \"Error: RequestAbortedError Request aborted by user\"\n   * @return [AWS.Request] the same request object, for chaining.\n   * @since v1.4.0\n   */\n  abort: function abort() {\n    this.removeAllListeners('validateResponse');\n    this.removeAllListeners('extractError');\n    this.on('validateResponse', function addAbortedError(resp) {\n      resp.error = AWS.util.error(new Error('Request aborted by user'), {\n         code: 'RequestAbortedError', retryable: false\n      });\n    });\n\n    if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) { // abort HTTP stream\n      this.httpRequest.stream.abort();\n      if (this.httpRequest._abortCallback) {\n         this.httpRequest._abortCallback();\n      } else {\n        this.removeAllListeners('send'); // haven't sent yet, so let's not\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Iterates over each page of results given a pageable request, calling\n   * the provided callback with each page of data. After all pages have been\n   * retrieved, the callback is called with `null` data.\n   *\n   * @note This operation can generate multiple requests to a service.\n   * @example Iterating over multiple pages of objects in an S3 bucket\n   *   var pages = 1;\n   *   s3.listObjects().eachPage(function(err, data) {\n   *     if (err) return;\n   *     console.log(\"Page\", pages++);\n   *     console.log(data);\n   *   });\n   * @example Iterating over multiple pages with an asynchronous callback\n   *   s3.listObjects(params).eachPage(function(err, data, done) {\n   *     doSomethingAsyncAndOrExpensive(function() {\n   *       // The next page of results isn't fetched until done is called\n   *       done();\n   *     });\n   *   });\n   * @callback callback function(err, data, [doneCallback])\n   *   Called with each page of resulting data from the request. If the\n   *   optional `doneCallback` is provided in the function, it must be called\n   *   when the callback is complete.\n   *\n   *   @param err [Error] an error object, if an error occurred.\n   *   @param data [Object] a single page of response data. If there is no\n   *     more data, this object will be `null`.\n   *   @param doneCallback [Function] an optional done callback. If this\n   *     argument is defined in the function declaration, it should be called\n   *     when the next page is ready to be retrieved. This is useful for\n   *     controlling serial pagination across asynchronous operations.\n   *   @return [Boolean] if the callback returns `false`, pagination will\n   *     stop.\n   *\n   * @see AWS.Request.eachItem\n   * @see AWS.Response.nextPage\n   * @since v1.4.0\n   */\n  eachPage: function eachPage(callback) {\n    // Make all callbacks async-ish\n    callback = AWS.util.fn.makeAsync(callback, 3);\n\n    function wrappedCallback(response) {\n      callback.call(response, response.error, response.data, function (result) {\n        if (result === false) return;\n\n        if (response.hasNextPage()) {\n          response.nextPage().on('complete', wrappedCallback).send();\n        } else {\n          callback.call(response, null, null, AWS.util.fn.noop);\n        }\n      });\n    }\n\n    this.on('complete', wrappedCallback).send();\n  },\n\n  /**\n   * Enumerates over individual items of a request, paging the responses if\n   * necessary.\n   *\n   * @api experimental\n   * @since v1.4.0\n   */\n  eachItem: function eachItem(callback) {\n    var self = this;\n    function wrappedCallback(err, data) {\n      if (err) return callback(err, null);\n      if (data === null) return callback(null, null);\n\n      var config = self.service.paginationConfig(self.operation);\n      var resultKey = config.resultKey;\n      if (Array.isArray(resultKey)) resultKey = resultKey[0];\n      var items = jmespath.search(data, resultKey);\n      var continueIteration = true;\n      AWS.util.arrayEach(items, function(item) {\n        continueIteration = callback(null, item);\n        if (continueIteration === false) {\n          return AWS.util.abort;\n        }\n      });\n      return continueIteration;\n    }\n\n    this.eachPage(wrappedCallback);\n  },\n\n  /**\n   * @return [Boolean] whether the operation can return multiple pages of\n   *   response data.\n   * @see AWS.Response.eachPage\n   * @since v1.4.0\n   */\n  isPageable: function isPageable() {\n    return this.service.paginationConfig(this.operation) ? true : false;\n  },\n\n  /**\n   * Sends the request and converts the request object into a readable stream\n   * that can be read from or piped into a writable stream.\n   *\n   * @note The data read from a readable stream contains only\n   *   the raw HTTP body contents.\n   * @example Manually reading from a stream\n   *   request.createReadStream().on('data', function(data) {\n   *     console.log(\"Got data:\", data.toString());\n   *   });\n   * @example Piping a request body into a file\n   *   var out = fs.createWriteStream('/path/to/outfile.jpg');\n   *   s3.service.getObject(params).createReadStream().pipe(out);\n   * @return [Stream] the readable stream object that can be piped\n   *   or read from (by registering 'data' event listeners).\n   * @!macro nobrowser\n   */\n  createReadStream: function createReadStream() {\n    var streams = AWS.util.stream;\n    var req = this;\n    var stream = null;\n\n    if (AWS.HttpClient.streamsApiVersion === 2) {\n      stream = new streams.PassThrough();\n      process.nextTick(function() { req.send(); });\n    } else {\n      stream = new streams.Stream();\n      stream.readable = true;\n\n      stream.sent = false;\n      stream.on('newListener', function(event) {\n        if (!stream.sent && event === 'data') {\n          stream.sent = true;\n          process.nextTick(function() { req.send(); });\n        }\n      });\n    }\n\n    this.on('error', function(err) {\n      stream.emit('error', err);\n    });\n\n    this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {\n      if (statusCode < 300) {\n        req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);\n        req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);\n        req.on('httpError', function streamHttpError(error) {\n          resp.error = error;\n          resp.error.retryable = false;\n        });\n\n        var shouldCheckContentLength = false;\n        var expectedLen;\n        if (req.httpRequest.method !== 'HEAD') {\n          expectedLen = parseInt(headers['content-length'], 10);\n        }\n        if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {\n          shouldCheckContentLength = true;\n          var receivedLen = 0;\n        }\n\n        var checkContentLengthAndEmit = function checkContentLengthAndEmit() {\n          if (shouldCheckContentLength && receivedLen !== expectedLen) {\n            stream.emit('error', AWS.util.error(\n              new Error('Stream content length mismatch. Received ' +\n                receivedLen + ' of ' + expectedLen + ' bytes.'),\n              { code: 'StreamContentLengthMismatch' }\n            ));\n          } else if (AWS.HttpClient.streamsApiVersion === 2) {\n            stream.end();\n          } else {\n            stream.emit('end');\n          }\n        };\n\n        var httpStream = resp.httpResponse.createUnbufferedStream();\n\n        if (AWS.HttpClient.streamsApiVersion === 2) {\n          if (shouldCheckContentLength) {\n            var lengthAccumulator = new streams.PassThrough();\n            lengthAccumulator._write = function(chunk) {\n              if (chunk && chunk.length) {\n                receivedLen += chunk.length;\n              }\n              return streams.PassThrough.prototype._write.apply(this, arguments);\n            };\n\n            lengthAccumulator.on('end', checkContentLengthAndEmit);\n            stream.on('error', function(err) {\n              shouldCheckContentLength = false;\n              httpStream.unpipe(lengthAccumulator);\n              lengthAccumulator.emit('end');\n              lengthAccumulator.end();\n            });\n            httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });\n          } else {\n            httpStream.pipe(stream);\n          }\n        } else {\n\n          if (shouldCheckContentLength) {\n            httpStream.on('data', function(arg) {\n              if (arg && arg.length) {\n                receivedLen += arg.length;\n              }\n            });\n          }\n\n          httpStream.on('data', function(arg) {\n            stream.emit('data', arg);\n          });\n          httpStream.on('end', checkContentLengthAndEmit);\n        }\n\n        httpStream.on('error', function(err) {\n          shouldCheckContentLength = false;\n          stream.emit('error', err);\n        });\n      }\n    });\n\n    return stream;\n  },\n\n  /**\n   * @param [Array,Response] args This should be the response object,\n   *   or an array of args to send to the event.\n   * @api private\n   */\n  emitEvent: function emit(eventName, args, done) {\n    if (typeof args === 'function') { done = args; args = null; }\n    if (!done) done = function() { };\n    if (!args) args = this.eventParameters(eventName, this.response);\n\n    var origEmit = AWS.SequentialExecutor.prototype.emit;\n    origEmit.call(this, eventName, args, function (err) {\n      if (err) this.response.error = err;\n      done.call(this, err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  eventParameters: function eventParameters(eventName) {\n    switch (eventName) {\n      case 'restart':\n      case 'validate':\n      case 'sign':\n      case 'build':\n      case 'afterValidate':\n      case 'afterBuild':\n        return [this];\n      case 'error':\n        return [this.response.error, this.response];\n      default:\n        return [this.response];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  presign: function presign(expires, callback) {\n    if (!callback && typeof expires === 'function') {\n      callback = expires;\n      expires = null;\n    }\n    return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);\n  },\n\n  /**\n   * @api private\n   */\n  isPresigned: function isPresigned() {\n    return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');\n  },\n\n  /**\n   * @api private\n   */\n  toUnauthenticated: function toUnauthenticated() {\n    this._unAuthenticated = true;\n    this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n    this.removeListener('sign', AWS.EventListeners.Core.SIGN);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  toGet: function toGet() {\n    if (this.service.api.protocol === 'query' ||\n        this.service.api.protocol === 'ec2') {\n      this.removeListener('build', this.buildAsGet);\n      this.addListener('build', this.buildAsGet);\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  buildAsGet: function buildAsGet(request) {\n    request.httpRequest.method = 'GET';\n    request.httpRequest.path = request.service.endpoint.path +\n                               '?' + request.httpRequest.body;\n    request.httpRequest.body = '';\n\n    // don't need these headers on a GET request\n    delete request.httpRequest.headers['Content-Length'];\n    delete request.httpRequest.headers['Content-Type'];\n  },\n\n  /**\n   * @api private\n   */\n  haltHandlersOnError: function haltHandlersOnError() {\n    this._haltHandlersOnError = true;\n  }\n});\n\n/**\n * @api private\n */\nAWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = function promise() {\n    var self = this;\n    // append to user agent\n    this.httpRequest.appendToUserAgent('promise');\n    return new PromiseDependency(function(resolve, reject) {\n      self.on('complete', function(resp) {\n        if (resp.error) {\n          reject(resp.error);\n        } else {\n          // define $response property so that it is not enumberable\n          // this prevents circular reference errors when stringifying the JSON object\n          resolve(Object.defineProperty(\n            resp.data || {},\n            '$response',\n            {value: resp}\n          ));\n        }\n      });\n      self.runTo();\n    });\n  };\n};\n\n/**\n * @api private\n */\nAWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.Request);\n\nAWS.util.mixin(AWS.Request, AWS.SequentialExecutor);\n","var AWS = require('../core');\nvar CognitoIdentity = require('../../clients/cognitoidentity');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation using\n * the Amazon Cognito Identity service.\n *\n * By default this provider gets credentials using the\n * {AWS.CognitoIdentity.getCredentialsForIdentity} service operation, which\n * requires either an `IdentityId` or an `IdentityPoolId` (Amazon Cognito\n * Identity Pool ID), which is used to call {AWS.CognitoIdentity.getId} to\n * obtain an `IdentityId`. If the identity or identity pool is not configured in\n * the Amazon Cognito Console to use IAM roles with the appropriate permissions,\n * then additionally a `RoleArn` is required containing the ARN of the IAM trust\n * policy for the Amazon Cognito role that the user will log into. If a `RoleArn`\n * is provided, then this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation, after first getting an\n * Open ID token from {AWS.CognitoIdentity.getOpenIdToken}.\n *\n * In addition, if this credential provider is used to provide authenticated\n * login, the `Logins` map may be set to the tokens provided by the respective\n * identity providers. See {constructor} for an example on creating a credentials\n * object with proper property values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.Logins['graph.facebook.com'] = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.CognitoIdentity.getId},\n *     {AWS.CognitoIdentity.getOpenIdToken}, and\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.CognitoIdentity.getCredentialsForIdentity}, or\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n * @!attribute identityId\n *   @return [String] the Cognito ID returned by the last call to\n *     {AWS.CognitoIdentity.getOpenIdToken}. This ID represents the actual\n *     final resolved identity ID from Amazon Cognito.\n */\nAWS.CognitoIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * @api private\n   */\n  localStorageKey: {\n    id: 'aws.cognito.identity-id.',\n    providers: 'aws.cognito.identity-providers.'\n  },\n\n  /**\n   * Creates a new credentials object.\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n   *\n   *     // either IdentityPoolId or IdentityId is required\n   *     // See the IdentityPoolId param for AWS.CognitoIdentity.getID (linked below)\n   *     // See the IdentityId param for AWS.CognitoIdentity.getCredentialsForIdentity\n   *     // or AWS.CognitoIdentity.getOpenIdToken (linked below)\n   *     IdentityPoolId: 'us-east-1:1699ebc0-7900-4099-b910-2df94f52a030',\n   *     IdentityId: 'us-east-1:128d0a74-c82f-4553-916d-90053e4a8b0f'\n   *\n   *     // optional, only necessary when the identity pool is not configured\n   *     // to use IAM roles in the Amazon Cognito Console\n   *     // See the RoleArn param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleArn: 'arn:aws:iam::1234567890:role/MYAPP-CognitoIdentity',\n   *\n   *     // optional tokens, used for authenticated login\n   *     // See the Logins param for AWS.CognitoIdentity.getID (linked below)\n   *     Logins: {\n   *       'graph.facebook.com': 'FBTOKEN',\n   *       'www.amazon.com': 'AMAZONTOKEN',\n   *       'accounts.google.com': 'GOOGLETOKEN',\n   *       'api.twitter.com': 'TWITTERTOKEN',\n   *       'www.digits.com': 'DIGITSTOKEN'\n   *     },\n   *\n   *     // optional name, defaults to web-identity\n   *     // See the RoleSessionName param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleSessionName: 'web',\n   *\n   *     // optional, only necessary when application runs in a browser\n   *     // and multiple users are signed in at once, used for caching\n   *     LoginId: 'example@gmail.com'\n   *\n   *   }, {\n   *      // optionally provide configuration to apply to the underlying service clients\n   *      // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *      // region should match the region your identity pool is located in\n   *      region: 'us-east-1',\n   *\n   *      // specify timeout options\n   *      httpOptions: {\n   *        timeout: 100\n   *      }\n   *   });\n   * @see AWS.CognitoIdentity.getId\n   * @see AWS.CognitoIdentity.getCredentialsForIdentity\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.CognitoIdentity.getOpenIdToken\n   * @see AWS.Config\n   * @note If a region is not provided in the global AWS.config, or\n   *   specified in the `clientConfig` to the CognitoIdentityCredentials\n   *   constructor, you may encounter a 'Missing credentials in config' error\n   *   when calling making a service call.\n   */\n  constructor: function CognitoIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.data = null;\n    this._identityId = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n    this.loadCachedId();\n    var self = this;\n    Object.defineProperty(this, 'identityId', {\n      get: function() {\n        self.loadCachedId();\n        return self._identityId || self.params.IdentityId;\n      },\n      set: function(identityId) {\n        self._identityId = identityId;\n      }\n    });\n  },\n\n  /**\n   * Refreshes credentials using {AWS.CognitoIdentity.getCredentialsForIdentity},\n   * or {AWS.STS.assumeRoleWithWebIdentity}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.data = null;\n    self._identityId = null;\n    self.getId(function(err) {\n      if (!err) {\n        if (!self.params.RoleArn) {\n          self.getCredentialsForIdentity(callback);\n        } else {\n          self.getCredentialsFromSTS(callback);\n        }\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * Clears the cached Cognito ID associated with the currently configured\n   * identity pool ID. Use this to manually invalidate your cache if\n   * the identity pool ID was deleted.\n   */\n  clearCachedId: function clearCache() {\n    this._identityId = null;\n    delete this.params.IdentityId;\n\n    var poolId = this.params.IdentityPoolId;\n    var loginId = this.params.LoginId || '';\n    delete this.storage[this.localStorageKey.id + poolId + loginId];\n    delete this.storage[this.localStorageKey.providers + poolId + loginId];\n  },\n\n  /**\n   * @api private\n   */\n  clearIdOnNotAuthorized: function clearIdOnNotAuthorized(err) {\n    var self = this;\n    if (err.code == 'NotAuthorizedException') {\n      self.clearCachedId();\n    }\n  },\n\n  /**\n   * Retrieves a Cognito ID, loading from cache if it was already retrieved\n   * on this device.\n   *\n   * @callback callback function(err, identityId)\n   *   @param err [Error, null] an error object if the call failed or null if\n   *     it succeeded.\n   *   @param identityId [String, null] if successful, the callback will return\n   *     the Cognito ID.\n   * @note If not loaded explicitly, the Cognito ID is loaded and stored in\n   *   localStorage in the browser environment of a device.\n   * @api private\n   */\n  getId: function getId(callback) {\n    var self = this;\n    if (typeof self.params.IdentityId === 'string') {\n      return callback(null, self.params.IdentityId);\n    }\n\n    self.cognito.getId(function(err, data) {\n      if (!err && data.IdentityId) {\n        self.params.IdentityId = data.IdentityId;\n        callback(null, data.IdentityId);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n\n  /**\n   * @api private\n   */\n  loadCredentials: function loadCredentials(data, credentials) {\n    if (!data || !credentials) return;\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsForIdentity: function getCredentialsForIdentity(callback) {\n    var self = this;\n    self.cognito.getCredentialsForIdentity(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.data = data;\n        self.loadCredentials(self.data, self);\n      } else {\n        self.clearIdOnNotAuthorized(err);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsFromSTS: function getCredentialsFromSTS(callback) {\n    var self = this;\n    self.cognito.getOpenIdToken(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.params.WebIdentityToken = data.Token;\n        self.webIdentityCredentials.refresh(function(webErr) {\n          if (!webErr) {\n            self.data = self.webIdentityCredentials.data;\n            self.sts.credentialsFrom(self.data, self);\n          }\n          callback(webErr);\n        });\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadCachedId: function loadCachedId() {\n    var self = this;\n\n    // in the browser we source default IdentityId from localStorage\n    if (AWS.util.isBrowser() && !self.params.IdentityId) {\n      var id = self.getStorage('id');\n      if (id && self.params.Logins) {\n        var actualProviders = Object.keys(self.params.Logins);\n        var cachedProviders =\n          (self.getStorage('providers') || '').split(',');\n\n        // only load ID if at least one provider used this ID before\n        var intersect = cachedProviders.filter(function(n) {\n          return actualProviders.indexOf(n) !== -1;\n        });\n        if (intersect.length !== 0) {\n          self.params.IdentityId = id;\n        }\n      } else if (id) {\n        self.params.IdentityId = id;\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    var clientConfig = this._clientConfig;\n    this.webIdentityCredentials = this.webIdentityCredentials ||\n      new AWS.WebIdentityCredentials(this.params, clientConfig);\n    if (!this.cognito) {\n      var cognitoConfig = AWS.util.merge({}, clientConfig);\n      cognitoConfig.params = this.params;\n      this.cognito = new CognitoIdentity(cognitoConfig);\n    }\n    this.sts = this.sts || new STS(clientConfig);\n  },\n\n  /**\n   * @api private\n   */\n  cacheId: function cacheId(data) {\n    this._identityId = data.IdentityId;\n    this.params.IdentityId = this._identityId;\n\n    // cache this IdentityId in browser localStorage if possible\n    if (AWS.util.isBrowser()) {\n      this.setStorage('id', data.IdentityId);\n\n      if (this.params.Logins) {\n        this.setStorage('providers', Object.keys(this.params.Logins).join(','));\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getStorage: function getStorage(key) {\n    return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')];\n  },\n\n  /**\n   * @api private\n   */\n  setStorage: function setStorage(key, val) {\n    try {\n      this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')] = val;\n    } catch (_) {}\n  },\n\n  /**\n   * @api private\n   */\n  storage: (function() {\n    try {\n      var storage = AWS.util.isBrowser() && window.localStorage !== null && typeof window.localStorage === 'object' ?\n          window.localStorage : {};\n\n      // Test set/remove which would throw an error in Safari's private browsing\n      storage['aws.test-storage'] = 'foobar';\n      delete storage['aws.test-storage'];\n\n      return storage;\n    } catch (_) {\n      return {};\n    }\n  })()\n});\n","var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\n\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig.configureEndpoint(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (\n      !request._unAuthenticated &&\n      request.service.config.credentials &&\n      request.service.config.credentials.accessKeyId\n    ) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299 ) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function() {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency ||\n        Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (\n        response.error &&\n        response.error.retryable &&\n        typeof response.retryCount === 'number' &&\n        typeof response.maxRetries === 'number' &&\n        (response.retryCount >= response.maxRetries)\n      ) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    if (error.statusCode === 429) return true;\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n      case 'EC2ThrottledException':\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api, {\n          serviceIdentifier: superclass.serviceIdentifier\n        });\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentity'] = {};\nAWS.CognitoIdentity = Service.defineService('cognitoidentity', ['2014-06-30']);\nrequire('../lib/services/cognitoidentity');\nObject.defineProperty(apiLoader.services['cognitoidentity'], '2014-06-30', {\n  get: function get() {\n    var model = require('../apis/cognito-identity-2014-06-30.min.json');\n    model.paginators = require('../apis/cognito-identity-2014-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentity;\n","var util =  require('../util');\nvar AWS = require('../core');\n\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\nfunction populateHostPrefix(request)  {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation];\n  //don't marshal host prefix when operation has endpoint discovery traits\n  if (hasEndpointDiscover(request)) return request;\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n  return request;\n}\n\n/**\n * @api private\n */\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && (api.endpointOperation === util.string.lowerFirst(operationModel.name));\n  return (operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true);\n}\n\n/**\n * @api private\n */\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function(name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n\n/**\n * @api private\n */\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n\n/**\n * @api private\n */\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.');\n  //Reference: https://tools.ietf.org/html/rfc1123#section-2\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function(label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: label + ' is not hostname compatible.'});\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};\n","var util = require('./util');\n\n// browser specific modules\nutil.crypto.lib = require('./browserCryptoLib');\nutil.Buffer = require('buffer/').Buffer;\nutil.url = require('url/');\nutil.querystring = require('querystring/');\nutil.realClock = require('./realclock/browserClock');\nutil.environment = 'js';\nutil.createEventStream = require('./event-stream/buffered-create-event-stream').createEventStream;\nutil.isBrowser = function() { return true; };\nutil.isNode = function() { return false; };\n\nvar AWS = require('./core');\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nrequire('./credentials/temporary_credentials');\nrequire('./credentials/chainable_temporary_credentials');\nrequire('./credentials/web_identity_credentials');\nrequire('./credentials/cognito_identity_credentials');\nrequire('./credentials/saml_credentials');\n\n// Load the DOMParser XML parser\nAWS.XML.Parser = require('./xml/browser_parser');\n\n// Load the XHR HttpClient\nrequire('./http/xhr');\n\nif (typeof process === 'undefined') {\n  var process = {\n    browser: true\n  };\n}\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n// All prelude components are unsigned, 32-bit integers\nvar PRELUDE_MEMBER_LENGTH = 4;\n// The prelude consists of two components\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n// Checksums are always CRC32 hashes.\nvar CHECKSUM_LENGTH = 4;\n// Messages must include a full prelude, a prelude checksum, and a message checksum\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n\n/**\n * @api private\n *\n * @param {Buffer} message\n */\nfunction splitMessage(message) {\n    if (!util.Buffer.isBuffer(message)) message = toBuffer(message);\n\n    if (message.length < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error('Provided message too short to accommodate event stream message overhead');\n    }\n\n    if (message.length !== message.readUInt32BE(0)) {\n        throw new Error('Reported message length does not match received message length');\n    }\n\n    var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);\n\n    if (\n        expectedPreludeChecksum !== util.crypto.crc32(\n            message.slice(0, PRELUDE_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The prelude checksum specified in the message (' +\n            expectedPreludeChecksum +\n            ') does not match the calculated CRC32 checksum.'\n        );\n    }\n\n    var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);\n\n    if (\n        expectedMessageChecksum !== util.crypto.crc32(\n            message.slice(0, message.length - CHECKSUM_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The message checksum did not match the expected value of ' +\n                expectedMessageChecksum\n        );\n    }\n\n    var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;\n    var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);\n\n    return {\n        headers: message.slice(headersStart, headersEnd),\n        body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH),\n    };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    splitMessage: splitMessage\n};\n","/**\n * Escapes characters that can not be in an XML attribute.\n */\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeAttribute: escapeAttribute\n};\n","var Collection = require('./collection');\n\nvar util = require('../util');\n\nfunction property(obj, name, value) {\n  if (value !== null && value !== undefined) {\n    util.property.apply(this, arguments);\n  }\n}\n\nfunction memoizedProperty(obj, name) {\n  if (!obj.constructor.prototype[name]) {\n    util.memoizedProperty.apply(this, arguments);\n  }\n}\n\nfunction Shape(shape, options, memberName) {\n  options = options || {};\n\n  property(this, 'shape', shape.shape);\n  property(this, 'api', options.api, false);\n  property(this, 'type', shape.type);\n  property(this, 'enum', shape.enum);\n  property(this, 'min', shape.min);\n  property(this, 'max', shape.max);\n  property(this, 'pattern', shape.pattern);\n  property(this, 'location', shape.location || this.location || 'body');\n  property(this, 'name', this.name || shape.xmlName || shape.queryName ||\n    shape.locationName || memberName);\n  property(this, 'isStreaming', shape.streaming || this.isStreaming || false);\n  property(this, 'requiresLength', shape.requiresLength, false);\n  property(this, 'isComposite', shape.isComposite || false);\n  property(this, 'isShape', true, false);\n  property(this, 'isQueryName', Boolean(shape.queryName), false);\n  property(this, 'isLocationName', Boolean(shape.locationName), false);\n  property(this, 'isIdempotent', shape.idempotencyToken === true);\n  property(this, 'isJsonValue', shape.jsonvalue === true);\n  property(this, 'isSensitive', shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true);\n  property(this, 'isEventStream', Boolean(shape.eventstream), false);\n  property(this, 'isEvent', Boolean(shape.event), false);\n  property(this, 'isEventPayload', Boolean(shape.eventpayload), false);\n  property(this, 'isEventHeader', Boolean(shape.eventheader), false);\n  property(this, 'isTimestampFormatSet', Boolean(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false);\n  property(this, 'endpointDiscoveryId', Boolean(shape.endpointdiscoveryid), false);\n  property(this, 'hostLabel', Boolean(shape.hostLabel), false);\n\n  if (options.documentation) {\n    property(this, 'documentation', shape.documentation);\n    property(this, 'documentationUrl', shape.documentationUrl);\n  }\n\n  if (shape.xmlAttribute) {\n    property(this, 'isXmlAttribute', shape.xmlAttribute || false);\n  }\n\n  // type conversion and parsing\n  property(this, 'defaultValue', null);\n  this.toWireFormat = function(value) {\n    if (value === null || value === undefined) return '';\n    return value;\n  };\n  this.toType = function(value) { return value; };\n}\n\n/**\n * @api private\n */\nShape.normalizedTypes = {\n  character: 'string',\n  double: 'float',\n  long: 'integer',\n  short: 'integer',\n  biginteger: 'integer',\n  bigdecimal: 'float',\n  blob: 'binary'\n};\n\n/**\n * @api private\n */\nShape.types = {\n  'structure': StructureShape,\n  'list': ListShape,\n  'map': MapShape,\n  'boolean': BooleanShape,\n  'timestamp': TimestampShape,\n  'float': FloatShape,\n  'integer': IntegerShape,\n  'string': StringShape,\n  'base64': Base64Shape,\n  'binary': BinaryShape\n};\n\nShape.resolve = function resolve(shape, options) {\n  if (shape.shape) {\n    var refShape = options.api.shapes[shape.shape];\n    if (!refShape) {\n      throw new Error('Cannot find shape reference: ' + shape.shape);\n    }\n\n    return refShape;\n  } else {\n    return null;\n  }\n};\n\nShape.create = function create(shape, options, memberName) {\n  if (shape.isShape) return shape;\n\n  var refShape = Shape.resolve(shape, options);\n  if (refShape) {\n    var filteredKeys = Object.keys(shape);\n    if (!options.documentation) {\n      filteredKeys = filteredKeys.filter(function(name) {\n        return !name.match(/documentation/);\n      });\n    }\n\n    // create an inline shape with extra members\n    var InlineShape = function() {\n      refShape.constructor.call(this, shape, options, memberName);\n    };\n    InlineShape.prototype = refShape;\n    return new InlineShape();\n  } else {\n    // set type if not set\n    if (!shape.type) {\n      if (shape.members) shape.type = 'structure';\n      else if (shape.member) shape.type = 'list';\n      else if (shape.key) shape.type = 'map';\n      else shape.type = 'string';\n    }\n\n    // normalize types\n    var origType = shape.type;\n    if (Shape.normalizedTypes[shape.type]) {\n      shape.type = Shape.normalizedTypes[shape.type];\n    }\n\n    if (Shape.types[shape.type]) {\n      return new Shape.types[shape.type](shape, options, memberName);\n    } else {\n      throw new Error('Unrecognized shape type: ' + origType);\n    }\n  }\n};\n\nfunction CompositeShape(shape) {\n  Shape.apply(this, arguments);\n  property(this, 'isComposite', true);\n\n  if (shape.flattened) {\n    property(this, 'flattened', shape.flattened || false);\n  }\n}\n\nfunction StructureShape(shape, options) {\n  var self = this;\n  var requiredMap = null, firstInit = !this.isShape;\n\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'members', {});\n    property(this, 'memberNames', []);\n    property(this, 'required', []);\n    property(this, 'isRequired', function() { return false; });\n  }\n\n  if (shape.members) {\n    property(this, 'members', new Collection(shape.members, options, function(name, member) {\n      return Shape.create(member, options, name);\n    }));\n    memoizedProperty(this, 'memberNames', function() {\n      return shape.xmlOrder || Object.keys(shape.members);\n    });\n\n    if (shape.event) {\n      memoizedProperty(this, 'eventPayloadMemberName', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        // iterate over members to find ones that are event payloads\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventPayload) {\n            return memberNames[i];\n          }\n        }\n      });\n\n      memoizedProperty(this, 'eventHeaderMemberNames', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        var eventHeaderMemberNames = [];\n        // iterate over members to find ones that are event headers\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventHeader) {\n            eventHeaderMemberNames.push(memberNames[i]);\n          }\n        }\n        return eventHeaderMemberNames;\n      });\n    }\n  }\n\n  if (shape.required) {\n    property(this, 'required', shape.required);\n    property(this, 'isRequired', function(name) {\n      if (!requiredMap) {\n        requiredMap = {};\n        for (var i = 0; i < shape.required.length; i++) {\n          requiredMap[shape.required[i]] = true;\n        }\n      }\n\n      return requiredMap[name];\n    }, false, true);\n  }\n\n  property(this, 'resultWrapper', shape.resultWrapper || null);\n\n  if (shape.payload) {\n    property(this, 'payload', shape.payload);\n  }\n\n  if (typeof shape.xmlNamespace === 'string') {\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace);\n  } else if (typeof shape.xmlNamespace === 'object') {\n    property(this, 'xmlNamespacePrefix', shape.xmlNamespace.prefix);\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace.uri);\n  }\n}\n\nfunction ListShape(shape, options) {\n  var self = this, firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return []; });\n  }\n\n  if (shape.member) {\n    memoizedProperty(this, 'member', function() {\n      return Shape.create(shape.member, options);\n    });\n  }\n\n  if (this.flattened) {\n    var oldName = this.name;\n    memoizedProperty(this, 'name', function() {\n      return self.member.name || oldName;\n    });\n  }\n}\n\nfunction MapShape(shape, options) {\n  var firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'key', Shape.create({type: 'string'}, options));\n    property(this, 'value', Shape.create({type: 'string'}, options));\n  }\n\n  if (shape.key) {\n    memoizedProperty(this, 'key', function() {\n      return Shape.create(shape.key, options);\n    });\n  }\n  if (shape.value) {\n    memoizedProperty(this, 'value', function() {\n      return Shape.create(shape.value, options);\n    });\n  }\n}\n\nfunction TimestampShape(shape) {\n  var self = this;\n  Shape.apply(this, arguments);\n\n  if (shape.timestampFormat) {\n    property(this, 'timestampFormat', shape.timestampFormat);\n  } else if (self.isTimestampFormatSet && this.timestampFormat) {\n    property(this, 'timestampFormat', this.timestampFormat);\n  } else if (this.location === 'header') {\n    property(this, 'timestampFormat', 'rfc822');\n  } else if (this.location === 'querystring') {\n    property(this, 'timestampFormat', 'iso8601');\n  } else if (this.api) {\n    switch (this.api.protocol) {\n      case 'json':\n      case 'rest-json':\n        property(this, 'timestampFormat', 'unixTimestamp');\n        break;\n      case 'rest-xml':\n      case 'query':\n      case 'ec2':\n        property(this, 'timestampFormat', 'iso8601');\n        break;\n    }\n  }\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    if (typeof value.toUTCString === 'function') return value;\n    return typeof value === 'string' || typeof value === 'number' ?\n           util.date.parseTimestamp(value) : null;\n  };\n\n  this.toWireFormat = function(value) {\n    return util.date.format(value, self.timestampFormat);\n  };\n}\n\nfunction StringShape() {\n  Shape.apply(this, arguments);\n\n  var nullLessProtocols = ['rest-xml', 'query', 'ec2'];\n  this.toType = function(value) {\n    value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ?\n      value || '' : value;\n    if (this.isJsonValue) {\n      return JSON.parse(value);\n    }\n\n    return value && typeof value.toString === 'function' ?\n      value.toString() : value;\n  };\n\n  this.toWireFormat = function(value) {\n    return this.isJsonValue ? JSON.stringify(value) : value;\n  };\n}\n\nfunction FloatShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseFloat(value);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction IntegerShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseInt(value, 10);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction BinaryShape() {\n  Shape.apply(this, arguments);\n  this.toType = function(value) {\n    var buf = util.base64.decode(value);\n    if (this.isSensitive && util.isNode() && typeof util.Buffer.alloc === 'function') {\n  /* Node.js can create a Buffer that is not isolated.\n   * i.e. buf.byteLength !== buf.buffer.byteLength\n   * This means that the sensitive data is accessible to anyone with access to buf.buffer.\n   * If this is the node shared Buffer, then other code within this process _could_ find this secret.\n   * Copy sensitive data to an isolated Buffer and zero the sensitive data.\n   * While this is safe to do here, copying this code somewhere else may produce unexpected results.\n   */\n      var secureBuf = util.Buffer.alloc(buf.length, buf);\n      buf.fill(0);\n      buf = secureBuf;\n    }\n    return buf;\n  };\n  this.toWireFormat = util.base64.encode;\n}\n\nfunction Base64Shape() {\n  BinaryShape.apply(this, arguments);\n}\n\nfunction BooleanShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (typeof value === 'boolean') return value;\n    if (value === null || value === undefined) return null;\n    return value === 'true';\n  };\n}\n\n/**\n * @api private\n */\nShape.shapes = {\n  StructureShape: StructureShape,\n  ListShape: ListShape,\n  MapShape: MapShape,\n  StringShape: StringShape,\n  BooleanShape: BooleanShape,\n  Base64Shape: Base64Shape\n};\n\n/**\n * @api private\n */\nmodule.exports = Shape;\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction Int64(bytes) {\n    if (bytes.length !== 8) {\n        throw new Error('Int64 buffers must be exactly 8 bytes');\n    }\n    if (!util.Buffer.isBuffer(bytes)) bytes = toBuffer(bytes);\n\n    this.bytes = bytes;\n}\n\n/**\n * @param {number} number\n * @returns {Int64}\n *\n * @api private\n */\nInt64.fromNumber = function(number) {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n        throw new Error(\n            number + ' is too large (or, if negative, too small) to represent as an Int64'\n        );\n    }\n\n    var bytes = new Uint8Array(8);\n    for (\n        var i = 7, remaining = Math.abs(Math.round(number));\n        i > -1 && remaining > 0;\n        i--, remaining /= 256\n    ) {\n        bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n        negate(bytes);\n    }\n\n    return new Int64(bytes);\n};\n\n/**\n * @returns {number}\n *\n * @api private\n */\nInt64.prototype.valueOf = function() {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n    if (negative) {\n        negate(bytes);\n    }\n\n    return parseInt(bytes.toString('hex'), 16) * (negative ? -1 : 1);\n};\n\nInt64.prototype.toString = function() {\n    return String(this.valueOf());\n};\n\n/**\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xFF;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0) {\n            break;\n        }\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    Int64: Int64\n};\n","var Buffer = require('buffer/').Buffer;\n\n/**\n * This is a polyfill for the static method `isView` of `ArrayBuffer`, which is\n * e.g. missing in IE 10.\n *\n * @api private\n */\nif (\n    typeof ArrayBuffer !== 'undefined' &&\n    typeof ArrayBuffer.isView === 'undefined'\n) {\n    ArrayBuffer.isView = function(arg) {\n        return viewStrings.indexOf(Object.prototype.toString.call(arg)) > -1;\n    };\n}\n\n/**\n * @api private\n */\nvar viewStrings = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]',\n    '[object DataView]',\n];\n\n/**\n * @api private\n */\nfunction isEmptyData(data) {\n    if (typeof data === 'string') {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n\n/**\n * @api private\n */\nfunction convertToBuffer(data) {\n    if (typeof data === 'string') {\n        data = new Buffer(data, 'utf8');\n    }\n\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n\n    return new Uint8Array(data);\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = {\n    isEmptyData: isEmptyData,\n    convertToBuffer: convertToBuffer,\n};\n","/**\n * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You\n * may not use this file except in compliance with the License. A copy of\n * the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n */\n\nvar AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nfunction CHECK_ACCEPTORS(resp) {\n  var waiter = resp.request._waiter;\n  var acceptors = waiter.config.acceptors;\n  var acceptorMatched = false;\n  var state = 'retry';\n\n  acceptors.forEach(function(acceptor) {\n    if (!acceptorMatched) {\n      var matcher = waiter.matchers[acceptor.matcher];\n      if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {\n        acceptorMatched = true;\n        state = acceptor.state;\n      }\n    }\n  });\n\n  if (!acceptorMatched && resp.error) state = 'failure';\n\n  if (state === 'success') {\n    waiter.setSuccess(resp);\n  } else {\n    waiter.setError(resp, state === 'retry');\n  }\n}\n\n/**\n * @api private\n */\nAWS.ResourceWaiter = inherit({\n  /**\n   * Waits for a given state on a service object\n   * @param service [Service] the service object to wait on\n   * @param state [String] the state (defined in waiter configuration) to wait\n   *   for.\n   * @example Create a waiter for running EC2 instances\n   *   var ec2 = new AWS.EC2;\n   *   var waiter = new AWS.ResourceWaiter(ec2, 'instanceRunning');\n   */\n  constructor: function constructor(service, state) {\n    this.service = service;\n    this.state = state;\n    this.loadWaiterConfig(this.state);\n  },\n\n  service: null,\n\n  state: null,\n\n  config: null,\n\n  matchers: {\n    path: function(resp, expected, argument) {\n      try {\n        var result = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      return jmespath.strictDeepEqual(result,expected);\n    },\n\n    pathAll: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      if (!numResults) return false;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (!jmespath.strictDeepEqual(results[ind], expected)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    pathAny: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (jmespath.strictDeepEqual(results[ind], expected)) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    status: function(resp, expected) {\n      var statusCode = resp.httpResponse.statusCode;\n      return (typeof statusCode === 'number') && (statusCode === expected);\n    },\n\n    error: function(resp, expected) {\n      if (typeof expected === 'string' && resp.error) {\n        return expected === resp.error.code;\n      }\n      // if expected is not string, can be boolean indicating presence of error\n      return expected === !!resp.error;\n    }\n  },\n\n  listeners: new AWS.SequentialExecutor().addNamedListeners(function(add) {\n    add('RETRY_CHECK', 'retry', function(resp) {\n      var waiter = resp.request._waiter;\n      if (resp.error && resp.error.code === 'ResourceNotReady') {\n        resp.error.retryDelay = (waiter.config.delay || 0) * 1000;\n      }\n    });\n\n    add('CHECK_OUTPUT', 'extractData', CHECK_ACCEPTORS);\n\n    add('CHECK_ERROR', 'extractError', CHECK_ACCEPTORS);\n  }),\n\n  /**\n   * @return [AWS.Request]\n   */\n  wait: function wait(params, callback) {\n    if (typeof params === 'function') {\n      callback = params; params = undefined;\n    }\n\n    if (params && params.$waiter) {\n      params = AWS.util.copy(params);\n      if (typeof params.$waiter.delay === 'number') {\n        this.config.delay = params.$waiter.delay;\n      }\n      if (typeof params.$waiter.maxAttempts === 'number') {\n        this.config.maxAttempts = params.$waiter.maxAttempts;\n      }\n      delete params.$waiter;\n    }\n\n    var request = this.service.makeRequest(this.config.operation, params);\n    request._waiter = this;\n    request.response.maxRetries = this.config.maxAttempts;\n    request.addListeners(this.listeners);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  setSuccess: function setSuccess(resp) {\n    resp.error = null;\n    resp.data = resp.data || {};\n    resp.request.removeAllListeners('extractData');\n  },\n\n  setError: function setError(resp, retryable) {\n    resp.data = null;\n    resp.error = AWS.util.error(resp.error || new Error(), {\n      code: 'ResourceNotReady',\n      message: 'Resource is not in the state ' + this.state,\n      retryable: retryable\n    });\n  },\n\n  /**\n   * Loads waiter configuration from API configuration\n   *\n   * @api private\n   */\n  loadWaiterConfig: function loadWaiterConfig(state) {\n    if (!this.service.api.waiters[state]) {\n      throw new AWS.util.error(new Error(), {\n        code: 'StateNotFoundError',\n        message: 'State ' + state + ' not found.'\n      });\n    }\n\n    this.config = AWS.util.copy(this.service.api.waiters[state]);\n  }\n});\n","var AWS = require('../core');\nvar byteLength = AWS.util.string.byteLength;\nvar Buffer = AWS.util.Buffer;\n\n/**\n * The managed uploader allows for easy and efficient uploading of buffers,\n * blobs, or streams, using a configurable amount of concurrency to perform\n * multipart uploads where possible. This abstraction also enables uploading\n * streams of unknown size due to the use of multipart uploads.\n *\n * To construct a managed upload object, see the {constructor} function.\n *\n * ## Tracking upload progress\n *\n * The managed upload object can also track progress by attaching an\n * 'httpUploadProgress' listener to the upload manager. This event is similar\n * to {AWS.Request~httpUploadProgress} but groups all concurrent upload progress\n * into a single event. See {AWS.S3.ManagedUpload~httpUploadProgress} for more\n * information.\n *\n * ## Handling Multipart Cleanup\n *\n * By default, this class will automatically clean up any multipart uploads\n * when an individual part upload fails. This behavior can be disabled in order\n * to manually handle failures by setting the `leavePartsOnError` configuration\n * option to `true` when initializing the upload object.\n *\n * @!event httpUploadProgress(progress)\n *   Triggered when the uploader has uploaded more data.\n *   @note The `total` property may not be set if the stream being uploaded has\n *     not yet finished chunking. In this case the `total` will be undefined\n *     until the total stream size is known.\n *   @note This event will not be emitted in Node.js 0.8.x.\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request and the `key` of the S3 object. Note that `total` may be undefined until the payload\n *     size is known.\n *   @context (see AWS.Request~send)\n */\nAWS.S3.ManagedUpload = AWS.util.inherit({\n  /**\n   * Creates a managed upload object with a set of configuration options.\n   *\n   * @note A \"Body\" parameter is required to be set prior to calling {send}.\n   * @note In Node.js, sending \"Body\" as {https://nodejs.org/dist/latest/docs/api/stream.html#stream_object_mode object-mode stream}\n   *   may result in upload hangs. Using buffer stream is preferable.\n   * @option options params [map] a map of parameters to pass to the upload\n   *   requests. The \"Body\" parameter is required to be specified either on\n   *   the service or in the params option.\n   * @note ContentMD5 should not be provided when using the managed upload object.\n   *   Instead, setting \"computeChecksums\" to true will enable automatic ContentMD5 generation\n   *   by the managed upload object.\n   * @option options queueSize [Number] (4) the size of the concurrent queue\n   *   manager to upload parts in parallel. Set to 1 for synchronous uploading\n   *   of parts. Note that the uploader will buffer at most queueSize * partSize\n   *   bytes into memory at any given time.\n   * @option options partSize [Number] (5mb) the size in bytes for each\n   *   individual part to be uploaded. Adjust the part size to ensure the number\n   *   of parts does not exceed {maxTotalParts}. See {minPartSize} for the\n   *   minimum allowed part size.\n   * @option options leavePartsOnError [Boolean] (false) whether to abort the\n   *   multipart upload if an error occurs. Set to true if you want to handle\n   *   failures manually.\n   * @option options service [AWS.S3] an optional S3 service object to use for\n   *   requests. This object might have bound parameters used by the uploader.\n   * @option options tags [Array<map>] The tags to apply to the uploaded object.\n   *   Each tag should have a `Key` and `Value` keys.\n   * @example Creating a default uploader for a stream object\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with concurrency of 1 and partSize of 10mb\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     partSize: 10 * 1024 * 1024, queueSize: 1,\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with tags\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream},\n   *     tags: [{Key: 'tag1', Value: 'value1'}, {Key: 'tag2', Value: 'value2'}]\n   *   });\n   * @see send\n   */\n  constructor: function ManagedUpload(options) {\n    var self = this;\n    AWS.SequentialExecutor.call(self);\n    self.body = null;\n    self.sliceFn = null;\n    self.callback = null;\n    self.parts = {};\n    self.completeInfo = [];\n    self.fillQueue = function() {\n      self.callback(new Error('Unsupported body payload ' + typeof self.body));\n    };\n\n    self.configure(options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    options = options || {};\n    this.partSize = this.minPartSize;\n\n    if (options.queueSize) this.queueSize = options.queueSize;\n    if (options.partSize) this.partSize = options.partSize;\n    if (options.leavePartsOnError) this.leavePartsOnError = true;\n    if (options.tags) {\n      if (!Array.isArray(options.tags)) {\n        throw new Error('Tags must be specified as an array; ' +\n          typeof options.tags + ' provided.');\n      }\n      this.tags = options.tags;\n    }\n\n    if (this.partSize < this.minPartSize) {\n      throw new Error('partSize must be greater than ' +\n                      this.minPartSize);\n    }\n\n    this.service = options.service;\n    this.bindServiceObject(options.params);\n    this.validateBody();\n    this.adjustTotalBytes();\n  },\n\n  /**\n   * @api private\n   */\n  leavePartsOnError: false,\n\n  /**\n   * @api private\n   */\n  queueSize: 4,\n\n  /**\n   * @api private\n   */\n  partSize: null,\n\n  /**\n   * @readonly\n   * @return [Number] the minimum number of bytes for an individual part\n   *   upload.\n   */\n  minPartSize: 1024 * 1024 * 5,\n\n  /**\n   * @readonly\n   * @return [Number] the maximum allowed number of parts in a multipart upload.\n   */\n  maxTotalParts: 10000,\n\n  /**\n   * Initiates the managed upload for the payload.\n   *\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *     * `Location` (String) the URL of the uploaded object\n   *     * `ETag` (String) the ETag of the uploaded object\n   *     * `Bucket` (String) the bucket to which the object was uploaded\n   *     * `Key` (String) the key to which the object was uploaded\n   * @example Sending a managed upload object\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *   var upload = new AWS.S3.ManagedUpload({params: params});\n   *   upload.send(function(err, data) {\n   *     console.log(err, data);\n   *   });\n   */\n  send: function(callback) {\n    var self = this;\n    self.failed = false;\n    self.callback = callback || function(err) { if (err) throw err; };\n\n    var runFill = true;\n    if (self.sliceFn) {\n      self.fillQueue = self.fillBuffer;\n    } else if (AWS.util.isNode()) {\n      var Stream = AWS.util.stream.Stream;\n      if (self.body instanceof Stream) {\n        runFill = false;\n        self.fillQueue = self.fillStream;\n        self.partBuffers = [];\n        self.body.\n          on('error', function(err) { self.cleanup(err); }).\n          on('readable', function() { self.fillQueue(); }).\n          on('end', function() {\n            self.isDoneChunking = true;\n            self.numParts = self.totalPartNumbers;\n            self.fillQueue.call(self);\n\n            if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {\n              self.finishMultiPart();\n            }\n          });\n      }\n    }\n\n    if (runFill) self.fillQueue.call(self);\n  },\n\n  /**\n   * @!method  promise()\n   *   Returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [map] The response data from the successful upload:\n   *       `Location` (String) the URL of the uploaded object\n   *       `ETag` (String) the ETag of the uploaded object\n   *       `Bucket` (String) the bucket to which the object was uploaded\n   *       `Key` (String) the key to which the object was uploaded\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] an error or null if no error occurred.\n   *   @return [Promise] A promise that represents the state of the upload request.\n   *   @example Sending an upload request using promises.\n   *     var upload = s3.upload({Bucket: 'bucket', Key: 'key', Body: stream});\n   *     var promise = upload.promise();\n   *     promise.then(function(data) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Aborts a managed upload, including all concurrent upload requests.\n   * @note By default, calling this function will cleanup a multipart upload\n   *   if one was created. To leave the multipart upload around after aborting\n   *   a request, configure `leavePartsOnError` to `true` in the {constructor}.\n   * @note Calling {abort} in the browser environment will not abort any requests\n   *   that are already in flight. If a multipart upload was created, any parts\n   *   not yet uploaded will not be sent, and the multipart upload will be cleaned up.\n   * @example Aborting an upload\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 25) // 25MB payload\n   *   };\n   *   var upload = s3.upload(params);\n   *   upload.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(upload.abort.bind(upload), 1000);\n   */\n  abort: function() {\n    var self = this;\n    //abort putObject request\n    if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {\n      self.singlePart.abort();\n    } else {\n      self.cleanup(AWS.util.error(new Error('Request aborted by user'), {\n        code: 'RequestAbortedError', retryable: false\n      }));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBody: function validateBody() {\n    var self = this;\n    self.body = self.service.config.params.Body;\n    if (typeof self.body === 'string') {\n      self.body = AWS.util.buffer.toBuffer(self.body);\n    } else if (!self.body) {\n      throw new Error('params.Body is required');\n    }\n    self.sliceFn = AWS.util.arraySliceFn(self.body);\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(params) {\n    params = params || {};\n    var self = this;\n    // bind parameters to new service object\n    if (!self.service) {\n      self.service = new AWS.S3({params: params});\n    } else {\n      var service = self.service;\n      var config = AWS.util.copy(service._originalConfig || {});\n      config.signatureVersion = service.getSignatureVersion();\n      self.service = new service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, params);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  adjustTotalBytes: function adjustTotalBytes() {\n    var self = this;\n    try { // try to get totalBytes\n      self.totalBytes = byteLength(self.body);\n    } catch (e) { }\n\n    // try to adjust partSize if we know payload length\n    if (self.totalBytes) {\n      var newPartSize = Math.ceil(self.totalBytes / self.maxTotalParts);\n      if (newPartSize > self.partSize) self.partSize = newPartSize;\n    } else {\n      self.totalBytes = undefined;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isDoneChunking: false,\n\n  /**\n   * @api private\n   */\n  partPos: 0,\n\n  /**\n   * @api private\n   */\n  totalChunkedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalUploadedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalBytes: undefined,\n\n  /**\n   * @api private\n   */\n  numParts: 0,\n\n  /**\n   * @api private\n   */\n  totalPartNumbers: 0,\n\n  /**\n   * @api private\n   */\n  activeParts: 0,\n\n  /**\n   * @api private\n   */\n  doneParts: 0,\n\n  /**\n   * @api private\n   */\n  parts: null,\n\n  /**\n   * @api private\n   */\n  completeInfo: null,\n\n  /**\n   * @api private\n   */\n  failed: false,\n\n  /**\n   * @api private\n   */\n  multipartReq: null,\n\n  /**\n   * @api private\n   */\n  partBuffers: null,\n\n  /**\n   * @api private\n   */\n  partBufferLength: 0,\n\n  /**\n   * @api private\n   */\n  fillBuffer: function fillBuffer() {\n    var self = this;\n    var bodyLen = byteLength(self.body);\n\n    if (bodyLen === 0) {\n      self.isDoneChunking = true;\n      self.numParts = 1;\n      self.nextChunk(self.body);\n      return;\n    }\n\n    while (self.activeParts < self.queueSize && self.partPos < bodyLen) {\n      var endPos = Math.min(self.partPos + self.partSize, bodyLen);\n      var buf = self.sliceFn.call(self.body, self.partPos, endPos);\n      self.partPos += self.partSize;\n\n      if (byteLength(buf) < self.partSize || self.partPos === bodyLen) {\n        self.isDoneChunking = true;\n        self.numParts = self.totalPartNumbers + 1;\n      }\n      self.nextChunk(buf);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  fillStream: function fillStream() {\n    var self = this;\n    if (self.activeParts >= self.queueSize) return;\n\n    var buf = self.body.read(self.partSize - self.partBufferLength) ||\n              self.body.read();\n    if (buf) {\n      self.partBuffers.push(buf);\n      self.partBufferLength += buf.length;\n      self.totalChunkedBytes += buf.length;\n    }\n\n    if (self.partBufferLength >= self.partSize) {\n      // if we have single buffer we avoid copyfull concat\n      var pbuf = self.partBuffers.length === 1 ?\n        self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n\n      // if we have more than partSize, push the rest back on the queue\n      if (pbuf.length > self.partSize) {\n        var rest = pbuf.slice(self.partSize);\n        self.partBuffers.push(rest);\n        self.partBufferLength += rest.length;\n        pbuf = pbuf.slice(0, self.partSize);\n      }\n\n      self.nextChunk(pbuf);\n    }\n\n    if (self.isDoneChunking && !self.isDoneSending) {\n      // if we have single buffer we avoid copyfull concat\n      pbuf = self.partBuffers.length === 1 ?\n          self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n      self.totalBytes = self.totalChunkedBytes;\n      self.isDoneSending = true;\n\n      if (self.numParts === 0 || pbuf.length > 0) {\n        self.numParts++;\n        self.nextChunk(pbuf);\n      }\n    }\n\n    self.body.read(0);\n  },\n\n  /**\n   * @api private\n   */\n  nextChunk: function nextChunk(chunk) {\n    var self = this;\n    if (self.failed) return null;\n\n    var partNumber = ++self.totalPartNumbers;\n    if (self.isDoneChunking && partNumber === 1) {\n      var params = {Body: chunk};\n      if (this.tags) {\n        params.Tagging = this.getTaggingHeader();\n      }\n      var req = self.service.putObject(params);\n      req._managedUpload = self;\n      req.on('httpUploadProgress', self.progress).send(self.finishSinglePart);\n      self.singlePart = req; //save the single part request\n      return null;\n    } else if (self.service.config.params.ContentMD5) {\n      var err = AWS.util.error(new Error('The Content-MD5 you specified is invalid for multi-part uploads.'), {\n        code: 'InvalidDigest', retryable: false\n      });\n\n      self.cleanup(err);\n      return null;\n    }\n\n    if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {\n      return null; // Already uploaded this part.\n    }\n\n    self.activeParts++;\n    if (!self.service.config.params.UploadId) {\n\n      if (!self.multipartReq) { // create multipart\n        self.multipartReq = self.service.createMultipartUpload();\n        self.multipartReq.on('success', function(resp) {\n          self.service.config.params.UploadId = resp.data.UploadId;\n          self.multipartReq = null;\n        });\n        self.queueChunks(chunk, partNumber);\n        self.multipartReq.on('error', function(err) {\n          self.cleanup(err);\n        });\n        self.multipartReq.send();\n      } else {\n        self.queueChunks(chunk, partNumber);\n      }\n    } else { // multipart is created, just send\n      self.uploadPart(chunk, partNumber);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getTaggingHeader: function getTaggingHeader() {\n    var kvPairStrings = [];\n    for (var i = 0; i < this.tags.length; i++) {\n      kvPairStrings.push(AWS.util.uriEscape(this.tags[i].Key) + '=' +\n        AWS.util.uriEscape(this.tags[i].Value));\n    }\n\n    return kvPairStrings.join('&');\n  },\n\n  /**\n   * @api private\n   */\n  uploadPart: function uploadPart(chunk, partNumber) {\n    var self = this;\n\n    var partParams = {\n      Body: chunk,\n      ContentLength: AWS.util.string.byteLength(chunk),\n      PartNumber: partNumber\n    };\n\n    var partInfo = {ETag: null, PartNumber: partNumber};\n    self.completeInfo[partNumber] = partInfo;\n\n    var req = self.service.uploadPart(partParams);\n    self.parts[partNumber] = req;\n    req._lastUploadedBytes = 0;\n    req._managedUpload = self;\n    req.on('httpUploadProgress', self.progress);\n    req.send(function(err, data) {\n      delete self.parts[partParams.PartNumber];\n      self.activeParts--;\n\n      if (!err && (!data || !data.ETag)) {\n        var message = 'No access to ETag property on response.';\n        if (AWS.util.isBrowser()) {\n          message += ' Check CORS configuration to expose ETag header.';\n        }\n\n        err = AWS.util.error(new Error(message), {\n          code: 'ETagMissing', retryable: false\n        });\n      }\n      if (err) return self.cleanup(err);\n      //prevent sending part being returned twice (https://github.com/aws/aws-sdk-js/issues/2304)\n      if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) return null;\n      partInfo.ETag = data.ETag;\n      self.doneParts++;\n      if (self.isDoneChunking && self.doneParts === self.numParts) {\n        self.finishMultiPart();\n      } else {\n        self.fillQueue.call(self);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  queueChunks: function queueChunks(chunk, partNumber) {\n    var self = this;\n    self.multipartReq.on('success', function() {\n      self.uploadPart(chunk, partNumber);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  cleanup: function cleanup(err) {\n    var self = this;\n    if (self.failed) return;\n\n    // clean up stream\n    if (typeof self.body.removeAllListeners === 'function' &&\n        typeof self.body.resume === 'function') {\n      self.body.removeAllListeners('readable');\n      self.body.removeAllListeners('end');\n      self.body.resume();\n    }\n\n    // cleanup multipartReq listeners\n    if (self.multipartReq) {\n      self.multipartReq.removeAllListeners('success');\n      self.multipartReq.removeAllListeners('error');\n      self.multipartReq.removeAllListeners('complete');\n      delete self.multipartReq;\n    }\n\n    if (self.service.config.params.UploadId && !self.leavePartsOnError) {\n      self.service.abortMultipartUpload().send();\n    } else if (self.leavePartsOnError) {\n      self.isDoneChunking = false;\n    }\n\n    AWS.util.each(self.parts, function(partNumber, part) {\n      part.removeAllListeners('complete');\n      part.abort();\n    });\n\n    self.activeParts = 0;\n    self.partPos = 0;\n    self.numParts = 0;\n    self.totalPartNumbers = 0;\n    self.parts = {};\n    self.failed = true;\n    self.callback(err);\n  },\n\n  /**\n   * @api private\n   */\n  finishMultiPart: function finishMultiPart() {\n    var self = this;\n    var completeParams = { MultipartUpload: { Parts: self.completeInfo.slice(1) } };\n    self.service.completeMultipartUpload(completeParams, function(err, data) {\n      if (err) {\n        return self.cleanup(err);\n      }\n\n      if (data && typeof data.Location === 'string') {\n        data.Location = data.Location.replace(/%2F/g, '/');\n      }\n\n      if (Array.isArray(self.tags)) {\n        for (var i = 0; i < self.tags.length; i++) {\n          self.tags[i].Value = String(self.tags[i].Value);\n        }\n        self.service.putObjectTagging(\n          {Tagging: {TagSet: self.tags}},\n          function(e, d) {\n            if (e) {\n              self.callback(e);\n            } else {\n              self.callback(e, data);\n            }\n          }\n        );\n      } else {\n        self.callback(err, data);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  finishSinglePart: function finishSinglePart(err, data) {\n    var upload = this.request._managedUpload;\n    var httpReq = this.request.httpRequest;\n    var endpoint = httpReq.endpoint;\n    if (err) return upload.callback(err);\n    data.Location =\n      [endpoint.protocol, '//', endpoint.host, httpReq.path].join('');\n    data.key = this.request.params.Key; // will stay undocumented\n    data.Key = this.request.params.Key;\n    data.Bucket = this.request.params.Bucket;\n    upload.callback(err, data);\n  },\n\n  /**\n   * @api private\n   */\n  progress: function progress(info) {\n    var upload = this._managedUpload;\n    if (this.operation === 'putObject') {\n      info.part = 1;\n      info.key = this.params.Key;\n    } else {\n      upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;\n      this._lastUploadedBytes = info.loaded;\n      info = {\n        loaded: upload.totalUploadedBytes,\n        total: upload.totalBytes,\n        part: this.params.PartNumber,\n        key: this.params.Key\n      };\n    }\n    upload.emit('httpUploadProgress', [info]);\n  }\n});\n\nAWS.util.mixin(AWS.S3.ManagedUpload, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = AWS.util.promisifyMethod('send', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.S3.ManagedUpload);\n\n/**\n * @api private\n */\nmodule.exports = AWS.S3.ManagedUpload;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * AWS.ChainableTemporaryCredentials differs from AWS.TemporaryCredentials in\n * the way masterCredentials and refreshes are handled.\n * AWS.ChainableTemporaryCredentials refreshes expired credentials using the\n * masterCredentials passed by the user to support chaining of STS credentials.\n * However, AWS.TemporaryCredentials recursively collapses the masterCredentials\n * during instantiation, precluding the ability to refresh credentials which\n * require intermediate, temporary credentials.\n *\n * For example, if the application should use RoleA, which must be assumed from\n * RoleB, and the environment provides credentials which can assume RoleB, then\n * AWS.ChainableTemporaryCredentials must be used to support refreshing the\n * temporary credentials for RoleA:\n *\n * ```javascript\n * var roleACreds = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: 'RoleA'},\n *   masterCredentials: new AWS.ChainableTemporaryCredentials({\n *     params: {RoleArn: 'RoleB'},\n *     masterCredentials: new AWS.EnvironmentCredentials('AWS')\n *   })\n * });\n * ```\n *\n * If AWS.TemporaryCredentials had been used in the previous example,\n * `roleACreds` would fail to refresh because `roleACreds` would\n * use the environment credentials for the AssumeRole request.\n *\n * Another difference is that AWS.ChainableTemporaryCredentials creates the STS\n * service instance during instantiation while AWS.TemporaryCredentials creates\n * the STS service instance during the first refresh. Creating the service\n * instance during instantiation effectively captures the master credentials\n * from the global config, so that subsequent changes to the global config do\n * not affect the master credentials used to refresh the temporary credentials.\n *\n * This allows an instance of AWS.ChainableTemporaryCredentials to be assigned\n * to AWS.config.credentials:\n *\n * ```javascript\n * var envCreds = new AWS.EnvironmentCredentials('AWS');\n * AWS.config.credentials = envCreds;\n * // masterCredentials will be envCreds\n * AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * Similarly, to use the CredentialProviderChain's default providers as the\n * master credentials, simply create a new instance of\n * AWS.ChainableTemporaryCredentials:\n *\n * ```javascript\n * AWS.config.credentials = new ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * @!attribute service\n *   @return [AWS.STS] the STS service instance used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.ChainableTemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @param options [map] a set of options\n   * @option options params [map] ({}) a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role. If a `SerialNumber` parameter is passed in, {tokenCodeFn} must\n   *   also be passed in or an error will be thrown.\n   * @option options masterCredentials [AWS.Credentials] the master credentials\n   *   used to get and refresh temporary credentials from AWS STS. By default,\n   *   AWS.config.credentials or AWS.config.credentialProvider will be used.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   `TokenCode`, if `SerialNumber` is provided for profile in {params}. Function\n   *   is called with value of `SerialNumber` and `callback`, and should provide\n   *   the `TokenCode` or an error to the callback in the format\n   *   `callback(err, token)`.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n   *     params: {\n   *       RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials'\n   *     }\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function ChainableTemporaryCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options || {};\n    this.errorCode = 'ChainableTemporaryCredentialsProviderFailure';\n    this.expired = true;\n    this.tokenCodeFn = null;\n\n    var params = AWS.util.copy(options.params) || {};\n    if (params.RoleArn) {\n      params.RoleSessionName = params.RoleSessionName || 'temporary-credentials';\n    }\n    if (params.SerialNumber) {\n      if (!options.tokenCodeFn || (typeof options.tokenCodeFn !== 'function')) {\n        throw new AWS.util.error(\n          new Error('tokenCodeFn must be a function when params.SerialNumber is given'),\n          {code: this.errorCode}\n        );\n      } else {\n        this.tokenCodeFn = options.tokenCodeFn;\n      }\n    }\n    var config = AWS.util.merge(\n      {\n        params: params,\n        credentials: options.masterCredentials || AWS.config.credentials\n      },\n      options.stsConfig || {}\n    );\n    this.service = new STS(config);\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    var operation = self.service.config.params.RoleArn ? 'assumeRole' : 'getSessionToken';\n    this.getTokenCode(function (err, tokenCode) {\n      var params = {};\n      if (err) {\n        callback(err);\n        return;\n      }\n      if (tokenCode) {\n        params.TokenCode = tokenCode;\n      }\n      self.service[operation](params, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getTokenCode: function getTokenCode(callback) {\n    var self = this;\n    if (this.tokenCodeFn) {\n      this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) {\n        if (err) {\n          var message = err;\n          if (err instanceof Error) {\n            message = err.message;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: self.errorCode}\n            )\n          );\n          return;\n        }\n        callback(null, token);\n      });\n    } else {\n      callback(null);\n    }\n  }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['s3'] = {};\nAWS.S3 = Service.defineService('s3', ['2006-03-01']);\nrequire('../lib/services/s3');\nObject.defineProperty(apiLoader.services['s3'], '2006-03-01', {\n  get: function get() {\n    var model = require('../apis/s3-2006-03-01.min.json');\n    model.paginators = require('../apis/s3-2006-03-01.paginators.json').pagination;\n    model.waiters = require('../apis/s3-2006-03-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.S3;\n","var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate',\n        function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n      req.service.config.getCredentials(function(err) {\n        if (err) {\n          req.response.error = AWS.util.error(err,\n            {code: 'CredentialsError', message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'});\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.config.region && !req.service.isGlobalEndpoint) {\n        req.response.error = AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var operations = req.service.api.operations || {};\n      var operation = operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!service.api.signatureVersion && !authtype && !service.config.signatureVersion) return done(); // none\n\n      service.config.getCredentials(function (err, credentials) {\n        if (err) {\n          req.response.error = err;\n          return done();\n        }\n\n        try {\n          var date = service.getSkewCorrectedDate();\n          var SignerClass = service.getSignerClass(req);\n          var signer = new SignerClass(req.httpRequest,\n            service.api.signingName || service.api.endpointPrefix,\n            {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n          signer.setServiceClientId(service._clientId);\n\n          // clear old authorization headers\n          delete req.httpRequest.headers['Authorization'];\n          delete req.httpRequest.headers['Date'];\n          delete req.httpRequest.headers['X-Amz-Date'];\n\n          // add new authorization\n          signer.addAuthorization(credentials, date);\n          req.signedAt = date;\n        } catch (e) {\n          req.response.error = e;\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      if (err.code === 'NetworkingError' && err.errno === 'ENOTFOUND') {\n        var message = 'Inaccessible host: `' + err.hostname +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            if (inputShape.isSensitive) {\n              return '***SensitiveInformation***';\n            } else {\n              return shape;\n            }\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n","var AWS = require('../core');\n\n/**\n * Creates a credential provider chain that searches for AWS credentials\n * in a list of credential providers specified by the {providers} property.\n *\n * By default, the chain will use the {defaultProviders} to resolve credentials.\n * These providers will look in the environment using the\n * {AWS.EnvironmentCredentials} class with the 'AWS' and 'AMAZON' prefixes.\n *\n * ## Setting Providers\n *\n * Each provider in the {providers} list should be a function that returns\n * a {AWS.Credentials} object, or a hardcoded credentials object. The function\n * form allows for delayed execution of the credential construction.\n *\n * ## Resolving Credentials from a Chain\n *\n * Call {resolve} to return the first valid credential object that can be\n * loaded by the provider chain.\n *\n * For example, to resolve a chain with a custom provider that checks a file\n * on disk after the set of {defaultProviders}:\n *\n * ```javascript\n * var diskProvider = new AWS.FileSystemCredentials('./creds.json');\n * var chain = new AWS.CredentialProviderChain();\n * chain.providers.push(diskProvider);\n * chain.resolve();\n * ```\n *\n * The above code will return the `diskProvider` object if the\n * file contains credentials and the `defaultProviders` do not contain\n * any credential settings.\n *\n * @!attribute providers\n *   @return [Array<AWS.Credentials, Function>]\n *     a list of credentials objects or functions that return credentials\n *     objects. If the provider is a function, the function will be\n *     executed lazily when the provider needs to be checked for valid\n *     credentials. By default, this object will be set to the\n *     {defaultProviders}.\n *   @see defaultProviders\n */\nAWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new CredentialProviderChain with a default set of providers\n   * specified by {defaultProviders}.\n   */\n  constructor: function CredentialProviderChain(providers) {\n    if (providers) {\n      this.providers = providers;\n    } else {\n      this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);\n    }\n    this.resolveCallbacks = [];\n  },\n\n  /**\n   * @!method  resolvePromise()\n   *   Returns a 'thenable' promise.\n   *   Resolves the provider chain by searching for the first set of\n   *   credentials in {providers}.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(credentials)\n   *     Called if the promise is fulfilled and the provider resolves the chain\n   *     to a credentials object\n   *     @param credentials [AWS.Credentials] the credentials object resolved\n   *       by the provider chain.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param err [Error] the error object returned if no credentials are found.\n   *   @return [Promise] A promise that represents the state of the `resolve` method call.\n   *   @example Calling the `resolvePromise` method.\n   *     var promise = chain.resolvePromise();\n   *     promise.then(function(credentials) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Resolves the provider chain by searching for the first set of\n   * credentials in {providers}.\n   *\n   * @callback callback function(err, credentials)\n   *   Called when the provider resolves the chain to a credentials object\n   *   or null if no credentials can be found.\n   *\n   *   @param err [Error] the error object returned if no credentials are\n   *     found.\n   *   @param credentials [AWS.Credentials] the credentials object resolved\n   *     by the provider chain.\n   * @return [AWS.CredentialProviderChain] the provider, for chaining.\n   */\n  resolve: function resolve(callback) {\n    var self = this;\n    if (self.providers.length === 0) {\n      callback(new Error('No providers'));\n      return self;\n    }\n\n    if (self.resolveCallbacks.push(callback) === 1) {\n      var index = 0;\n      var providers = self.providers.slice(0);\n\n      function resolveNext(err, creds) {\n        if ((!err && creds) || index === providers.length) {\n          AWS.util.arrayEach(self.resolveCallbacks, function (callback) {\n            callback(err, creds);\n          });\n          self.resolveCallbacks.length = 0;\n          return;\n        }\n\n        var provider = providers[index++];\n        if (typeof provider === 'function') {\n          creds = provider.call();\n        } else {\n          creds = provider;\n        }\n\n        if (creds.get) {\n          creds.get(function (getErr) {\n            resolveNext(getErr, getErr ? null : creds);\n          });\n        } else {\n          resolveNext(null, creds);\n        }\n      }\n\n      resolveNext();\n    }\n\n    return self;\n  }\n});\n\n/**\n * The default set of providers used by a vanilla CredentialProviderChain.\n *\n * In the browser:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = []\n * ```\n *\n * In Node.js:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = [\n *   function () { return new AWS.EnvironmentCredentials('AWS'); },\n *   function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n *   function () { return new AWS.SharedIniFileCredentials(); },\n *   function () { return new AWS.ECSCredentials(); },\n *   function () { return new AWS.ProcessCredentials(); },\n *   function () { return new AWS.TokenFileWebIdentityCredentials(); },\n *   function () { return new AWS.EC2MetadataCredentials() }\n * ]\n * ```\n */\nAWS.CredentialProviderChain.defaultProviders = [];\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.resolvePromise;\n};\n\nAWS.util.addPromises(AWS.CredentialProviderChain);\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS SAML support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithSAML} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given, as well as a `PrincipalArn`\n * representing the ARN for the SAML identity provider. In addition, the\n * `SAMLAssertion` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn`, `PrincipalArn`, and `SAMLAssertion` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the SAMLAssertion, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.SAMLAssertion = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithSAML}. To update the token, set the\n *     `params.SAMLAssertion` property.\n */\nAWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithSAML)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.SAMLCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/SAMLRole',\n   *     PrincipalArn: 'arn:aws:iam::1234567890:role/SAMLPrincipal',\n   *     SAMLAssertion: 'base64-token', // base64-encoded token from IdP\n   *   });\n   * @see AWS.STS.assumeRoleWithSAML\n   */\n  constructor: function SAMLCredentials(params) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithSAML}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithSAML(function (err, data) {\n      if (!err) {\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n","var Buffer = require('buffer/').Buffer;\nvar hashUtils = require('./browserHashUtils');\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 20;\n\nvar KEY = new Uint32Array([\n    0x5a827999,\n    0x6ed9eba1,\n    0x8f1bbcdc | 0,\n    0xca62c1d6 | 0\n]);\n\nvar INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19,\n];\n\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n/**\n * @api private\n */\nfunction Sha1() {\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n    // The first 64 bytes (16 words) is the data chunk\n    this.block = new Uint32Array(80);\n    this.offset = 0;\n    this.shift = 24;\n    this.totalLength = 0;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Sha1;\n\nSha1.BLOCK_SIZE = BLOCK_SIZE;\n\nSha1.prototype.update = function (data) {\n    if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    if (hashUtils.isEmptyData(data)) {\n        return this;\n    }\n\n    data = hashUtils.convertToBuffer(data);\n\n    var length = data.length;\n    this.totalLength += length * 8;\n    for (var i = 0; i < length; i++) {\n        this.write(data[i]);\n    }\n\n    return this;\n};\n\nSha1.prototype.write = function write(byte) {\n    this.block[this.offset] |= (byte & 0xff) << this.shift;\n    if (this.shift) {\n        this.shift -= 8;\n    } else {\n        this.offset++;\n        this.shift = 24;\n    }\n\n    if (this.offset === 16) this.processBlock();\n};\n\nSha1.prototype.digest = function (encoding) {\n    // Pad\n    this.write(0x80);\n    if (this.offset > 14 || (this.offset === 14 && this.shift < 24)) {\n      this.processBlock();\n    }\n    this.offset = 14;\n    this.shift = 24;\n\n    // 64-bit length big-endian\n    this.write(0x00); // numbers this big aren't accurate in javascript anyway\n    this.write(0x00); // ..So just hard-code to zero.\n    this.write(this.totalLength > 0xffffffffff ? this.totalLength / 0x10000000000 : 0x00);\n    this.write(this.totalLength > 0xffffffff ? this.totalLength / 0x100000000 : 0x00);\n    for (var s = 24; s >= 0; s -= 8) {\n        this.write(this.totalLength >> s);\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Buffer(DIGEST_LENGTH);\n    var outView = new DataView(out.buffer);\n    outView.setUint32(0, this.h0, false);\n    outView.setUint32(4, this.h1, false);\n    outView.setUint32(8, this.h2, false);\n    outView.setUint32(12, this.h3, false);\n    outView.setUint32(16, this.h4, false);\n\n    return encoding ? out.toString(encoding) : out;\n};\n\nSha1.prototype.processBlock = function processBlock() {\n    // Extend the sixteen 32-bit words into eighty 32-bit words:\n    for (var i = 16; i < 80; i++) {\n      var w = this.block[i - 3] ^ this.block[i - 8] ^ this.block[i - 14] ^ this.block[i - 16];\n      this.block[i] = (w << 1) | (w >>> 31);\n    }\n\n    // Initialize hash value for this chunk:\n    var a = this.h0;\n    var b = this.h1;\n    var c = this.h2;\n    var d = this.h3;\n    var e = this.h4;\n    var f, k;\n\n    // Main loop:\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = d ^ (b & (c ^ d));\n        k = 0x5A827999;\n      }\n      else if (i < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ED9EBA1;\n      }\n      else if (i < 60) {\n        f = (b & c) | (d & (b | c));\n        k = 0x8F1BBCDC;\n      }\n      else {\n        f = b ^ c ^ d;\n        k = 0xCA62C1D6;\n      }\n      var temp = (a << 5 | a >>> 27) + f + e + k + (this.block[i]|0);\n      e = d;\n      d = c;\n      c = (b << 30 | b >>> 2);\n      b = a;\n      a = temp;\n    }\n\n    // Add this chunk's hash to result so far:\n    this.h0 = (this.h0 + a) | 0;\n    this.h1 = (this.h1 + b) | 0;\n    this.h2 = (this.h2 + c) | 0;\n    this.h3 = (this.h3 + d) | 0;\n    this.h4 = (this.h4 + e) | 0;\n\n    // The block is now reusable.\n    this.offset = 0;\n    for (i = 0; i < 16; i++) {\n        this.block[i] = 0;\n    }\n};\n","var hashUtils = require('./browserHashUtils');\nvar Buffer = require('buffer/').Buffer;\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 16;\n\nvar INIT = [\n    0x67452301,\n    0xefcdab89,\n    0x98badcfe,\n    0x10325476,\n];\n\n/**\n * @api private\n */\nfunction Md5() {\n    this.state = [\n        0x67452301,\n        0xefcdab89,\n        0x98badcfe,\n        0x10325476,\n    ];\n    this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    this.finished = false;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Md5;\n\nMd5.BLOCK_SIZE = BLOCK_SIZE;\n\nMd5.prototype.update = function (sourceData) {\n    if (hashUtils.isEmptyData(sourceData)) {\n        return this;\n    } else if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    var data = hashUtils.convertToBuffer(sourceData);\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    while (byteLength > 0) {\n        this.buffer.setUint8(this.bufferLength++, data[position++]);\n        byteLength--;\n        if (this.bufferLength === BLOCK_SIZE) {\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n    }\n\n    return this;\n};\n\nMd5.prototype.digest = function (encoding) {\n    if (!this.finished) {\n        var _a = this, buffer = _a.buffer, undecoratedLength = _a.bufferLength, bytesHashed = _a.bytesHashed;\n        var bitsHashed = bytesHashed * 8;\n        buffer.setUint8(this.bufferLength++, 128);\n        // Ensure the final block has enough room for the hashed length\n        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n            for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                buffer.setUint8(i, 0);\n            }\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n            buffer.setUint8(i, 0);\n        }\n        buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n        buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n        this.hashBuffer();\n        this.finished = true;\n    }\n    var out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n    for (var i = 0; i < 4; i++) {\n        out.setUint32(i * 4, this.state[i], true);\n    }\n    var buff = new Buffer(out.buffer, out.byteOffset, out.byteLength);\n    return encoding ? buff.toString(encoding) : buff;\n};\n\nMd5.prototype.hashBuffer = function () {\n    var _a = this, buffer = _a.buffer, state = _a.state;\n    var a = state[0], b = state[1], c = state[2], d = state[3];\n    a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n    d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n    c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n    b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n    a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n    d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n    c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n    b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n    a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n    d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n    c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n    b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n    a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n    d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n    c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n    b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n    a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n    d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n    c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n    b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n    a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n    d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n    c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n    b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n    a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n    d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n    c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n    b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n    a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n    d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n    c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n    b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n    a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n    d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n    c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n    b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n    a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n    d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n    c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n    b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n    a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n    d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n    c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n    b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n    a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n    d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n    c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n    b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n    a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n    d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n    c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n    b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n    a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n    d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n    c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n    b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n    a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n    d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n    c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n    b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n    a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n    d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n    c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n    b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n    state[0] = (a + state[0]) & 0xFFFFFFFF;\n    state[1] = (b + state[1]) & 0xFFFFFFFF;\n    state[2] = (c + state[2]) & 0xFFFFFFFF;\n    state[3] = (d + state[3]) & 0xFFFFFFFF;\n};\n\nfunction cmn(q, a, b, x, s, t) {\n    a = (((a + q) & 0xFFFFFFFF) + ((x + t) & 0xFFFFFFFF)) & 0xFFFFFFFF;\n    return (((a << s) | (a >>> (32 - s))) + b) & 0xFFFFFFFF;\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n","var AWS = require('../core');\nvar resolveRegionalEndpointsFlag = require('../config_regional_endpoint');\nvar ENV_REGIONAL_ENDPOINT_ENABLED = 'AWS_STS_REGIONAL_ENDPOINTS';\nvar CONFIG_REGIONAL_ENDPOINT_ENABLED = 'sts_regional_endpoints';\n\nAWS.util.update(AWS.STS.prototype, {\n  /**\n   * @overload credentialsFrom(data, credentials = null)\n   *   Creates a credentials object from STS response data containing\n   *   credentials information. Useful for quickly setting AWS credentials.\n   *\n   *   @note This is a low-level utility function. If you want to load temporary\n   *     credentials into your process for subsequent requests to AWS resources,\n   *     you should use {AWS.TemporaryCredentials} instead.\n   *   @param data [map] data retrieved from a call to {getFederatedToken},\n   *     {getSessionToken}, {assumeRole}, or {assumeRoleWithWebIdentity}.\n   *   @param credentials [AWS.Credentials] an optional credentials object to\n   *     fill instead of creating a new object. Useful when modifying an\n   *     existing credentials object from a refresh call.\n   *   @return [AWS.TemporaryCredentials] the set of temporary credentials\n   *     loaded from a raw STS operation response.\n   *   @example Using credentialsFrom to load global AWS credentials\n   *     var sts = new AWS.STS();\n   *     sts.getSessionToken(function (err, data) {\n   *       if (err) console.log(\"Error getting credentials\");\n   *       else {\n   *         AWS.config.credentials = sts.credentialsFrom(data);\n   *       }\n   *     });\n   *   @see AWS.TemporaryCredentials\n   */\n  credentialsFrom: function credentialsFrom(data, credentials) {\n    if (!data) return null;\n    if (!credentials) credentials = new AWS.TemporaryCredentials();\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretAccessKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n    return credentials;\n  },\n\n  assumeRoleWithWebIdentity: function assumeRoleWithWebIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);\n  },\n\n  assumeRoleWithSAML: function assumeRoleWithSAML(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('validate', this.optInRegionalEndpoint, true);\n  },\n\n  /**\n   * @api private\n   */\n  optInRegionalEndpoint: function optInRegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.stsRegionalEndpoints = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: ENV_REGIONAL_ENDPOINT_ENABLED,\n      sharedConfig: CONFIG_REGIONAL_ENDPOINT_ENABLED,\n      clientConfig: 'stsRegionalEndpoints'\n    });\n    if (\n      config.stsRegionalEndpoints === 'regional' &&\n      service.isGlobalEndpoint\n    ) {\n      //client will throw if region is not supplied; request will be signed with specified region\n      if (!config.region) {\n        throw AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      var regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.' + config.region + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n      req.httpRequest.region = config.region;\n    }\n  }\n\n});\n","var Buffer = require('buffer/').Buffer;\nvar hashUtils = require('./browserHashUtils');\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 32;\n\nvar KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n\nvar INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19,\n];\n\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n/**\n * @private\n */\nfunction Sha256() {\n    this.state = [\n        0x6a09e667,\n        0xbb67ae85,\n        0x3c6ef372,\n        0xa54ff53a,\n        0x510e527f,\n        0x9b05688c,\n        0x1f83d9ab,\n        0x5be0cd19,\n    ];\n    this.temp = new Int32Array(64);\n    this.buffer = new Uint8Array(64);\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    /**\n     * @private\n     */\n    this.finished = false;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Sha256;\n\nSha256.BLOCK_SIZE = BLOCK_SIZE;\n\nSha256.prototype.update = function (data) {\n    if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    if (hashUtils.isEmptyData(data)) {\n        return this;\n    }\n\n    data = hashUtils.convertToBuffer(data);\n\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n        throw new Error('Cannot hash more than 2^53 - 1 bits');\n    }\n\n    while (byteLength > 0) {\n        this.buffer[this.bufferLength++] = data[position++];\n        byteLength--;\n        if (this.bufferLength === BLOCK_SIZE) {\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n    }\n\n    return this;\n};\n\nSha256.prototype.digest = function (encoding) {\n    if (!this.finished) {\n        var bitsHashed = this.bytesHashed * 8;\n        var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n        var undecoratedLength = this.bufferLength;\n        bufferView.setUint8(this.bufferLength++, 0x80);\n        // Ensure the final block has enough room for the hashed length\n        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n            for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n            bufferView.setUint8(i, 0);\n        }\n        bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n        bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n        this.hashBuffer();\n        this.finished = true;\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Buffer(DIGEST_LENGTH);\n    for (var i = 0; i < 8; i++) {\n        out[i * 4] = (this.state[i] >>> 24) & 0xff;\n        out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n        out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n        out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n    return encoding ? out.toString(encoding) : out;\n};\n\nSha256.prototype.hashBuffer = function () {\n    var _a = this,\n        buffer = _a.buffer,\n        state = _a.state;\n    var state0 = state[0],\n        state1 = state[1],\n        state2 = state[2],\n        state3 = state[3],\n        state4 = state[4],\n        state5 = state[5],\n        state6 = state[6],\n        state7 = state[7];\n    for (var i = 0; i < BLOCK_SIZE; i++) {\n        if (i < 16) {\n            this.temp[i] = (((buffer[i * 4] & 0xff) << 24) |\n                ((buffer[(i * 4) + 1] & 0xff) << 16) |\n                ((buffer[(i * 4) + 2] & 0xff) << 8) |\n                (buffer[(i * 4) + 3] & 0xff));\n        }\n        else {\n            var u = this.temp[i - 2];\n            var t1_1 = (u >>> 17 | u << 15) ^\n                (u >>> 19 | u << 13) ^\n                (u >>> 10);\n            u = this.temp[i - 15];\n            var t2_1 = (u >>> 7 | u << 25) ^\n                (u >>> 18 | u << 14) ^\n                (u >>> 3);\n            this.temp[i] = (t1_1 + this.temp[i - 7] | 0) +\n                (t2_1 + this.temp[i - 16] | 0);\n        }\n        var t1 = (((((state4 >>> 6 | state4 << 26) ^\n            (state4 >>> 11 | state4 << 21) ^\n            (state4 >>> 25 | state4 << 7))\n            + ((state4 & state5) ^ (~state4 & state6))) | 0)\n            + ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) | 0;\n        var t2 = (((state0 >>> 2 | state0 << 30) ^\n            (state0 >>> 13 | state0 << 19) ^\n            (state0 >>> 22 | state0 << 10)) + ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) | 0;\n        state7 = state6;\n        state6 = state5;\n        state5 = state4;\n        state4 = (state3 + t1) | 0;\n        state3 = state2;\n        state2 = state1;\n        state1 = state0;\n        state0 = (t1 + t2) | 0;\n    }\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n};\n","var AWS = require('../core');\nvar util = require('../util');\nvar QueryParamSerializer = require('../query/query_param_serializer');\nvar Shape = require('../model/shape');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var operation = req.service.api.operations[req.operation];\n  var httpRequest = req.httpRequest;\n  httpRequest.headers['Content-Type'] =\n    'application/x-www-form-urlencoded; charset=utf-8';\n  httpRequest.params = {\n    Version: req.service.api.apiVersion,\n    Action: operation.name\n  };\n\n  // convert the request parameters into a list of query params,\n  // e.g. Deeply.NestedParam.0.Name=value\n  var builder = new QueryParamSerializer();\n  builder.serialize(req.params, operation.input, function(name, value) {\n    httpRequest.params[name] = value;\n  });\n  httpRequest.body = util.queryParamsToString(httpRequest.params);\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var data, body = resp.httpResponse.body.toString();\n  if (body.match('<UnknownOperationException')) {\n    data = {\n      Code: 'UnknownOperation',\n      Message: 'Unknown operation ' + resp.request.operation\n    };\n  } else {\n    try {\n      data = new AWS.XML.Parser().parse(body);\n    } catch (e) {\n      data = {\n        Code: resp.httpResponse.statusCode,\n        Message: resp.httpResponse.statusMessage\n      };\n    }\n  }\n\n  if (data.requestId && !resp.requestId) resp.requestId = data.requestId;\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var shape = operation.output || {};\n  var origRules = shape;\n\n  if (origRules.resultWrapper) {\n    var tmp = Shape.create({type: 'structure'});\n    tmp.members[origRules.resultWrapper] = shape;\n    tmp.memberNames = [origRules.resultWrapper];\n    util.property(shape, 'name', shape.resultWrapper);\n    shape = tmp;\n  }\n\n  var parser = new AWS.XML.Parser();\n\n  // TODO: Refactor XML Parser to parse RequestId from response.\n  if (shape && shape.members && !shape.members._XAMZRequestId) {\n    var requestIdShape = Shape.create(\n      { type: 'string' },\n      { api: { protocol: 'query' } },\n      'requestId'\n    );\n    shape.members._XAMZRequestId = requestIdShape;\n  }\n\n  var data = parser.parse(resp.httpResponse.body.toString(), shape);\n  resp.requestId = data._XAMZRequestId || data.requestId;\n\n  if (data._XAMZRequestId) delete data._XAMZRequestId;\n\n  if (origRules.resultWrapper) {\n    if (data[origRules.resultWrapper]) {\n      util.update(data, data[origRules.resultWrapper]);\n      delete data[origRules.resultWrapper];\n    }\n  }\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var Shape = require('./shape');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Operation(name, operation, options) {\n  var self = this;\n  options = options || {};\n\n  property(this, 'name', operation.name || name);\n  property(this, 'api', options.api, false);\n\n  operation.http = operation.http || {};\n  property(this, 'endpoint', operation.endpoint);\n  property(this, 'httpMethod', operation.http.method || 'POST');\n  property(this, 'httpPath', operation.http.requestUri || '/');\n  property(this, 'authtype', operation.authtype || '');\n  property(\n    this,\n    'endpointDiscoveryRequired',\n    operation.endpointdiscovery ?\n      (operation.endpointdiscovery.required ? 'REQUIRED' : 'OPTIONAL') :\n    'NULL'\n  );\n\n  memoizedProperty(this, 'input', function() {\n    if (!operation.input) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.input, options);\n  });\n\n  memoizedProperty(this, 'output', function() {\n    if (!operation.output) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.output, options);\n  });\n\n  memoizedProperty(this, 'errors', function() {\n    var list = [];\n    if (!operation.errors) return null;\n\n    for (var i = 0; i < operation.errors.length; i++) {\n      list.push(Shape.create(operation.errors[i], options));\n    }\n\n    return list;\n  });\n\n  memoizedProperty(this, 'paginator', function() {\n    return options.api.paginators[name];\n  });\n\n  if (options.documentation) {\n    property(this, 'documentation', operation.documentation);\n    property(this, 'documentationUrl', operation.documentationUrl);\n  }\n\n  // idempotentMembers only tracks top-level input shapes\n  memoizedProperty(this, 'idempotentMembers', function() {\n    var idempotentMembers = [];\n    var input = self.input;\n    var members = input.members;\n    if (!input.members) {\n      return idempotentMembers;\n    }\n    for (var name in members) {\n      if (!members.hasOwnProperty(name)) {\n        continue;\n      }\n      if (members[name].isIdempotent === true) {\n        idempotentMembers.push(name);\n      }\n    }\n    return idempotentMembers;\n  });\n\n  memoizedProperty(this, 'hasEventOutput', function() {\n    var output = self.output;\n    return hasEventStream(output);\n  });\n}\n\nfunction hasEventStream(topLevelShape) {\n  var members = topLevelShape.members;\n  var payload = topLevelShape.payload;\n\n  if (!topLevelShape.members) {\n    return false;\n  }\n\n  if (payload) {\n    var payloadMember = members[payload];\n    return payloadMember.isEventStream;\n  }\n\n  // check if any member is an event stream\n  for (var name in members) {\n    if (!members.hasOwnProperty(name)) {\n      if (members[name].isEventStream === true) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = Operation;\n","module.exports = {\n  //provide realtime clock for performance measurement\n  now: function now() {\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n      return performance.now();\n    }\n    return Date.now();\n  }\n};\n","var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    if (Object.prototype.hasOwnProperty.call(regionConfig.rules, key)) {\n      var config = regionConfig.rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set dualstack endpoint\n      if (service.config.useDualstack && util.isDualstackAvailable(service)) {\n        config = util.copy(config);\n        config.endpoint = config.endpoint.replace(\n          /{service}\\.({region}\\.)?/,\n          '{service}.dualstack.{region}.'\n        );\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) config.signatureVersion = 'v4';\n\n      // merge config\n      applyConfig(service, config);\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix\n};\n","var Int64 = require('./int64').Int64;\n\nvar splitMessage = require('./split-message').splitMessage;\n\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\n\n/**\n * @api private\n *\n * @param {Buffer} headers\n */\nfunction parseHeaders(headers) {\n    var out = {};\n    var position = 0;\n    while (position < headers.length) {\n        var nameLength = headers.readUInt8(position++);\n        var name = headers.slice(position, position + nameLength).toString();\n        position += nameLength;\n        switch (headers.readUInt8(position++)) {\n            case 0 /* boolTrue */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: true\n                };\n                break;\n            case 1 /* boolFalse */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: false\n                };\n                break;\n            case 2 /* byte */:\n                out[name] = {\n                    type: BYTE_TAG,\n                    value: headers.readInt8(position++)\n                };\n                break;\n            case 3 /* short */:\n                out[name] = {\n                    type: SHORT_TAG,\n                    value: headers.readInt16BE(position)\n                };\n                position += 2;\n                break;\n            case 4 /* integer */:\n                out[name] = {\n                    type: INT_TAG,\n                    value: headers.readInt32BE(position)\n                };\n                position += 4;\n                break;\n            case 5 /* long */:\n                out[name] = {\n                    type: LONG_TAG,\n                    value: new Int64(headers.slice(position, position + 8))\n                };\n                position += 8;\n                break;\n            case 6 /* byteArray */:\n                var binaryLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: BINARY_TAG,\n                    value: headers.slice(position, position + binaryLength)\n                };\n                position += binaryLength;\n                break;\n            case 7 /* string */:\n                var stringLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: STRING_TAG,\n                    value: headers.slice(\n                        position,\n                        position + stringLength\n                    ).toString()\n                };\n                position += stringLength;\n                break;\n            case 8 /* timestamp */:\n                out[name] = {\n                    type: TIMESTAMP_TAG,\n                    value: new Date(\n                        new Int64(headers.slice(position, position + 8))\n                            .valueOf()\n                    )\n                };\n                position += 8;\n                break;\n            case 9 /* uuid */:\n                var uuidChars = headers.slice(position, position + 16)\n                    .toString('hex');\n                position += 16;\n                out[name] = {\n                    type: UUID_TAG,\n                    value: uuidChars.substr(0, 8) + '-' +\n                        uuidChars.substr(8, 4) + '-' +\n                        uuidChars.substr(12, 4) + '-' +\n                        uuidChars.substr(16, 4) + '-' +\n                        uuidChars.substr(20)\n                };\n                break;\n            default:\n                throw new Error('Unrecognized header type tag');\n        }\n    }\n    return out;\n}\n\nfunction parseMessage(message) {\n    var parsed = splitMessage(message);\n    return { headers: parseHeaders(parsed.headers), body: parsed.body };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseMessage: parseMessage\n};\n","var Hmac = require('./browserHmac');\nvar Md5 = require('./browserMd5');\nvar Sha1 = require('./browserSha1');\nvar Sha256 = require('./browserSha256');\n\n/**\n * @api private\n */\nmodule.exports = exports = {\n    createHash: function createHash(alg) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Md5();\n      } else if (alg === 'sha256') {\n        return new Sha256();\n      } else if (alg === 'sha1') {\n        return new Sha1();\n      }\n\n      throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createHmac: function createHmac(alg, key) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Hmac(Md5, key);\n      } else if (alg === 'sha256') {\n        return new Hmac(Sha256, key);\n      } else if (alg === 'sha1') {\n        return new Hmac(Sha1, key);\n      }\n\n      throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createSign: function() {\n      throw new Error('createSign is not implemented in the browser');\n    }\n  };\n","var Collection = require('./collection');\nvar Operation = require('./operation');\nvar Shape = require('./shape');\nvar Paginator = require('./paginator');\nvar ResourceWaiter = require('./resource_waiter');\nvar metadata = require('../../apis/metadata.json');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Api(api, options) {\n  var self = this;\n  api = api || {};\n  options = options || {};\n  options.api = this;\n\n  api.metadata = api.metadata || {};\n\n  var serviceIdentifier = options.serviceIdentifier;\n  delete options.serviceIdentifier;\n\n  property(this, 'isApi', true, false);\n  property(this, 'apiVersion', api.metadata.apiVersion);\n  property(this, 'endpointPrefix', api.metadata.endpointPrefix);\n  property(this, 'signingName', api.metadata.signingName);\n  property(this, 'globalEndpoint', api.metadata.globalEndpoint);\n  property(this, 'signatureVersion', api.metadata.signatureVersion);\n  property(this, 'jsonVersion', api.metadata.jsonVersion);\n  property(this, 'targetPrefix', api.metadata.targetPrefix);\n  property(this, 'protocol', api.metadata.protocol);\n  property(this, 'timestampFormat', api.metadata.timestampFormat);\n  property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);\n  property(this, 'abbreviation', api.metadata.serviceAbbreviation);\n  property(this, 'fullName', api.metadata.serviceFullName);\n  property(this, 'serviceId', api.metadata.serviceId);\n  if (serviceIdentifier && metadata[serviceIdentifier]) {\n      property(this, 'xmlNoDefaultLists', metadata[serviceIdentifier].xmlNoDefaultLists, false);\n  }\n\n  memoizedProperty(this, 'className', function() {\n    var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;\n    if (!name) return null;\n\n    name = name.replace(/^Amazon|AWS\\s*|\\(.*|\\s+|\\W+/g, '');\n    if (name === 'ElasticLoadBalancing') name = 'ELB';\n    return name;\n  });\n\n  function addEndpointOperation(name, operation) {\n    if (operation.endpointoperation === true) {\n      property(self, 'endpointOperation', util.string.lowerFirst(name));\n    }\n    if (operation.endpointdiscovery && !self.hasRequiredEndpointDiscovery) {\n      property(\n        self,\n        'hasRequiredEndpointDiscovery',\n        operation.endpointdiscovery.required === true\n      );\n    }\n  }\n\n  property(this, 'operations', new Collection(api.operations, options, function(name, operation) {\n    return new Operation(name, operation, options);\n  }, util.string.lowerFirst, addEndpointOperation));\n\n  property(this, 'shapes', new Collection(api.shapes, options, function(name, shape) {\n    return Shape.create(shape, options);\n  }));\n\n  property(this, 'paginators', new Collection(api.paginators, options, function(name, paginator) {\n    return new Paginator(name, paginator, options);\n  }));\n\n  property(this, 'waiters', new Collection(api.waiters, options, function(name, waiter) {\n    return new ResourceWaiter(name, waiter, options);\n  }, util.string.lowerFirst));\n\n  if (options.documentation) {\n    property(this, 'documentation', api.documentation);\n    property(this, 'documentationUrl', api.documentationUrl);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Api;\n","/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sts'] = {};\nAWS.STS = Service.defineService('sts', ['2011-06-15']);\nrequire('../lib/services/sts');\nObject.defineProperty(apiLoader.services['sts'], '2011-06-15', {\n  get: function get() {\n    var model = require('../apis/sts-2011-06-15.min.json');\n    model.paginators = require('../apis/sts-2011-06-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.STS;\n","var AWS = require('./core');\n\n/**\n * Represents your AWS security credentials, specifically the\n * {accessKeyId}, {secretAccessKey}, and optional {sessionToken}.\n * Creating a `Credentials` object allows you to pass around your\n * security information to configuration and service objects.\n *\n * Note that this class typically does not need to be constructed manually,\n * as the {AWS.Config} and {AWS.Service} classes both accept simple\n * options hashes with the three keys. These structures will be converted\n * into Credentials objects automatically.\n *\n * ## Expiring and Refreshing Credentials\n *\n * Occasionally credentials can expire in the middle of a long-running\n * application. In this case, the SDK will automatically attempt to\n * refresh the credentials from the storage location if the Credentials\n * class implements the {refresh} method.\n *\n * If you are implementing a credential storage location, you\n * will want to create a subclass of the `Credentials` class and\n * override the {refresh} method. This method allows credentials to be\n * retrieved from the backing store, be it a file system, database, or\n * some network storage. The method should reset the credential attributes\n * on the object.\n *\n * @!attribute expired\n *   @return [Boolean] whether the credentials have been expired and\n *     require a refresh. Used in conjunction with {expireTime}.\n * @!attribute expireTime\n *   @return [Date] a time when credentials should be considered expired. Used\n *     in conjunction with {expired}.\n * @!attribute accessKeyId\n *   @return [String] the AWS access key ID\n * @!attribute secretAccessKey\n *   @return [String] the AWS secret access key\n * @!attribute sessionToken\n *   @return [String] an optional AWS session token\n */\nAWS.Credentials = AWS.util.inherit({\n  /**\n   * A credentials object can be created using positional arguments or an options\n   * hash.\n   *\n   * @overload AWS.Credentials(accessKeyId, secretAccessKey, sessionToken=null)\n   *   Creates a Credentials object with a given set of credential information\n   *   as positional arguments.\n   *   @param accessKeyId [String] the AWS access key ID\n   *   @param secretAccessKey [String] the AWS secret access key\n   *   @param sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials('akid', 'secret', 'session');\n   * @overload AWS.Credentials(options)\n   *   Creates a Credentials object with a given set of credential information\n   *   as an options hash.\n   *   @option options accessKeyId [String] the AWS access key ID\n   *   @option options secretAccessKey [String] the AWS secret access key\n   *   @option options sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials({\n   *       accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'session'\n   *     });\n   */\n  constructor: function Credentials() {\n    // hide secretAccessKey from being displayed with util.inspect\n    AWS.util.hideProperties(this, ['secretAccessKey']);\n\n    this.expired = false;\n    this.expireTime = null;\n    this.refreshCallbacks = [];\n    if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      var creds = arguments[0].credentials || arguments[0];\n      this.accessKeyId = creds.accessKeyId;\n      this.secretAccessKey = creds.secretAccessKey;\n      this.sessionToken = creds.sessionToken;\n    } else {\n      this.accessKeyId = arguments[0];\n      this.secretAccessKey = arguments[1];\n      this.sessionToken = arguments[2];\n    }\n  },\n\n  /**\n   * @return [Integer] the number of seconds before {expireTime} during which\n   *   the credentials will be considered expired.\n   */\n  expiryWindow: 15,\n\n  /**\n   * @return [Boolean] whether the credentials object should call {refresh}\n   * @note Subclasses should override this method to provide custom refresh\n   *   logic.\n   */\n  needsRefresh: function needsRefresh() {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n\n    if (this.expireTime && adjustedTime > this.expireTime) {\n      return true;\n    } else {\n      return this.expired || !this.accessKeyId || !this.secretAccessKey;\n    }\n  },\n\n  /**\n   * Gets the existing credentials, refreshing them if they are not yet loaded\n   * or have expired. Users should call this method before using {refresh},\n   * as this will not attempt to reload credentials when they are already\n   * loaded into the object.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means either credentials\n   *   do not need to be refreshed or refreshed credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   */\n  get: function get(callback) {\n    var self = this;\n    if (this.needsRefresh()) {\n      this.refresh(function(err) {\n        if (!err) self.expired = false; // reset expired flag\n        if (callback) callback(err);\n      });\n    } else if (callback) {\n      callback();\n    }\n  },\n\n  /**\n   * @!method  getPromise()\n   *   Returns a 'thenable' promise.\n   *   Gets the existing credentials, refreshing them if they are not yet loaded\n   *   or have expired. Users should call this method before using {refresh},\n   *   as this will not attempt to reload credentials when they are already\n   *   loaded into the object.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means either credentials do not need to be refreshed or refreshed\n   *     credentials information has been loaded into the object (as the\n   *     `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `get` call.\n   *   @example Calling the `getPromise` method.\n   *     var promise = credProvider.getPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * @!method  refreshPromise()\n   *   Returns a 'thenable' promise.\n   *   Refreshes the credentials. Users should call {get} before attempting\n   *   to forcibly refresh credentials.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means refreshed credentials information has been loaded into the object\n   *     (as the `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Calling the `refreshPromise` method.\n   *     var promise = credProvider.refreshPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * Refreshes the credentials. Users should call {get} before attempting\n   * to forcibly refresh credentials.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means refreshed\n   *   credentials information has been loaded into the object (as the\n   *   `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @note Subclasses should override this class to reset the\n   *   {accessKeyId}, {secretAccessKey} and optional {sessionToken}\n   *   on the credentials object and then call the callback with\n   *   any error information.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.expired = false;\n    callback();\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  coalesceRefresh: function coalesceRefresh(callback, sync) {\n    var self = this;\n    if (self.refreshCallbacks.push(callback) === 1) {\n      self.load(function onLoad(err) {\n        AWS.util.arrayEach(self.refreshCallbacks, function(callback) {\n          if (sync) {\n            callback(err);\n          } else {\n            // callback could throw, so defer to ensure all callbacks are notified\n            AWS.util.defer(function () {\n              callback(err);\n            });\n          }\n        });\n        self.refreshCallbacks.length = 0;\n      });\n    }\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    callback();\n  }\n});\n\n/**\n * @api private\n */\nAWS.Credentials.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);\n  this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.Credentials.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getPromise;\n  delete this.prototype.refreshPromise;\n};\n\nAWS.util.addPromises(AWS.Credentials);\n","function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject; bindObject = done;\n    done = finalState; finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function(err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;\n      else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;\n      else return done ? done.call(bindObject) : null;\n    }\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState; acceptState = null; failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState; failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = { accept: acceptState, fail: failState, fn: fn };\n  return this;\n};\n\n/**\n * @api private\n */\nmodule.exports = AcceptorStateMachine;\n","var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (params === undefined) return;\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params, payloadShape);\n      applyContentTypeHeader(req);\n    } else { // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    var body = builder.build(req.params, input);\n    if (body !== '{}' || req.httpRequest.method !== 'GET') { //don't send empty body for GET method\n      req.httpRequest.body = body;\n    }\n    applyContentTypeHeader(req);\n  }\n}\n\nfunction applyContentTypeHeader(req, isBinary) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on HEAD/DELETE\n  if (['HEAD', 'DELETE'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var hashUtils = require('./browserHashUtils');\n\n/**\n * @api private\n */\nfunction Hmac(hashCtor, secret) {\n    this.hash = new hashCtor();\n    this.outer = new hashCtor();\n\n    var inner = bufferFromSecret(hashCtor, secret);\n    var outer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    outer.set(inner);\n\n    for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n    }\n\n    this.hash.update(inner);\n    this.outer.update(outer);\n\n    // Zero out the copied key buffer.\n    for (var i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Hmac;\n\nHmac.prototype.update = function (toHash) {\n    if (hashUtils.isEmptyData(toHash) || this.error) {\n        return this;\n    }\n\n    try {\n        this.hash.update(hashUtils.convertToBuffer(toHash));\n    } catch (e) {\n        this.error = e;\n    }\n\n    return this;\n};\n\nHmac.prototype.digest = function (encoding) {\n    if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n    }\n\n    return this.outer.digest(encoding);\n};\n\nfunction bufferFromSecret(hashCtor, secret) {\n    var input = hashUtils.convertToBuffer(secret);\n    if (input.byteLength > hashCtor.BLOCK_SIZE) {\n        var bufferHash = new hashCtor;\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n"],"sourceRoot":""}