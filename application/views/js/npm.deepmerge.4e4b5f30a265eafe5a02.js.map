{"version":3,"sources":["webpack:///./node_modules/deepmerge/dist/cjs.js"],"names":["isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneIfNecessary","optionsArgument","clone","deepmerge","defaultArrayMerge","target","source","destination","slice","forEach","e","i","indexOf","push","mergeObject","keys","key","sourceIsArray","targetIsArray","options","arrayMerge","sourceAndTargetTypesMatch","all","array","length","Error","reduce","prev","next","deepmerge_1","module","exports"],"mappings":"iHAEA,IAAIA,EAAoB,SAA2BC,GAClD,OAAOC,EAAgBD,KAClBE,EAAUF,IAGhB,SAASC,EAAgBD,GACxB,QAASA,GAA0B,kBAAVA,EAG1B,SAASE,EAAUF,GAClB,IAAIG,EAAcC,OAAOC,UAAUC,SAASC,KAAKP,GAEjD,MAAuB,oBAAhBG,GACa,kBAAhBA,GACAK,EAAeR,GAIpB,IAAIS,EAAiC,oBAAXC,QAAyBA,OAAOC,IACtDC,EAAqBH,EAAeC,OAAOC,IAAI,iBAAmB,MAEtE,SAASH,EAAeR,GACvB,OAAOA,EAAMa,WAAaD,EAG3B,SAASE,EAAYC,GACjB,OAAOC,MAAMC,QAAQF,GAAO,GAAK,GAGrC,SAASG,EAAiBlB,EAAOmB,GAC7B,IAAIC,EAAQD,IAA6C,IAA1BA,EAAgBC,MAC/C,OAAQA,GAASrB,EAAkBC,GAAUqB,EAAUP,EAAYd,GAAQA,EAAOmB,GAAmBnB,EAGzG,SAASsB,EAAkBC,EAAQC,EAAQL,GACvC,IAAIM,EAAcF,EAAOG,QAUzB,OATAF,EAAOG,SAAQ,SAASC,EAAGC,GACO,qBAAnBJ,EAAYI,GACnBJ,EAAYI,GAAKX,EAAiBU,EAAGT,GAC9BpB,EAAkB6B,GACzBH,EAAYI,GAAKR,EAAUE,EAAOM,GAAID,EAAGT,IACX,IAAvBI,EAAOO,QAAQF,IACtBH,EAAYM,KAAKb,EAAiBU,EAAGT,OAGtCM,EAGX,SAASO,EAAYT,EAAQC,EAAQL,GACjC,IAAIM,EAAc,GAalB,OAZI1B,EAAkBwB,IAClBnB,OAAO6B,KAAKV,GAAQI,SAAQ,SAASO,GACjCT,EAAYS,GAAOhB,EAAiBK,EAAOW,GAAMf,MAGzDf,OAAO6B,KAAKT,GAAQG,SAAQ,SAASO,GAC5BnC,EAAkByB,EAAOU,KAAUX,EAAOW,GAG3CT,EAAYS,GAAOb,EAAUE,EAAOW,GAAMV,EAAOU,GAAMf,GAFvDM,EAAYS,GAAOhB,EAAiBM,EAAOU,GAAMf,MAKlDM,EAGX,SAASJ,EAAUE,EAAQC,EAAQL,GAC/B,IAAIgB,EAAgBnB,MAAMC,QAAQO,GAC9BY,EAAgBpB,MAAMC,QAAQM,GAC9Bc,EAAUlB,GAAmB,CAAEmB,WAAYhB,GAC3CiB,EAA4BJ,IAAkBC,EAElD,GAAKG,EAEE,IAAIJ,EAAe,CACtB,IAAIG,EAAaD,EAAQC,YAAchB,EACvC,OAAOgB,EAAWf,EAAQC,EAAQL,GAElC,OAAOa,EAAYT,EAAQC,EAAQL,GALnC,OAAOD,EAAiBM,EAAQL,GASxCE,EAAUmB,IAAM,SAAsBC,EAAOtB,GACzC,IAAKH,MAAMC,QAAQwB,IAAUA,EAAMC,OAAS,EACxC,MAAM,IAAIC,MAAM,gEAIpB,OAAOF,EAAMG,QAAO,SAASC,EAAMC,GAC/B,OAAOzB,EAAUwB,EAAMC,EAAM3B,OAIrC,IAAI4B,EAAc1B,EAElB2B,EAAOC,QAAUF","file":"js/npm.deepmerge.4e4b5f30a265eafe5a02.js","sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"sourceRoot":""}